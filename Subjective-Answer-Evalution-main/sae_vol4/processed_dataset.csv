id,question,desired_answer,student_answer,score_me,score_other,score_avg,wmd_score,cosine_similarity
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,high risk problems are address in the prototype program to make sure that the program is feasible.  a prototype may also be used to show a company that the software can be possibly programmed.,4.0,1,2.5,1.040137190307387,0.1186204397398836
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,to simulate portions of the desired final product with a quick and easy program that does a small specific job. it is a way to help see what the problem is and how you may solve it in the final project.,5.0,4,4.5,0.9774173428943957,0.32614334652005855
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,a prototype program simulates the behaviors of portions of the desired software product to allow for error checking.,5.0,3,4.0,0.7128474695961553,0.5032094638851166
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,"defined in the specification phase a prototype stimulates the behavior of portions of the desired software product.  meaning, the role of a prototype is a temporary solution until the program itself is refined to be used extensively in problem solving.",5.0,1,3.0,0.8912357049567587,0.3687668856770778
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,it is used to let the users have a first idea of the completed program and allow the clients to evaluate the program. this can generate much feedback including software specifications and project estimations of the total project.,3.0,5,4.0,0.966284251728405,0.1518583605714812
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,to find problem and errors in a program before it is finalized,2.0,1,1.5,1.2196409538157444,0.021750371907577202
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,"to address major issues in the creation of the program. there is no way to account for all possible bugs in the program, but it is possible to prove the program is tangible.",3.0,2,2.5,1.0536309177851768,0.08777365319297141
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,you can break the whole program into prototype programs to simulate parts of the final program,5.0,2,3.5,0.942953712591772,0.18967492943331865
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,#name?,5.0,1,3.0,inf,0.0
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,simulating the behavior of only a portion of the desired software product.,5.0,2,3.5,0.4821699090632714,0.46545133770492764
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,a program that stimulates the behavior of portions of the desired software product.,5.0,1,3.0,0.5422388022276298,0.6115655417729859
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,a program that simulates the behavior of portions of the desired software product.,5.0,2,3.5,0.4829662431347259,0.6250898165686365
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,to lay out the basics and give you a starting point in the actual problem solving.,2.0,5,3.5,1.0498198477311074,0.05141336993897917
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,to simulate problem solving for parts of the problem,4.0,3,3.5,0.8800689232375231,0.23653852909775794
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,a prototype program provides a basic groundwork from which to further enhance and improve a solution to a problem.,2.0,1,1.5,1.2144260655782215,0.03029072851446119
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,"a prototype program is a part of the specification phase of software problem solvin.  it's employed to illustrate how the key problem or problems will be solved in a program, and sometimes serves as a base program to expand upon.",4.0,3,3.5,1.1143184853965102,0.13353539411516474
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,program that simulates the behavior of portions of the desired software product,5.0,2,3.5,0.5538538624742266,0.6250898165686365
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,it provides a limited proof of concept to verify with the client before actually programming the whole application.,2.0,5,3.5,1.0473785360276306,0.0663350944926646
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,it tests the main function of the program while leaving out the finer details.,2.0,4,3.0,0.9474244444449699,0.09133449207635347
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,to get early feedback from users in early stages of development.  to show users a first idea of what the program will do/look like.  to make sure the program will meet requirements before intense programming begins.,3.0,2,2.5,1.1245729790485126,0.07185901814839121
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,it simulates the behavior of portions of the desired software product,5.0,2,3.5,0.4820398038718244,0.6435817924417853
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,it simulates the behavior of portions of the desired software product.,5.0,5,5.0,0.39680447135550106,0.6435817924417853
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,a prototype program is used in problem solving to collect data for the problem.,1.0,1,1.0,1.1055074741933704,0.04049261748775021
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,to ease the understanding of problem under discussion and to ease the understanding of the program itself,2.0,2,2.0,0.9520079074427737,0.1019476826685689
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,it simulates the behavior of portions of the desired software product,5.0,4,4.5,0.4820398038718244,0.6435817924417853
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,the role of a prototype program is to help spot key problems that may arise during the actual programing.,2.0,3,2.5,1.0685262469063355,0.06812226846088021
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,"the prototype program gives a general idea of what the end product will do,   without the time and effort to write out the entire program.",4.0,0,2.0,0.9844097163351586,0.17552835966159513
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,to show that a certain part of the program works as it is supposed to,4.0,5,4.5,1.1021739284595218,0.08894788725518543
1.1,What is the role of a prototype program in problem solving?,to simulate the behaviour of portions of the desired software product.,"prototype programming is an approach to programming that enables one to take an organized approach to developing an effective program with minimal errors and a strategic pattern when solving a problem. i.e. book gave an example of a costumer withdrawing money from a bank, the approach that was taking on a pseudo code level during the ooa/design lvl before proceeding into creating a solution.",3.0,4,3.5,1.1780391430542223,0.045174380432532135
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),refining and possibly the design if the testing phase reveals problems in the design. production can be affected if the program is unworkable in its current form which will lead to a later production time than originally estimated. also affects coding because after testing you may need to rewrite the code for the program to remove errors.,5.0,4,4.5,0.9422830285063848,0.19379427524107673
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),the implementation phase and the maintenance phase are effected,3.0,4,3.5,0.909364268108085,0.3481035615412195
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"verification, coding, refining the solution and maintenance are all influenced by the testing stage.",4.0,1,2.5,0.7727756277146567,0.43093026869406453
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"in rup the stages in the software life cycle are influenced by the testing stage is:  elaboration phase- refined progject vision, iterative devilopment of core system, development of system requirements, more accurate time and cost estimates.  construction phase- iterative development of remaining system.  transition phase-testing and deployment of the system.",2.0,2,2.0,0.9374959723990215,0.29704886169023126
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"refining the solution, production and maintenance are all influenced by the testing stage.",3.0,4,3.5,0.8611091105793798,0.38243788719313454
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"elaboration, construction, and transition are all affected by testing",2.0,3,2.5,1.1285557678309752,0.0811937863930622
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"refining, production, maintenance",3.0,4,3.5,1.3524974690325726,0.0
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),refining the solution,3.0,4,3.5,0.8881163695100837,0.15735306724438794
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),#name?,3.0,1,2.0,inf,0.0
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),refining and coding,5.0,2,3.5,1.2229478064929586,0.16204457713314346
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"the second half of the elaboration phase, construction phase, and the transition phase.",2.0,3,2.5,0.9837151426566222,0.37408969534459063
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"the refining step, the production step, and the maintenance stage.",3.0,3,3.0,0.9553555484136185,0.287227865709874
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"elaboration, construction, transition",2.0,1,1.5,1.326107460625223,0.0
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),refining.,3.0,2,2.5,inf,0.0
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"the testing stage has a direct influence on the final version of a program, being as it is the debugging and finalization of a software revision.",2.0,4,3.0,0.7945384833901923,0.30468353721343255
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"directly: refining, coding.  because refining is right before the testing phase and coding is right after the testing phase.  indirectly: production, maintenance.  because refining occurs before these last two stages in the software life cycle.",5.0,3,4.0,0.8867462069008375,0.27962547559615475
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"testing, refining, production, and maintenance.",3.0,1,2.0,inf,0.1106972012253884
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"depending on how the work is done, testing is spread throughout the  process as to prevent errors from showing up later on due to lack of foresight.",2.0,3,2.5,1.0678636659877259,0.06217392374725836
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"elaboration, construction, and transition.",2.0,1,1.5,inf,0.01479051869494099
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"all stages are influenced except setting the program requirements.  if a test fails, it can change the whole design, implementation, etc of a program as well as the final outcome.",2.0,4,3.0,0.9378394326848758,0.043977254884088664
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"refining, production, and maintenance",3.0,4,3.5,1.3524974690325726,0.016637078200023567
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),coding and refining,5.0,2,3.5,1.2229478064929586,0.16204457713314346
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"refining, production, maintenance.",3.0,3,3.0,inf,0.0
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"removing logical errors, testing for valid data, random data and actual data.",2.0,0,1.0,1.1572880856092866,0.06727584461728194
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),1- specification 2- design 3- risk analysis 4- verification 5- coding 6- testing 7- refining 8- production 9- maintenance,1.0,2,1.5,1.083959688661826,0.11558150141680784
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"refining stage, production stage, and maintenance stage.",3.0,4,3.5,1.287009641244022,0.5739039700422037
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),testing could affect all parts of the life cycle; it could make you go back   to specification if it does not test well.,2.0,1,1.5,1.0488882387005853,0.05679611287634488
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),coding,3.0,0,1.5,1.2700729428327804,0.22159087176572728
1.2,What stages in the software life cycle are influenced by the testing stage?,the testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"the individual components and steps such as  analysis, design, and implementing code  as well as the entire system are tested for execution of the requirements identified during the analysis stage. i.e. main output",1.0,4,2.5,1.005614316468552,0.16007129809466905
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"modularability, the ability to reuse parts of the program later in another program sometimes with completely different goals for the program. also it makes it easier to debug code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debug. good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code. also allows you to use inheritance and polymorphism.",4.0,4,4.0,1.3771287477716745,0.018898373111889813
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"this type of programming is more flexible, making it easier to add and modify the program.  it is also a type of a fail safe program, you check each individual module.  this eliminates redundant code and makes the program easier to read for other programmers.  when debugging the program it is easier to track down the source of a problem within a module rather than a 2 million line program.",5.0,4,4.5,1.3751481247744783,0.022778456082885465
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,the main advantages to object-oriented programming are that existing classes can be reused and program maintenance and verification are easier.,3.0,2,2.5,1.3581013762624001,0.05032115277405518
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,the advantages is that oop allows us to build classes of objects.  three principles that make up oop are:  encapsulation- objects combine data and operations.  inheritance- classes can inherit properties from other classes.  polymorphism- objects can determine appropriate operations at execution time.,2.0,2,2.0,1.3580442709406346,0.01402876854263183
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,some advantages are existing classes can be reused and program maintenance and verification are easier to accomplish.,3.0,1,2.0,1.35589755766431,0.05152886157523955
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,object oriented programming allows programmers to use an object with classes that can be changed and manipulated while not affecting the entire object at once. the classes all hold attrubutes that affect the object.,1.0,5,3.0,1.3524563819763489,0.017137116691670336
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"reusable components, extensibility, maintainability, it reduces large problems into smaller more manageable problems.",4.0,1,2.5,1.3546948766687315,0.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,encapsulation-objects combine data and operations inheritance- classes can inherit properties from other classes polymorphism- objects can determine appropriate operations at execution time,2.0,1,1.5,1.3598496053360536,0.020468533832159203
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,#name?,3.0,4,3.5,inf,0.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,re-usability  and ease of maintenance,3.0,4,3.5,1.3162685375132934,0.03867050043122477
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"one of the main advantages is you can hide inner details a technique known by encapsulation. objects combine the data and operations but you cannot see how it works.   another advantage is you can reuse classes that have been defined earlier in the program, a method known as inheritance.   finally another advantage is objects can determine appropriate operations at execution time a technique known as polymorphism.",5.0,5,5.0,1.3634908344235888,0.011320129193415997
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"existing classes can be reused, and program maintenance and verification are easier.",3.0,2,2.5,1.353059418504528,0.06604253707141032
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,using different modules allows for easier debugging,2.0,1,1.5,1.3251494268895374,0.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"data encapsulation concept,the use of functions or methods to manipulate data.",3.0,1,2.0,1.306902729277783,0.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"modular, reusable code, allowing faster deployment of solutions, and a more general view of a solution.",5.0,2,3.5,1.3392014549801743,0.025437491973078458
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"coding and debugging programs are usually easier, as either the compiler will specify the object that is working incorrectly, or the function an object was assigned to will be easier to identify.  the code itself also looks more organized and is easier to read and will help to avoid redundant coding.  post-programming maintenance is also easier.  also, modules can be reused several times in other programs without too much hassle.   abstraction is the art of breaking down one big problem into smaller, simpler problems and solving them.  many of the smaller problems are shared between unique complex problems, and creating modules to these solve these smaller repeated problems can save time when you encounter them again.",5.0,5,5.0,1.348509911827196,0.09249214056079758
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"variables can remain private. the code is easily modified and reusable, as well as easily implemented. not to mention easier to read and follow along as an observer.",4.0,5,4.5,1.3756392566722648,0.036145836767158046
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,data abstraction and control... it is possible to isolate elements from other elements a lot easier and prevent tampering of data.,3.0,3,3.0,1.2571105630795762,0.2064469291536557
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,encapsulation - objects use operations without knowing how the operation works. inheritance - cuts redundancy by reusing earlier classes. polymorphism - objects select the correct operation to use in the situation.,5.0,4,4.5,1.3378822822535517,0.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"they make it easier to reuse and adapt previously written code and they separate complex programs into smaller, easier to understand classes.",5.0,0,2.5,1.3497534242320879,0.04060440552093709
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"existing classes can be reused, program maintenance and verification are easier",3.0,2,2.5,1.3524569712027346,0.033851910197129444
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"existing classes can be feused, program maintenance and verification are easier",3.0,0,1.5,1.3524569712027346,0.03260903640470708
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"the main advantages to object-oriented programming  is data abstraction, easier maintenance, and re-usability.",5.0,3,4.0,1.3618221818973788,0.21760807310451855
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,existing classes can be reused program maintenance and verifications are easy,3.0,3,3.0,1.3500439473601413,0.03197524429839164
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,1- existing classes can be reused 2- program maintenance and verification are easier,3.0,2,2.5,1.3536101611864257,0.033851910197129444
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,information can be hidden. it is easier to debug. programming is easier and more manageable.,3.0,4,3.5,1.3624478826298494,0.02646949221479002
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"existing classes can be reused, program maintenance and verification are   easier.",3.0,1,2.0,1.353059418504528,0.033851910197129444
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,existing classes can be reused program maintenance and verification are easier,3.0,3,3.0,1.3450063229968001,0.033851910197129444
1.3,What are the main advantages associated with object-oriented programming?,abstraction and reusability.,"well for one encapsulation the values of the variables inside an object are private, unless methods are written to pass info outside of the object. as well as inheritance where each subclass inherits all variables and methods of its super class.  example in the book included obj clock and how obj alarm would still use clock from the first class.",3.0,0,1.5,1.3654409137349486,0.024441810786586395
1.4,Where do C++ programs begin to execute?,at the main function.,at function ‘int main ()’,5.0,5,5.0,0.4365139979515862,0.7279479681617366
1.4,Where do C++ programs begin to execute?,at the main function.,the function main().,5.0,2,3.5,0.8550829301069468,0.8510763168805537
1.4,Where do C++ programs begin to execute?,at the main function.,c++ programs begin to execute in the main method.,5.0,0,2.5,0.82896967600346,0.2749187554895491
1.4,Where do C++ programs begin to execute?,at the main function.,a c++ program will begin to execute at the main() function.,5.0,3,4.0,0.8721003975534345,0.528471731014104
1.4,Where do C++ programs begin to execute?,at the main function.,they begin in the main() function.,5.0,5,5.0,0.9046068729086731,0.4736922255526872
1.4,Where do C++ programs begin to execute?,at the main function.,int main(),5.0,0,2.5,1.341551778997444,0.4481618193306861
1.4,Where do C++ programs begin to execute?,at the main function.,main method,5.0,3,4.0,0.8850663325415129,0.498164965204733
1.4,Where do C++ programs begin to execute?,at the main function.,in the testing phase,0.0,2,1.0,0.9292579169434121,0.04670498159834944
1.4,Where do C++ programs begin to execute?,at the main function.,#name?,5.0,1,3.0,inf,0.0
1.4,Where do C++ programs begin to execute?,at the main function.,main,5.0,5,5.0,0.8292485863098882,0.703967927225976
1.4,Where do C++ programs begin to execute?,at the main function.,they begin to execute at the funcion main().,5.0,2,3.5,0.7760239125310409,0.38282031966174407
1.4,Where do C++ programs begin to execute?,at the main function.,the main method.,5.0,4,4.5,0.4135016465062493,0.5423571574833062
1.4,Where do C++ programs begin to execute?,at the main function.,at the root,0.0,1,0.5,0.42180464672418144,0.3813863865231881
1.4,Where do C++ programs begin to execute?,at the main function.,in the main() function.,5.0,0,2.5,0.7450465944583717,0.7817606636413162
1.4,Where do C++ programs begin to execute?,at the main function.,c++ programs begin execution at main.,5.0,2,3.5,0.9993484792745384,0.4188141900361422
1.4,Where do C++ programs begin to execute?,at the main function.,in the main function..?,5.0,1,3.0,0.3385473799021735,0.7817606636413162
1.4,Where do C++ programs begin to execute?,at the main function.,"at the ""main()"" function",5.0,4,4.5,0.43297791520005374,1.0000000000000002
1.4,Where do C++ programs begin to execute?,at the main function.,the main function.,5.0,3,4.0,0.4135016465062493,0.8510763168805537
1.4,Where do C++ programs begin to execute?,at the main function.,the function main,5.0,2,3.5,0.4565789038152386,0.8510763168805537
1.4,Where do C++ programs begin to execute?,at the main function.,"after loading the required include statements and libraries, the main method begins the execution.",5.0,4,4.5,0.8272579487483815,0.21907939480131156
1.4,Where do C++ programs begin to execute?,at the main function.,main function,5.0,0,2.5,0.8697741124390002,0.8150004885502249
1.4,Where do C++ programs begin to execute?,at the main function.,main,5.0,2,3.5,0.8292485863098882,0.703967927225976
1.4,Where do C++ programs begin to execute?,at the main function.,c++ programs begin execution at the main function.,5.0,0,2.5,0.6619893708249359,0.5256009522525369
1.4,Where do C++ programs begin to execute?,at the main function.,at main,5.0,2,3.5,0.3887537726472422,0.8782026790028988
1.4,Where do C++ programs begin to execute?,at the main function.,they beging to excute at main,5.0,2,3.5,0.6020952731472838,0.3700119258552787
1.4,Where do C++ programs begin to execute?,at the main function.,at the main function  int main() {},5.0,1,3.0,0.5294485099016187,0.8342391929956904
1.4,Where do C++ programs begin to execute?,at the main function.,c++ programs begin execution at the main function.,5.0,2,3.5,0.6619893708249359,0.5256009522525369
1.4,Where do C++ programs begin to execute?,at the main function.,"in the ""main"" function",5.0,1,3.0,0.7715252951022272,0.7817606636413162
1.4,Where do C++ programs begin to execute?,at the main function.,within the main function,5.0,2,3.5,0.6358390429302331,0.5882519144963384
1.5,What is a variable?,a location in memory that can store a value.,variable can be a integer or a string in a program.,1.0,1,1.0,0.8883828850142387,0.14510584331548806
1.5,What is a variable?,a location in memory that can store a value.,"in programming, a structure that holds data and is uniquely named by the programmer. it holds the data assigned to it until a new value is assigned or the program is finished.",4.0,2,3.0,1.083286978963998,0.10749792600245747
1.5,What is a variable?,a location in memory that can store a value.,a variable is a location in memory where a value can be stored.,5.0,2,3.5,0.6621084102416056,0.5790095632940605
1.5,What is a variable?,a location in memory that can store a value.,"variable is a location in the computer's memory, in which a value can be stored and later can retrieve that value.",5.0,5,5.0,0.7275483721488987,0.5648378670383541
1.5,What is a variable?,a location in memory that can store a value.,"a variable is a location in the computer's memory where a value can be stored for use by a program. each variable has a name, a value, a type and a size.",5.0,3,4.0,0.9242637354366434,0.4135170077478421
1.5,What is a variable?,a location in memory that can store a value.,a named object that can hold a numerical or letter value,2.0,2,2.0,0.9979520689596493,0.21383398505256307
1.5,What is a variable?,a location in memory that can store a value.,"it's a sybol or name for a value/number. example: 'a_used_number' can stand for any given number, and the programmer can refer to that number by using the variable name.",3.0,3,3.0,1.0105106237198183,0.16223874283176
1.5,What is a variable?,a location in memory that can store a value.,a variable is a location in the computers memory where a value can be stored for use by a program,5.0,5,5.0,0.883503827395319,0.43012974123052317
1.5,What is a variable?,a location in memory that can store a value.,#name?,3.0,4,3.5,inf,0.0
1.5,What is a variable?,a location in memory that can store a value.,a block of memory that holds a specific type of data,5.0,0,2.5,0.8951972514845112,0.16541432680361362
1.5,What is a variable?,a location in memory that can store a value.,it is a location in the computer's memory where it can be stored for use by a program.,5.0,3,4.0,0.7963367969010633,0.3260786219979157
1.5,What is a variable?,a location in memory that can store a value.,a location in memory where value can be stored.,5.0,5,5.0,0.508327588286647,0.6368859872779269
1.5,What is a variable?,a location in memory that can store a value.,a value/word that can assume any of a set of values,3.0,3,3.0,0.8844241125268476,0.24104598626384455
1.5,What is a variable?,a location in memory that can store a value.,a pointer to a location in memory.,3.0,2,2.5,0.8491348996779808,0.5211365580939786
1.5,What is a variable?,a location in memory that can store a value.,"a variable is the memory address for a specific type of stored data, or from a mathematical perspective, a symbol representing a fixed definition with changing values.",5.0,3,4.0,1.127529047203842,0.05168434632147456
1.5,What is a variable?,a location in memory that can store a value.,a variable is a value that is subject to change in a computer's memory that can be used by programs.  programs can change the value of the variable and recall it later or act on it directly.,5.0,0,2.5,0.9344959048326351,0.29090941278235244
1.5,What is a variable?,a location in memory that can store a value.,a symbol that stands in for a value that may or may not change depending on the program.,3.0,5,4.0,0.9345147681499733,0.1924636690834512
1.5,What is a variable?,a location in memory that can store a value.,"a placeholder to hold information used in the program... for example: int can hold: 1, 2, 3, 4, 68, 72, 256, etc. float can hold: 1.54, 55.55, 1.24, 5.657, 8.8123, et. char can hold: a, b, c, d, e, f, !, 4, 5, 6, p, etc.",4.0,1,2.5,0.9660942426518809,0.07970087395959924
1.5,What is a variable?,a location in memory that can store a value.,a stored value used by the program,4.0,1,2.5,1.1936380525001995,0.18654603139909137
1.5,What is a variable?,a location in memory that can store a value.,"a way to store different values into the program, such as numbers, words, letters, etc.",4.0,1,2.5,1.0712053207536358,0.09664508357194729
1.5,What is a variable?,a location in memory that can store a value.,an object with a location in memory where value can be stored,2.0,4,3.0,0.7605377571503422,0.5503301420142037
1.5,What is a variable?,a location in memory that can store a value.,location in memory where a value can be stored,5.0,1,3.0,0.5809311293161679,0.6368859872779269
1.5,What is a variable?,a location in memory that can store a value.,a variable is an object where data is stored.,2.0,3,2.5,1.2023261400720378,0.0
1.5,What is a variable?,a location in memory that can store a value.,location in memory where a value can be stored.,5.0,1,3.0,0.508327588286647,0.6368859872779269
1.5,What is a variable?,a location in memory that can store a value.,it is a location in memory where value can be stored,5.0,1,3.0,0.6669939475746142,0.5967012641592925
1.5,What is a variable?,a location in memory that can store a value.,a variable is the location in a computer's memory where a value can be stored for use by a program.,5.0,0,2.5,0.8346954010572407,0.44064734340366185
1.5,What is a variable?,a location in memory that can store a value.,a variable is a location in a computers memory where a value can be stored   for use by a program.,5.0,2,3.5,0.8469871381383124,0.4324335925377757
1.5,What is a variable?,a location in memory that can store a value.,a location in memory where data can be stored and retrieved,5.0,4,4.5,0.6527096549402023,0.38733031544452484
1.5,What is a variable?,a location in memory that can store a value.,"is a method or identifier i would say,  we use to bind a data object to memory location; which is then stored in a location that can be accessed when and manipulated later when the variable name is called.",5.0,5,5.0,0.9860081210092758,0.2793638311995744
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"they can be declared right before they are used, but it is a good practice to declare them at the beginning of the program and label what they are food.",1.0,3,2.0,0.8556470886725287,0.24144465370284318
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),in the function main() before using the variable.,1.0,3,2.0,0.9414572845607949,0.07941368912508708
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"local variables are declared inside the method or function they will be used in at the beginning of the method. global variables are declared outside of any function or method, generally before functions are defined.",5.0,1,3.0,0.54242422809763,0.5618101514182805
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),variables are declared where ever it is defined either inside a block locally or outside a block globally.,4.0,2,3.0,0.7851257720013891,0.30097254532642914
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),variables are declared before they are actually used. they can be declared before main() to use globally,3.0,3,3.0,0.7087209108954482,0.4069640676946385
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"for good programing practice they should be declared before main(), but should at least be declared before they are used.",2.0,3,2.5,0.8021099994906241,0.2421569846317091
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"they can be declared globally just before the main method (but also outside of it)... or variables can be subject to only the method they're scoped within, but would still be declared at the beginning of that method (but inside of it).",5.0,4,4.5,0.6721486456316483,0.3944912613827918
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),local variables are declared inside the method while global variables are declared in the body.,5.0,0,2.5,0.7317527274724516,0.6281931796216819
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),#name?,1.0,3,2.0,inf,0.0
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"globally for an entire program, and locally for individual functions (including for statements)",4.0,1,2.5,1.1116717258377495,0.06659006212918961
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),they are usually declared at the beginning before they can be used in the program. they always contain a name and a data type.,2.0,2,2.0,0.7899070828809684,0.32055728860200927
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),inside the method.,2.0,5,3.5,1.0552466219098628,0.15635147884781703
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),at the top,1.0,2,1.5,1.1608881695987883,0.01868091294361117
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),global variables are declared in the body of the code. local variables are declared in the function they are to be used (unless the function is being passed a variable). variables should always be declared before use.,5.0,4,4.5,0.6256102516590593,0.599318254463595
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),variables are usually declared at the beginning of a module of c++ code.,2.0,5,3.5,0.8474912195867278,0.29102833957456575
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"in the main function, usually at the top of code.  they can be declared almost anywhere, but must be declared before the code can use or act upon them.",3.0,5,4.0,0.6823003583366025,0.3893986423087547
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),in the very beginning of the program. before the main() starts.,1.0,3,2.0,1.0763140442147567,0.08971003185921442
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"in the declaration of functions, for statements, and while statements. in the body of if, for, while, do while, statements, in namespaces, headers, etc  ( almost anywhere. ) anywhere in the program, as long as it is on it's own line.",2.0,2,2.0,0.9669406083355432,0.14116137352190353
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),after declaration of the variable's data type.,1.0,4,2.5,1.1270987163675026,0.011439156790499882
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"anywhere in the code, can be at the top, or in the middle of the code, or anywhere.",3.0,2,2.5,0.7278081006596447,0.303933001058939
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),before they are used.,2.0,1,1.5,1.1031125592221647,0.08815515016854036
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),anywhere in the same scope before they are used,3.0,3,3.0,0.8890396590205603,0.2006770461526567
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),variables can be declared in classes and methods.,1.0,1,1.0,0.6021466580981715,0.559433986130285
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),inside the function scope and outside of the function scope in case of global variables,5.0,5,5.0,0.7667867673756782,0.412581868651106
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),global variables are declared in the main function local variables are declared in any other function,3.0,3,3.0,0.6843441289298309,0.6083009093688652
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"variables are usually declared at the very beginning of a c++ program, but can be declared any in the program as long as they appear before they are called upon.",4.0,2,3.0,0.73751428688667,0.4059616893202641
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"variables are declared in the main function, before any operation is   attempted with the variables.",1.0,2,1.5,0.842743187433212,0.40963634376208896
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),"anywhere, but where you declare them depends on where you want them to be accessible (their scope)",4.0,5,4.5,0.9644025250889945,0.10256404362376619
1.6,Where are variables declared in a C++ program?,variables can be declared anywhere in a program. they can be declared inside a function (local variables) or outside the functions (global variables),it depends if it’s a global then they have to be declared out side the source code to be used in every scope however a local variable is one declared in a local function etc. which obviously doesn’t need to be declared outside the variable seeing how it is used for the function or block its being called for.,4.0,4,4.0,0.7752565983016938,0.3808090058916916
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"""the “do” statement first evaluates the condition and then executes the lines of code in the statement 0 or more times. 	the “do while” statement executes the lines of code and then it evaluates the condition. """,4.0,3,3.5,0.9074771969250583,0.2835466395394752
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,do...while statements evaluate whether or not to loop after running the block contained within it at least once. so the main differance is that while statements have a possibility of never being used. do ... while statements on the other hand are always run at least once before evaluating whether to run again.,5.0,3,4.0,0.9811574472618326,0.37372306927586424
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"the main difference between a while and a do...while loop is that the do...while loop always cycles through the loop at least once, but the while loop does not always do so.",5.0,3,4.0,0.9905405987043376,0.36771324481418144
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,while loop used to execute a block of code as long as some condition is true.  a do...while loop used to execute a block of code as long as some condition is satisfied.  the difference between while and do...while is while loop tests its condition before the execution of its contents and the do...while loop tests its condition after the execution of its contents at least once.,5.0,2,3.5,0.9667455162495401,0.3962645546602762
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"the termination condition of a do...while statement is usually at the end of the loop so it will run at least once. as for the while statement, if the condition is false to begin with, then the loop will never run.",5.0,0,2.5,0.8419302939330896,0.4423712049949943
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,a while loop will check the statement to make sure it is true before executing. a do while loop will execute before checking the statement to see if it should run again.,5.0,5,5.0,0.8885161042730403,0.36541145298393246
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a while statement will test the condition of the while loop first - there is a chance the loop will never run. a do...while loop will always run once, and then the while test will determine if it will run again.",5.0,4,4.5,0.9041567817237764,0.35291502118053414
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,a do while loop always executes once. a while loop's conditional statement has to be true for it to run.,5.0,5,5.0,1.0900141696600931,0.3128353818494211
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,#name?,5.0,4,4.5,inf,0.0
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"while statements will evaluate the statement before executing a cycle of the loop, including the first cycle, meaning that a while loop will not always execute. a do...while will run evaluate the statement after running through a cycle of the loop, ensuring that the loop always executes at least one time.",5.0,1,3.0,0.8348980013393602,0.3715874551276555
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,the main difference between a do and a do...while statement is in a do...while statement is the statements in a do block are always executed atleast once.   the while statement will only execute if its condition is true.,5.0,1,3.0,0.7903809093736949,0.5899626229455819
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,the loop of a do...while statement always executes once.,4.0,1,2.5,0.9238575728941428,0.45163969010319116
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a while statement will only process if the statement is met, while a do...while will always process once, then only continue if the statement is met.",5.0,2,3.5,0.8171566853903794,0.4392623262912033
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"do ...while runs the embedded code at least once, the do command does not necessarily",4.0,0,2.0,0.8860482769259771,0.4023685149606998
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"while tests for true first before running, do...while runs once first before checking.",5.0,4,4.5,1.2427291558722182,0.2491317923514863
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,a do...while statement's body always executes at least once.  where as a while statement will not execute at all unless the condition for the while is true.,5.0,4,4.5,0.7324899652101916,0.6266939513069991
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,the statements within the block of the do while loop will always be executed at least once regardless of the conditions. whereas the while loops may never be executed if the conditions are not met.,5.0,4,4.5,0.8661390845643234,0.3620128864468628
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a do... while loop will always run through once, while an while loop performs a test before running through the loop.",5.0,2,3.5,1.0968896891859279,0.27275262515779647
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,a while statement tests the condition before it can start. a do...while statement loops through once before the condition is tested.,5.0,2,3.5,0.8944341863094012,0.35667505637531194
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a while loop terminates at the beginning of the loop, a do/while terminates at the end of the loop.",3.0,4,3.5,0.9247536220831412,0.23963365888679078
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,the loop body always executes at least once,3.0,2,2.5,0.7547887955759076,0.31469833757894633
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"while loop evaluates its expression at the top of its loop and decides if it needs to execute, and the do-while always executes at least once and then evaluates its expression at the bottom of its loop.",5.0,5,5.0,0.9225534535105253,0.31525214465081347
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a do...while statement will always execute the ""do"" piece of code at least once before checking the condition. a while statement will always check the condition first.",5.0,4,4.5,0.663000022086613,0.5997649181461333
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a do-while passes atleast 1 time before checking the condition, however, a while would fail to enter the loop if the condition fails in its first place.",5.0,3,4.0,1.0415988265553142,0.1611772412678099
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a while loop checks if the condition is true or not first, if it was true, it excutes the statement. a do.. while loop executes the statement before it checks the condition. if the condition was true it would excute the statement again. so a do...while loop would excute the statement atleast once.",5.0,4,4.5,0.9545673899270322,0.29942624363266346
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,no answer,0.0,2,1.0,1.2834537081915762,0.0
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a do...while loop will always execute atleast once, a while loop may never   execute depending on teh conditions.",5.0,5,5.0,0.9744434025546568,0.38535874731873343
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"a while loop is pre-check (it checks the condition statement before it executes the code within the while block)  a do while loop is post-check (it checks the condition after the block executes, it runs at least once no matter what the condition statement is)",5.0,1,3.0,0.8911837978015562,0.41552768707659765
1.7,What is the main difference between a while and a do...while statement?,the block inside a do...while statement will execute at least once.,"))     what is the main difference between a while and a do...while statement? the do while construct consists of a block of code and a condition. first, the code within the block is executed, and then the condition is evaluated, this is done until it is proven false. the difference between the while loop is it tests the condition before the code within the block is executed.",5.0,4,4.5,0.980282109973293,0.3244655665438006
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"for us it is usually a set, get, and displaymessge or other messages that tell you what properties a class has but does not reveal its implementations. you could have anything you want in your own class definition.",1.0,4,2.5,1.3389607871418332,0.014061960370081186
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,the attributes of said class. also whether or not it is a subclass. also whether it is public private or protected.,4.0,0,2.0,1.3079736030681641,0.1200034377589558
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,information telling the compiler what data members and member functions belong to the class.,5.0,4,4.5,0.8937755759550001,0.38498010256548726
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"since class is user defined, the body of the declaration can contain members, that can be either data or function declarations, and optionally access specifiers.  example for specifiers would be public, private, and protected.  there is the keyword class and the class body is enclosed with brackets ({}).",5.0,0,2.5,1.2804309590449259,0.1149714702425989
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,an object and data.,1.0,4,2.5,1.3434782521651485,0.23920342447750928
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"it's specific class name, includes only information defined by that class... implementation details... etc.",2.0,1,1.5,1.304113685474989,0.0
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,data members and member functions.,5.0,5,5.0,0.0,0.829647030353929
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,a class definition usually contains the function and its data members,5.0,3,4.0,1.0255671894693372,0.273896157584419
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,data members and member functions,5.0,0,2.5,0.3224671517832639,0.829647030353929
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,member functions,3.0,0,1.5,0.7534275224619057,0.5901046791825881
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,member functions and data members belonging to the class.,5.0,2,3.5,0.6136373730948969,0.5484199125385731
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,a public and private area that includes the functions and variables that are used in the class,5.0,2,3.5,1.3017644681372338,0.1441726409191628
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"the keyword class followed by they class name, on the inside you declare public and private declarations of your class",3.0,3,3.0,1.3341439951323157,0.022154451488195906
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,a class definition typically includes function definitions.,3.0,2,2.5,1.3265344925092792,0.0
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"it begins with class, followed by the class name, then usually a constructor, data members and member functions that delineates the class is included in any class's definition.",5.0,2,3.5,1.142751556746287,0.2723267162671406
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,the data and methods,5.0,4,4.5,0.8593052405174392,0.23093931132170065
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"a constructor, functions, and variables that are accessible to by that class, and possibly other classes depending on how they are done.",5.0,0,2.5,1.3234060882221483,0.1133529791851442
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,member functions and data members.,5.0,3,4.0,0.4271929251779408,0.829647030353929
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"public section and private section, and there must be a semicolon to set the end",1.0,5,3.0,1.341125159683175,0.042815645195770614
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,member funtions and data members,5.0,5,5.0,0.32463567991902326,0.4885936189123221
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,data members and member functions,5.0,2,3.5,0.3224671517832639,0.829647030353929
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,data members and member functions,5.0,5,5.0,0.3224671517832639,0.829647030353929
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"the class name and its public data types such as constructors, methods, functions.",2.0,4,3.0,1.1678057237577968,0.20006340241282444
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"a constructor and several data members, and at least one public data member or method",4.0,2,3.0,0.9662492614295723,0.41689272258936816
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"class name, two curly prenthesis, public and private",1.0,3,2.0,1.369546915779818,0.0309553375380784
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,data members and member functions,5.0,5,5.0,0.3224671517832639,0.829647030353929
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,data and functions,5.0,1,3.0,0.893038728594673,0.5448231152176679
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,functions and data members that belong to the class,5.0,2,3.5,0.9077711347692065,0.4103932290979961
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"class variables, function definitions for the class",5.0,3,4.0,1.3167179933146533,0.0
2.1,What is typically included in a class definition?,data members (attributes) and member functions.,"a class is an expanded concept of a data structure, it holds both the data and the functions being executed",5.0,2,3.5,1.139976317207749,0.20724170703487566
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,data members are the data components of a particular class.  a member function are the functioning components of the class.,1.0,1,1.0,0.8271379570449634,0.22661048908157996
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,a field variable is a variable that is declared as a member of a class. a local variable is avariable that isdeclared local to a method.,1.0,3,2.0,0.9986586479555868,0.18994733438609965
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"data members are declared inside the class, but outside of any member functions. unlike with local variables, each object of the class keeps its own copy of the data members stored in memory.",4.0,4,4.0,0.728017696028836,0.40348589285824654
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,data member are variables that represent an attribute in a class definition.  local variables declared in a function body cannot be used outside of that function body.  when a function terminates the values of its local variables are lost.,4.0,2,3.0,0.7625337675373174,0.29440883513919763
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,a local variable cannot be accessed outside the function in which it is declared. data members normally are private. variables of functions declared private are accessible only to member functions of the class in which they are declared.,5.0,3,4.0,0.6288781202181714,0.3441358588160153
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"a data member is part of a c++ class or structure that stores data of a certain type... a local variable inside a member function is only available inside that function, and can be used to derive a desired outcome.",4.0,5,4.5,0.6089685649909241,0.46399925750275445
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,a local variable can only be accessed within the scope of its declaration.,3.0,1,2.0,0.7248509674903875,0.37377505012623247
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,data members are the atributes of the function and can be used outside the function. local variable can not be used outside the function and the value is lost after the function terminates.,4.0,4,4.0,0.6713442783488507,0.2808181532034684
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"data members are permanent attributes of the class, local variables inside a member function are lost when the scope of the member function ends.",3.0,2,2.5,0.6779106738652119,0.42781429844811314
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,data members are declared in a class definition but outside the bodies of a class's member-function definitions. local variables are declared in a function definition's body,3.0,0,1.5,0.7875046714097398,0.26008925678311867
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"a data member is globally accessible, while a local variable is only accessible inside the member function.",4.0,3,3.5,0.7271445663848868,0.36526458494449576
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,a variable inside a member function can only be accessed inside that member and a data member can be accessed throughought the program.,5.0,1,3.0,0.4372954641148337,0.7230806074375581
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,local variables are used only within the scope of its declaration,5.0,1,3.0,0.9558959629566345,0.1841524632223516
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"a data member is a more general term describing all objects instantiated within a member function.  ""local"" in local variables refers more to the scope of a variable, which may be located in anything from a control structure to a class.  local variables whose scope are in a member function are the same as data members of member functions.",0.0,4,2.0,0.7434428548018288,0.3925011049981365
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,a data member exists permanently in that program's memory as long as it's run.  a local variable inside a member function is temporal and only used to operate in the function and exists as long as the function is run.,2.0,3,2.5,0.7850685256735739,0.24431313051756692
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"local variables can only be used within the function, where as data members can be set to public access and can be used throughout",5.0,3,4.0,0.7141899057442138,0.39282007986563827
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"the local variable is lost once it exits the block of code, while the data member is not.",4.0,3,3.5,0.9015562334522571,0.2021359699044958
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,every member function can access and modify a data member. a local variable can only be used from the line of declaration to the next closing } before it is lost from memory.,4.0,3,3.5,0.6632032057642839,0.37723922333353405
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"data member is accessible to all functions in the class, where local variable is only available to the member function and value is lost when function closes",5.0,3,4.0,0.7196504797824282,0.31583402233333996
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,data members are variables that are declared inside the class definition but outside of the bodies of the class member functions. local variables can only be used within the function declaration.,4.0,3,3.5,0.5388682728906357,0.49938976234370663
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"the data member can be accessed outside of the class, whereas the local variable cannot.",3.0,1,2.0,0.5767137020269096,0.5039018073840413
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"local variables cannot be used outside of that function body. when a function terminates the values of its local variables are lost. where as data members are variables in a class definition, and they exist throughout the life of the object.",5.0,5,5.0,0.727274969709799,0.2738542226592763
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,a local variable in a member function has to be static. a data member can change its value freely.,0.0,2,1.0,0.7399571335161947,0.3607321039037471
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"a local variable is only useable within the function it is defined, whereas a data member is available to any method within its class",5.0,1,3.0,0.7399526006467972,0.23753963445761325
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,variable declared in a function defination's body cannot be used outside of that function.  data members accessible only to member function of that class.,5.0,1,3.0,0.7291636763851473,0.29913470816269894
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"data members   local variables are declared in a function definition’s body. they cannot be used outside of that function body. when a function terminates, the values of its local variables are lost.",5.0,3,4.0,0.7568860538040019,0.252079061529087
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,local variable is only available in the function.,4.0,3,3.5,0.9677792697056973,0.1909749212088818
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,local variables are accessed inside member functions only while data members   can be accessed throughout the class,4.0,1,2.5,0.4012429735335634,0.7569374342145087
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"a data member is accessible anywhere in the class, while i local variable in a member function is only accessible in that particular function, and is freed after the function exits.",5.0,0,2.5,0.7084207309449898,0.2748628329098896
2.2,What is the difference between a data member and a local variable inside a member function?,data members can be accessed from any member functions inside the class defintion. local variables can only be accessed inside the member function that defines them.,"a data member is encapsulated within a class or object,  it is static and can be shared by all instances of that class.  however local variable's are only used from the function or block in which it is declared and not the whole class. other wise they would be called global variables.",3.0,1,2.0,0.7983108337200941,0.29420113036997986
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor initializes an object or objects of a class.  a function of a class performs a task such as display a line of text or do some kind of mathematical operations.,2.0,2,2.0,0.9371043398886506,0.1052336213459234
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","all constructors are functions but not all functions are constructors. also functions can have nearly infinite purposes, while constructors always create an instance of whichever class you are using. you can change how a constructor does something but not what it does. with functions you can change not only the how but also the what.",2.0,2,2.0,0.8483163915182668,0.2393440967168649
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","unlike regular functions, constructors are only used to initialize an object’s data when it is created. constructors must also be given the same name as the class and cannot return any values.",5.0,5,5.0,0.9006818426395445,0.2878684489931742
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor typically used to intialize data members and allocate resources, for instance memory, files, etc.  also a constructor cannot return values.  functions are operations that maybe globally defined.",4.0,0,2.0,0.985401510992331,0.1516910141579785
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","constructors cannot return values, so they cannot specify a return type. normally, constructors are declared public.",3.0,2,2.5,0.9571150676728953,0.27799114761848237
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor is a method that starts new instances of a class. (example: employee employee1(parameters) starts a new instance of object of type employee). a function is simply a module w/in a program that completes its single desired task.,2.0,1,1.5,0.9434005954546995,0.11083983785649182
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor is called whenever a new object of that class is made.,4.0,2,3.0,0.7981936073459706,0.35632489832363146
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor does not return any date and has no return type.  functions can return date or not return data can have a return type.,3.0,1,2.0,0.8434538327165768,0.4309794715068296
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor is automatically called whenever an instance of a class is created, a function must be explicitly called by the user.",4.0,4,4.0,0.6984594693016577,0.4014810339560716
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","constructors cannot return values, so they cannot specify a return type like functions can.",3.0,1,2.0,0.899933608583954,0.30342512371085995
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor is a function used to initialize an object's data when it is created.,4.0,4,4.0,0.868845888969696,0.3171937496517869
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor initialises everything so that nothing is left empty or with random varioubles and a function modifies those variables with data.,2.0,4,3.0,0.966318697653708,0.06611340920978825
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor initialized values at the execution of its instantiation. it provides default values.,4.0,3,3.5,1.147422928320498,0.0442458981977881
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor sets up the default values of variables when an object is instantiated, whereas a function allows interaction with that object.",4.0,2,3.0,0.8390011830068729,0.20003131638161598
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor is used to create an object that can be employed in the main function of a program.  this may or may not execute code along with it.  a function is a set of code that executes when called, but does not create a new object.",3.0,5,4.0,0.8352907646144961,0.24679580815196778
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor initializes data members but the functions actually perform tasks. constructors cant return values either.,3.0,1,2.0,0.8863330918967662,0.22739569594314557
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor does not need a type, and it is used to initialize the variables.",3.0,1,2.0,0.9148387745040495,0.23903430200187728
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",constructors don't have a return type.,3.0,4,3.5,0.9492065600947012,0.443812974288727
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",constructor creates the class object into memory where functions perform actions against that object,2.0,3,2.5,1.013254610192035,0.13612743716542966
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",constructors cannot return values,3.0,3,3.0,1.0929615639196968,0.25818135012536825
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor initializes values and a function usual performs some sort of operation.,2.0,1,1.5,1.0703601205424365,0.06400820961791512
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor is a function used to initialize an object's data when it is created. it's call is made implicitly when the object is created and must be defined with the same name as the class. constructor also cannot return a value like a function can.,5.0,0,2.5,0.8013736448591869,0.33152025946043456
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor is used to create an instance of a class and has the same name as that class. a function cannot have the same name as a class and computes data.,4.0,1,2.5,0.9258506601885852,0.14598526133856304
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor is a function that initializes a class instance, a function performs whatever task it is written for",2.0,0,1.0,0.9217775770321763,0.1268310529250254
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor cannot return values, not even void, but function get a return value.",3.0,2,2.5,0.8177336488904406,0.30183372714983403
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor cannot return values, its not even void. it is used to initialize an object's data when it is created. whereas, a function is created to do a specific task, and it can return values.",5.0,4,4.5,0.6928267993148891,0.4113982242255813
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",a constructor initializes an object. a function is part of an object.,1.0,4,2.5,0.9312936052905377,0.24069701568769752
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.",constructors initialize the data that is then used in the calculations of a   function,2.0,4,3.0,0.9414435581869621,0.12236464434865697
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","a constructor is called when the class is created, a function can be called any time.",4.0,3,3.5,0.7632303088270374,0.4040175395432636
2.3,What is the difference between a constructor and a function?,"a constructor is called whenever an object is created, whereas a function needs to be called explicitely. constructors do not have return type, but functions have to indicate a return type.","constructor is a special block of statements called when an object is created, either when it is declared statically or constructed on the stack. however a function is a portion of code within a larger program, which performs a specific task and independent to the rest of the code.",4.0,3,3.5,0.8898593040159055,0.20288140996992693
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",the compiler creates a default constructor when we do not define one in our class file,5.0,4,4.5,0.6929738773321978,0.40333613775931904
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",during compilation,2.0,3,2.5,1.291708017699626,0.0
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when the class does not explicitly include a constructor.,5.0,5,5.0,0.924982553096053,0.3395279014322815
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when no parameters are set is when a default constructor is used.,3.0,1,2.0,0.7851375858156496,0.422654314035562
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when a class does not explicitly include a constructor.,5.0,1,3.0,1.0476295409067669,0.3265760066026526
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when there are no arguments passed.,1.0,5,3.0,1.120178028004109,0.06708757568076157
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when there is not one already for a specific class,5.0,5,5.0,0.8472640380752884,0.18680232036736136
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when it the programs compiles,2.0,1,1.5,1.0547707406263165,0.017511062205128894
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when a constructor is not provided by the programmer of the class,5.0,3,4.0,0.6533942443877683,0.4509849113981714
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",in any class that does not explicitly include a constructor.,5.0,4,4.5,1.0131349160077785,0.3072628376715552
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",before the main function of the code.,0.0,1,0.5,1.0964499836177641,0.041533107582096954
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",whenevery you dont specifiy your own,5.0,2,3.5,1.2188960024108484,0.0
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when non are provided,5.0,4,4.5,1.181150091442794,0.1311844515058575
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",c++ will create a default constructor when no other constructor is present.,5.0,0,2.5,0.7190012837053474,0.5439460873203654
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.","when no constructor was specified in the constructor's class, but the class is instantiated in a program.",5.0,1,3.0,0.7629085012699713,0.3750089109291237
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.","when no constructor exists when one is needed, a parameterless default constructor is declared.",5.0,0,2.5,0.7063312419369319,0.458742985983075
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.","the compiler creates this automatically for you, unless you specifically create one.",5.0,2,3.5,0.7724021553529307,0.20603834748835517
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",in any class that doesn't explicitly include a constructor.,5.0,1,3.0,1.1205299820126504,0.20776634550199702
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when no user-defined constructor exists,5.0,4,4.5,0.937144865240011,0.3101507301680174
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.","if a class does not explicitly include a constructor, the compiler creates one.",5.0,2,3.5,0.678975230853129,0.5011486492261223
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when you do not provide your own constructor.,5.0,3,4.0,1.077543216803531,0.19431147553385494
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when a class does not explicitly include a constructor.,5.0,0,2.5,1.0476295409067669,0.3265760066026526
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",c++ creates a default constructor during compilation if one is not provided.,5.0,1,3.0,0.5993050641751101,0.5204454382819467
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when a class does not explicitly include a constructor,5.0,5,5.0,0.9176656434104415,0.3265760066026526
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",the compiler will provide one when class does not explictly include a consructor.,5.0,1,3.0,0.7434015422287571,0.22120431819301425
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when the programmer does not explicitly include a constructor,5.0,1,3.0,0.7788463596750991,0.2772937001502166
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when one is not explicitly stated.,5.0,2,3.5,0.9117736674154759,0.12562398167933525
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when one is not explicitly included by a class,5.0,1,3.0,0.8617922009350516,0.20263202448071246
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.",when you dont specify any constructors.,5.0,3,4.0,1.1688026730651682,0.0
2.4,When does C++ create a default constructor?,"if no constructor is provided, the compiler provides one by default. if a constructor is defined for a class, the compiler does not create a default constructor.","at the very beginning when you run a complier, matter a fact in c++ it generates its own default constructor for the class provided if no other constructors have been provided by user",5.0,3,4.0,0.8103610257866342,0.36197206536348636
2.5,How many constructors can be created for a class?,unlimited number.,just one per class.,0.0,1,0.5,1.284128185609441,0.0
2.5,How many constructors can be created for a class?,unlimited number.,as many as you want so long as they have different parameters.,5.0,0,2.5,1.3236675118277619,0.0
2.5,How many constructors can be created for a class?,unlimited number.,"there is no limit to the number of constructors in a class because like functions, constructors can be overloaded.",5.0,3,4.0,1.33669126206747,0.125572635079989
2.5,How many constructors can be created for a class?,unlimited number.,it depends what type of class is being defined.  typically you would have a constructor call for each object.,1.0,2,1.5,1.3243155154163235,0.0
2.5,How many constructors can be created for a class?,unlimited number.,"in c++, the constructor can be overloaded in that there can be more than one constructor for a class, each having different parameters.",5.0,3,4.0,1.343768878652746,0.0
2.5,How many constructors can be created for a class?,unlimited number.,1,0.0,4,2.0,1.3494179752208915,0.0
2.5,How many constructors can be created for a class?,unlimited number.,any number you want,5.0,1,3.0,1.3034342104940149,0.252417703688726
2.5,How many constructors can be created for a class?,unlimited number.,one,0.0,2,1.0,1.3634027278499279,0.0
2.5,How many constructors can be created for a class?,unlimited number.,"by default just one, but they may be overloaded to create as many constructors as necessary",5.0,3,4.0,1.3471929556057538,0.0
2.5,How many constructors can be created for a class?,unlimited number.,as many as you want,5.0,4,4.5,1.3253937243536726,0.0
2.5,How many constructors can be created for a class?,unlimited number.,"as many as you want, with different parameters.",5.0,1,3.0,1.3324180399882661,0.0
2.5,How many constructors can be created for a class?,unlimited number.,infinite,5.0,5,5.0,1.0211095851194456,0.0
2.5,How many constructors can be created for a class?,unlimited number.,as many as you need,5.0,5,5.0,1.3292568978124937,0.0
2.5,How many constructors can be created for a class?,unlimited number.,"as many as are needed, depending on how many variables one wishes to directly modify or leave as default when instantiating an object.",5.0,3,4.0,1.3481223075732056,0.0
2.5,How many constructors can be created for a class?,unlimited number.,"a very large amount of constructors can be created for any given class through overloading.  when two constructors with a different type or number of parameters are created, they are said to be overloaded, and c++ can recognize which constructor to use based on the type of the variables that are passed/returned.",5.0,0,2.5,1.3388658322788023,0.06905875804959218
2.5,How many constructors can be created for a class?,unlimited number.,it depends on the number of objects. each object should have a constructor.,1.0,3,2.0,1.331124247825029,0.16793099810449166
2.5,How many constructors can be created for a class?,unlimited number.,"theoretically unlimited, as long as they are defined by the programmer.",5.0,2,3.5,1.3353166777682548,0.2676232343711617
2.5,How many constructors can be created for a class?,unlimited number.,as many as needed.,5.0,4,4.5,1.351714861770488,0.0
2.5,How many constructors can be created for a class?,unlimited number.,as many as wanted/needed,5.0,5,5.0,1.351714861770488,0.0
2.5,How many constructors can be created for a class?,unlimited number.,several,4.0,2,3.0,1.3890801775446793,0.0
2.5,How many constructors can be created for a class?,unlimited number.,one,0.0,3,1.5,1.3634027278499279,0.0
2.5,How many constructors can be created for a class?,unlimited number.,one,0.0,3,1.5,1.3634027278499279,0.0
2.5,How many constructors can be created for a class?,unlimited number.,there can be infinite constructors as long as the signature is different.,5.0,4,4.5,1.3220149102202141,0.0
2.5,How many constructors can be created for a class?,unlimited number.,that depends on the number of data members in the class,0.0,0,0.0,1.3526794233665629,0.21501313410007453
2.5,How many constructors can be created for a class?,unlimited number.,one,0.0,2,1.0,1.3634027278499279,0.0
2.5,How many constructors can be created for a class?,unlimited number.,you can overload constructors as you need,5.0,2,3.5,1.3079002710484948,0.0
2.5,How many constructors can be created for a class?,unlimited number.,as many as the programmer wants to create.,5.0,4,4.5,1.368695780160787,0.0
2.5,How many constructors can be created for a class?,unlimited number.,one,0.0,4,2.0,1.3634027278499279,0.0
2.5,How many constructors can be created for a class?,unlimited number.,"as many as you want, as long as they each have a unique argument list",5.0,2,3.5,1.3273795891648474,0.0
2.5,How many constructors can be created for a class?,unlimited number.,as many as the user decides to use.,5.0,4,4.5,1.3418290180553107,0.0
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",a function definition does not require any additional information that needs to be passed inside its parenthesis  to execute. while a definition prototype requires more than one parameters to be passed in order to complete its  task.,5.0,1,3.0,1.0251589993774437,0.1545581131265925
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","the function prototype is where the programmer declares that he/she is using a function other than main( ). this is like declaring a variable, the programmer knows that he/she will be using in the future, but has yet to say where they are going to use it, or how. this is answers the question who, it gives the function a name and character. the function prototype, by common practice is placed at the beginning of the program after the #includes and before main( ). the function definition is the guts of the function. this is where the programmer decides what the function is going to do and tells it how to do it. it takes whatever information it is given and performs the operations. it works sort of like the brain, the brain takes in input and based upon that input performs in some way producing an output. the function defintion is placed outside of main( ) and any other functions. a function is its own entity and should be thought of as such.",1.0,2,1.5,0.9080001586851022,0.37780456662215034
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function prototype tells the compiler the function name, return type and the number and type of parameters without revealing the implementations contained in the function definition.",5.0,4,4.5,0.6361713400342237,0.5956226690098201
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",function prototype is a declaration.  function definitions (w/multiple parameters) often require more than one piece of information. to perform their tasks.,3.0,2,2.5,0.9288824642997544,0.20220422562396634
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function prototype is a declaration of a function that tells the compiler the function's name, its return type and the types of its parameters.",5.0,2,3.5,0.6818374999279618,0.5692547960348378
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",a prototype shows only return types and necessary parameters. the definition includes names for those parameters and defines what the object is actually capable of doing.,5.0,0,2.5,0.789768369134563,0.31499827297074384
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",prototype only tells the user what data types go into a function and what type is returned.,5.0,2,3.5,0.9610555011736944,0.21580904849106397
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",function prototype is located in the .h file and only contains the access function name and paramater type.  function definition contains the code for the function to perform its activity.,4.0,1,2.5,0.6003253973320825,0.4692137292645504
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function prototype is used to reference the compiler to a function that will be defined later on, a function definition is the actual function itself, complete with return type, parameters, etc...",4.0,0,2.0,0.6702704970862343,0.5120393017553061
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",a function prototype describes a class's public interface without revealing the class's member function implementations,5.0,0,2.5,0.8801859247561157,0.2258095379195285
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","function definitions are just that, the definition. the prototype is what the compiler uses to check that calls to function are correct.",1.0,2,1.5,0.7573074193029925,0.3190499296771779
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",a prototype does not include any actual code where the function has all the code that is executed in the program.,3.0,4,3.5,0.7854312411587125,0.29569145330358604
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",a prototype declares what will be used in the program and the definition,3.0,0,1.5,0.8669274742952864,0.2620149617842909
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function prototype lays out the name, return type, and the number and types of parameters the function expects to receive in a certain order.  the details for function prototypes are in the function definition.",5.0,5,5.0,0.6511961997235014,0.5564216568776632
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function definition is the code that defines the function placed in the {} brackets that determines that function's operation.  a function prototype shows the function's public interface without exposing implementation.  it shows name, return type and type of paramaters.",5.0,1,3.0,0.7534470729972614,0.46821241326419255
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function prototype is just a declaration of the function existing, and cant be used as an actual function. a function has to be created with a definition within to tell the compiler what the function does.",3.0,4,3.5,0.7423474880858192,0.4491984179231667
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",the prototype creates a framework to call the function definition. while a function definition is where the function is actually programmed out and created into a final product.,5.0,4,4.5,0.7270863580257042,0.3631213505286026
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",a function prototype describes the class's public interface without providing how the function works. a function definition contains the inner workings of the function.,5.0,2,3.5,0.6246383662099437,0.42152344981162837
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","prototype states all functions in that class before compilation, where the definition actually holds the source for the functions",3.0,4,3.5,0.7907479016761195,0.19535272417940017
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","function prototypes tell the compiler the function names, its return type, and the types of its parameters where as, function definitions actually implement the member functions.",5.0,5,5.0,0.669274730182099,0.42760519904999333
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",a function prototype just specifies parameters.  a function definition includes parameters and a code body.,4.0,3,3.5,0.7997540993879605,0.5112144096864464
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",function prototypes describe the class's public interface,5.0,3,4.0,0.8415129224439231,0.1600790191041627
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a prototype only declares name, return type, and input type. a definition also defines the scope, variables, process, and return function",4.0,3,3.5,0.7968181951381893,0.4194490381943613
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function prototype simply declares the functions parameters, the function definition includes any necessary variables and the function's actual code",4.0,5,4.5,0.5624430344238204,0.5902118238825179
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a functgion prototype is a declaration of a function , while function definition specifies what a function does",3.0,1,2.0,0.8866778526661362,0.33273375774565905
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","in a function prototype you include the return type, the name of the function, and its parameters if any are needed.  in a function definition you write the code of what the function will do.",5.0,3,4.0,0.6115952083140314,0.57797948215658
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function definition contains all the code for a function to work. a function prototype just shows the output, input and function name.",5.0,3,4.0,0.7026699860455189,0.43445589149165864
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","function prototype describe the class's public interface without revealing   the class's member function implementations,  function definitions show what   implementations are being done",5.0,0,2.5,0.8394960516088924,0.2337263528302585
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.","a function prototype only names the function, its return type, and it's argument list, while a definition defines the above as well as what the function actually does.",5.0,2,3.5,0.7033196169474288,0.4177669632786793
2.6,What is the difference between a function prototype and a function definition?,"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. the function definition includes the actual body of the function.",function prototype describes a classes interface without reviling whatever is inside as for the function definition can't do that.,5.0,1,3.0,0.8691412727198906,0.2551957377798213
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",the role of a header file list all the functions a class can do while hiding the inner workings of its functions,5.0,0,2.5,1.1299717851010813,0.03889042878561706
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",the main role of header file is it is used to share information among various files.,3.0,2,2.5,1.2303051444867807,0.017501808259491897
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",header files separate files in which classes are defined and allow the compiler to recognize classes when used elsewhere.,4.0,1,2.5,1.2084403893375433,0.029711746056943558
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",no,0.0,5,2.5,1.3553489837237098,0.0
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.","a header file consists of ""reusable"" source code such as a class in a file that by convention has a .h filename extension. this differs from .cpp files that contain ""source-code.""",4.0,4,4.0,1.1981560086299916,0.026805401522867818
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.","to provide information about the contents of a library. it includes the definition of classes, declarations of functions, data types, and constants.",5.0,2,3.5,1.132134355189936,0.06365202519288349
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function.,5.0,1,3.0,1.2113547382064187,0.06708936111256755
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",header files declares the class member functions.,3.0,2,2.5,0.8967888240610127,0.18546337752011682
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",a header file allows for the separation of declaration and implementation into separate files.,5.0,3,4.0,1.2806472273869522,0.019410608808772475
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",the header file has access to the c++ standard library and makes certain classes like class string work.,0.0,2,1.0,1.137170017047952,0.07830415934278989
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",“instruct” the compiler on how to interface with library and user-written components.,2.0,4,3.0,1.225500068289552,0.1554273448752545
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",create a comon area to contain reusable functions.,3.0,2,2.5,1.3123443913432495,0.022599565125911703
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",to declare the functions being used in the classes,3.0,3,3.0,1.1636053037159344,0.03201037896265201
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.","#include ""hat.h""  allows the use of the hat container, so called from the act of pulling names from a hat.  the header file for hat includes functions for storage and retrieval of it's contents, mainly put(), peek(), and pull().",0.0,2,1.0,1.2277324874829039,0.015353976774181611
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",to hold reusable content or modules separate from the actual  source-code file that can be easily referenced and employed for different programs.,5.0,0,2.5,1.26841181488828,0.028310833478627773
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",a header file is a file used to store a list of prototye functions and data members.,5.0,1,3.0,0.9585770243662873,0.23842819834788168
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.","a header file is a cross communication method between source files, to help limit the size of each individual program. without header files a program will be 1 large lump of code and thus fairly hard to debug and traverse.",3.0,0,1.5,1.2875841463333193,0.03979395211679792
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",it contains reusable source code for use by other classes.,3.0,3,3.0,1.2578937574901228,0.0
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.","to separate the source code from the main function, allows the methods/classes to be included in the program without direct coding. allows re usability.",4.0,5,4.5,1.2511196091305703,0.04914277151098352
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",header files have reusable source code in a file that a programer can use.,3.0,1,2.0,1.2696778557544226,0.0
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",to hide the definition and details of a class.  also to help readability of the main c++ file.,4.0,5,4.5,1.2584359526520896,0.10215503250648805
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",to allow the compiler to recognize the classes when used elsewhere.,3.0,0,1.5,1.2210157965845545,0.04802185197089156
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.","a header file declares a class, its data, and functions available through that class.",5.0,1,3.0,1.2232872511162807,0.17756354812352165
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",header files contain code which can be used in multiple files,3.0,2,2.5,1.2655857384511648,0.0
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",allow compiler to recognize the classes when used elsewhere,3.0,4,3.5,1.2373261241886842,0.025282168692631737
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",allow compiler to recognize the classes when used elsewhere,3.0,4,3.5,1.2373261241886842,0.025282168692631737
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",to promote function reusuablitly,3.0,3,3.0,1.1494530740991031,0.07343850772760543
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",class definitions are placed here,3.0,0,1.5,1.1301439709852814,0.06419571478060021
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",a header file usually contains class and/or function prototypes.,4.0,5,4.5,0.925766526503754,0.3040736624834228
2.7,What is the role of a header-file?,"to store a class interface, including data members and member function prototypes.",contains all the standard c++ library's i.e. string,0.0,4,2.0,1.2804628584347955,0.0
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"it includes the name of the program, the type of parameters it can take. it should also include a brief description of what the function does.",4.0,5,4.5,0.7743300453219616,0.39949351208268713
3.1,What does a function signature include?,the name of the function and the types of the parameters.,it includes the specific information about the function such as input and output variable types and how many of each.,1.0,4,2.5,0.9218206753788739,0.28356521227507847
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the function signature includes the name of the function and the types of its arguments.,5.0,3,4.0,0.3707941506679837,0.6831869568439969
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"a function signature consists of the function prototype.  this tells you the general information about a function, its name, parameters, what scope it is in, and other miscellaneous information.",4.0,3,3.5,0.9185827550129133,0.295315376011276
3.1,What does a function signature include?,the name of the function and the types of the parameters.,it includes the name of the function and the types of its arguments.,5.0,0,2.5,0.3798939093671823,0.6677348922426267
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"name, paramaters, scope, and other general function information",4.0,3,3.5,1.0475757019884682,0.17067643679260525
3.1,What does a function signature include?,the name of the function and the types of the parameters.,it includes a function name and parameter list. does not include return type. function signatures must be different.,5.0,5,5.0,0.9455106594809529,0.1677515928110982
3.1,What does a function signature include?,the name of the function and the types of the parameters.,input parameters and return type,1.0,0,0.5,1.220113787961308,0.22152998901468535
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the portion of the function prototyp tha has the function name and the arguments but not the return type.,5.0,1,3.0,0.5873380314048302,0.4111856665731641
3.1,What does a function signature include?,the name of the function and the types of the parameters.,name of the function and the types of it's arguments,5.0,3,4.0,0.3882424925284638,0.7199687190555784
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the name of the function and the types of its arguments.,5.0,1,3.0,0.14837980476528112,0.7506635169003617
3.1,What does a function signature include?,the name of the function and the types of the parameters.,includes the name of the function and the types of its arguments.,5.0,4,4.5,0.291838858393188,0.6859630210344769
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"identification of a function and the data types of its parameters, it has the name, and the data type variables",5.0,1,3.0,0.7266955134619715,0.6199427160927748
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"a return type, and input parameters",1.0,4,2.5,1.2609588201195847,0.22152998901468535
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the function signature includes the method name and the input types.,5.0,5,5.0,0.5658171694764857,0.5410421939520109
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"a function signature includes the name of the function and types of arguments, but not the return type.",5.0,0,2.5,0.5351798229380136,0.5762473372018933
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the signature can include a result type and thrown errors.,1.0,1,1.0,1.0245844903739139,0.08640281258316586
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"function name, and input paramaters",5.0,4,4.5,1.1444509772827454,0.23705081889991247
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"the name of the function and the types of its arguments. this includes the number, type, and order the parameters appear in.",5.0,3,4.0,0.540750938659125,0.6471831622113526
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the name of the function and the types of its arguments,5.0,3,4.0,0.3008269093786596,0.7506635169003617
3.1,What does a function signature include?,the name of the function and the types of the parameters.,a function signature includes the name of the function and the types of its arguments,5.0,2,3.5,0.4949682073949869,0.6489537263176932
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"a function signature includes a function's return type, parameters and semi-colon.",1.0,0,0.5,1.0550337494509534,0.20470651006314805
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the name of the function and the types of its arguments,5.0,3,4.0,0.3008269093786596,0.7506635169003617
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the function's name and parameters,5.0,1,3.0,0.6331380064849146,0.7255699253578233
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the name of the function and the types of its arguments.,5.0,2,3.5,0.14837980476528112,0.7506635169003617
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the portion of a function prototype that includes the name of the function and the types of its arguments,5.0,4,4.5,0.5121284345364104,0.6245478972607469
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the name of the function and its parameters,5.0,5,5.0,0.42376905966297185,0.781518768845171
3.1,What does a function signature include?,the name of the function and the types of the parameters.,the function name and parameters,5.0,3,4.0,0.5785179126315745,0.7255699253578233
3.1,What does a function signature include?,the name of the function and the types of the parameters.,name of function and types of arguments,5.0,2,3.5,0.7629962244549092,0.6028576155410966
3.1,What does a function signature include?,the name of the function and the types of the parameters.,a function's return type and parameter list,1.0,2,1.5,1.1910856472573905,0.10447837372404171
3.1,What does a function signature include?,the name of the function and the types of the parameters.,"it includes the name of the function, and the types of its arguments. it does not specify the function return type. function in the same scope must have unqiue signatures.",5.0,1,3.0,0.7086796369007308,0.47340150969118727
3.2,What is the scope of global variables?,file scope.,any functions that follows their deceleration that  are in the source code file are allowed to have access the variables.  also global scope variables retrain their value throughout the execution of the program.,5.0,3,4.0,1.3137141551998568,0.22446204942780618
3.2,What is the scope of global variables?,file scope.,they can be accessed by any c++ file anywhere.,0.0,2,1.0,1.132204135521144,0.2633211966789723
3.2,What is the scope of global variables?,file scope.,global variables have file scope.,5.0,2,3.5,1.031450771127535,0.6456294240939924
3.2,What is the scope of global variables?,file scope.,the scope of global variables are created by placing variable declarations outside any class or function definition.  global variables retain their values throughout the execution of the program and they can be referenced by any function that follows their declarations or definitions in the source file.,0.0,0,0.0,1.355800714593593,0.18161142574577788
3.2,What is the scope of global variables?,file scope.,a global variable is an identifier that retains it's value throughout the execution of the program. it has file scope.,5.0,0,2.5,1.2840327804746068,0.3541031610650542
3.2,What is the scope of global variables?,file scope.,global variables can be used in any function as long as the appropriate .h file that holds the variable is included,3.0,3,3.0,1.2944132265783317,0.15854753633794155
3.2,What is the scope of global variables?,file scope.,they can be accessed by any part of the program. it can be referenced by any function that follows the declarations or definitions in the source file.,5.0,4,4.5,1.3375117626903383,0.12750522740679657
3.2,What is the scope of global variables?,file scope.,can be accesed by any classes that have and object of that variables class in it,1.0,2,1.5,1.3342046959357896,0.0
3.2,What is the scope of global variables?,file scope.,global variables have file-scope.  the variable is know to all functions throught the file,5.0,5,5.0,1.2533369466243076,0.52356113459782
3.2,What is the scope of global variables?,file scope.,the entire program,4.0,0,2.0,1.3704556449853573,0.0
3.2,What is the scope of global variables?,file scope.,they have file scope when placed outside a function.,5.0,4,4.5,1.1700960946101835,0.5001133447172901
3.2,What is the scope of global variables?,file scope.,file scope.,5.0,3,4.0,0.0,1.0
3.2,What is the scope of global variables?,file scope.,they can be used throughout the program,4.0,1,2.5,1.3779757923712492,0.0
3.2,What is the scope of global variables?,file scope.,global variable can b accessed by any class wit an object in the variables class,1.0,2,1.5,1.3468908557718322,0.0
3.2,What is the scope of global variables?,file scope.,the scope of global variables is at the file level.,5.0,1,3.0,1.2200363990209075,0.5149249569150476
3.2,What is the scope of global variables?,file scope.,global variables all have file scope.,5.0,1,3.0,1.0925794736515984,0.595881252833676
3.2,What is the scope of global variables?,file scope.,it is accessible by all functions within a program,4.0,4,4.0,1.3521629428055686,0.0
3.2,What is the scope of global variables?,file scope.,"variables accessible anywhere in the program, as long as they are public.",4.0,3,3.5,1.3697011604809568,0.0
3.2,What is the scope of global variables?,file scope.,they can be referenced by any function following their declaration or definition inside the source file.,5.0,4,4.5,1.337918479002954,0.17352556124977928
3.2,What is the scope of global variables?,file scope.,"globally, anywhere in the program.",4.0,5,4.5,1.3905347996945274,0.0
3.2,What is the scope of global variables?,file scope.,global variables have a file scope,5.0,1,3.0,1.0968779788776752,0.6456294240939924
3.2,What is the scope of global variables?,file scope.,the entire program.,4.0,3,3.5,1.365284390597536,0.0
3.2,What is the scope of global variables?,file scope.,throughout the execution of the program,4.0,3,3.5,1.3868113443606591,0.0
3.2,What is the scope of global variables?,file scope.,"if a variable is declared global, any function or class can use that variable.",4.0,3,3.5,1.3273531301090535,0.0
3.2,What is the scope of global variables?,file scope.,the entire program or file.,5.0,2,3.5,1.358079545173582,0.34239702516551257
3.2,What is the scope of global variables?,file scope.,throught the programm,4.0,2,3.0,1.3787869240156612,0.0
3.2,What is the scope of global variables?,file scope.,the whole code,4.0,4,4.0,1.3391205347084645,0.0
3.2,What is the scope of global variables?,file scope.,file scope,5.0,0,2.5,0.6792934049391183,1.0
3.2,What is the scope of global variables?,file scope.,can be referenced by any function that follows their declarations or definitions in the source file,5.0,2,3.5,1.254766740474836,0.16805498982758446
3.2,What is the scope of global variables?,file scope.,global variables have program scope (accessible anywhere in program),4.0,4,4.0,1.3785959415049058,0.23336085414341634
3.2,What is the scope of global variables?,file scope.,variables that exist throught the entire script. their values can be changed anytime in the code and fucntions.,4.0,2,3.0,1.3583717863478826,0.0
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,it expands the function's definition in that place.  once the functions is called you can use it as many times as you need.  the compiler just expands on the function.,4.0,4,4.0,0.8851619211172774,0.2187446589463492
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"when the compiler inline-expands a function call, the function's code gets inserted into the caller's code stream (conceptually similar to what happens with a #define macro). this can, depending on a zillion other things, improve performance, because the optimizer can procedurally integrate the called code — optimize the called code into the caller.",4.0,2,3.0,0.9435737354996717,0.20464315668960004
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,the inline keyword advises the compiler to copy the function's code in place to avoid function calls; however the compiler can and typically does ignore the inline qualifier for all but the smallest functions.,5.0,3,4.0,0.8705240924953905,0.2541129606324656
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,the compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,2.0,5,3.5,1.0656490225965818,0.02500385642898043
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"placing the qualifier inline before a function's return type in the function definition ""advises"" the compiler to generate a copy of the function's code in place to avoid a function call.",5.0,1,3.0,0.7367182184468172,0.4160030078639369
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,you declare your inline function in the header or before your int main(). you then can call that function at anytime in your main program quickly and easily.,0.0,1,0.5,0.9043824843685729,0.12319090962022324
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"it expands a small function out... making your code longer, but also makes it run faster.",4.0,3,3.5,0.8284210707171744,0.24477935890345343
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,the function is not treated as a separate unit like other functions,4.0,2,3.0,0.8896603965581162,0.10092573326231807
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"when the program compiles,it will copy the function inplace, avoiding a function call.",5.0,5,5.0,0.8030055559147498,0.3099493633050832
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"it replaces all instances of that function call with the inline code itself, resulting in longer but faster programs.",5.0,0,2.5,0.7611037541668759,0.21561266681804805
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,the compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,2.0,2,2.0,1.0656490225965818,0.02500385642898043
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,ignores the inline qualifier and typically does so for all but the smallest functions.,2.0,2,2.0,1.0778032542839013,0.017670182612901684
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,if the function is small enough it will expand it but it will run faster as it will avoid making so many calls to the function.,5.0,5,5.0,0.9051959628982743,0.17624521620248057
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,it treats them as the same function,2.0,4,3.0,0.849302744266331,0.1405609545777654
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"inline functions are copied in place, instead of being referenced.",5.0,2,3.5,1.028665013462167,0.13487691176896074
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"for inline functions, the compiler creates a copy of the function's code in place so it doesn't have to make a function call and add to the function call stack.",5.0,3,4.0,0.5748802035402987,0.4845573355830578
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,it generates a copy of the function's coding which eliminates calling the function,5.0,1,3.0,0.7306865431456133,0.2945478049649754
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,not answered,0.0,3,1.5,1.2475793555842665,0.0
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,it generates a copy of the function's code by by inserting it in the program.,4.0,4,4.0,0.7488185929849025,0.3703212229866589
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"tells the compiler to make a copy of function's code in place to avoid a function call.  it typically ignores it, except for the smallest functions.",5.0,3,4.0,0.6734081570914067,0.4226525973828281
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,the compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,2.0,1,1.5,1.0656490225965818,0.02500385642898043
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"multiple copies of the function code are inserted into the program, making it bigger.",4.0,5,4.5,0.7373920581813573,0.20067986300180352
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,compiler ignores inline qualifier,2.0,1,1.5,1.2802420175628035,0.0
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"it generates a copy of the function, if it is needed again.",2.0,3,2.5,0.8365832303693289,0.31313506152685855
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"the complier includes copies of inline functions instead of making function calls, but usually only with very small functions.",5.0,0,2.5,0.9333795224079389,0.07069951024361791
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,compiler generate a copy of the function's code in place (when appropriate) to avoid a function call,5.0,4,4.5,0.5536294243182104,0.47095860502225045
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"instead of calling the function every time it is invoked, the compiler will replace the function call with a copy of the function body",5.0,1,3.0,0.6009755025478131,0.43713290355956347
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,expands the function into the program,4.0,2,3.0,0.9157049971373613,0.12312580090856956
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,it generates a copy of the functions code in place to avoid a function call,5.0,1,3.0,0.4168210885459663,0.5256287200918669
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,the function call will be replaced by the code that was defined in the inline function,5.0,2,3.5,0.7023619083483432,0.2908925940421576
3.3,How does the compiler handle inline functions?,it makes a copy of the function code in every place where a function call is made.,"when the compiler inline-expands a function call, the function's code gets inserted into the caller's code stream (conceptually similar to what happens with a #define macro). this can, depending on a zillion other things, improve performance, because the optimizer can procedurally integrate the called code — optimize the called code into the caller.",4.0,0,2.0,0.9435737354996717,0.20464315668960004
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,overall the program has better performance (means it is faster) because it does not have to copy large amounts of data.,5.0,4,4.5,0.9958739659544331,0.1695584886474259
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,because you can't change the original and passing by reference limits memory needed for the program.,5.0,5,5.0,1.2213846710094591,0.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,passing by reference can eliminate the pass-by-value overhead of copying large amounts of data.,5.0,0,2.5,1.0810046956558543,0.14615334676238328
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"it is often more efficient to pass references, rather than large objects, to functions. this allows the compiler to pass the address of the object while maintaining the syntax that would have been used to access the object.",5.0,0,2.5,1.125048921455795,0.11236137356923873
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"pass by reference is good for performance reasons, because it can eliminate the pass by value overhead of copying large amounts of data.",5.0,1,3.0,1.0926761074587628,0.1351775144172871
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,you do not alter the original value of the variable that was passed.,3.0,0,1.5,1.2043863948223708,0.016522170889194575
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,don't have to make copies of stuff.,4.0,0,2.0,1.0711227189043806,0.1697939023425026
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,you do not use unessesary memory space to copy variables between functions,5.0,0,2.5,1.1760469503733328,0.05670671841392816
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,it elimitates the need to copy large amonts of data,5.0,0,2.5,0.7757210351416459,0.20510631048838693
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,the function can change the data stored in a variable passed by reference directly.,3.0,4,3.5,1.1245322294328624,0.04808499733369146
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,gives called function the ability to access and modify the caller’s argument data.,3.0,2,2.5,1.186343593436308,0.0420876497285342
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,gives called function the ability to access and modify the caller’s argument data directly.,3.0,1,2.0,1.0709479204723427,0.04032134844011304
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,it is more efficient and it changes the variable not online inside the function but outside so that the new value can be used elsewhere.,3.0,1,2.0,1.1107064079116404,0.05286174911422445
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,you don't make another copy and waste memory,5.0,4,4.5,1.150858793783953,0.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"passing by reference eliminates the copying of large amounts of data, typical with pass by value.",5.0,3,4.0,1.0957131676056784,0.14138554505756376
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"if a function's arguments are large in size, computing time and memory space is not wasted copying down the argument and passing it to the function.  also pass by reference gives the function called the permission to read edit the argument directly.",5.0,2,3.5,1.122074858442591,0.07009662795018262
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"gives access to the caller data directly, also it allows for modifying the data.",3.0,5,4.0,1.0003736858814896,0.10810145512877582
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"less overhead overall, and you modify the variable directly.",4.0,4,4.0,1.2454714572670835,0.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,the original variable being referenced can be modified directly by the called function.,3.0,2,2.5,1.2036499603228121,0.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,gives function ability to access and modify the caller's argument data directly,3.0,5,4.0,1.1070735122998436,0.04214869437593114
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,gives the called function the ability to access and modify the caller's argument data directly.,3.0,4,3.5,1.0793811860720333,0.03946166215084512
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"less overhead than passed by value, especially when using large numbers.",4.0,3,3.5,0.9823735734168084,0.14968215345964167
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"large data items can be passed without copying the entire data point, reducing execution time and the amout of memory space needed",5.0,2,3.5,1.0245277983722345,0.14395316044488343
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,the data can be modified directly instead of making a copy of the data. improves execution time with large amounts of data.,4.0,3,3.5,0.9542580717753761,0.2961412706418914
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,functions can directly modify arguments that are passed by reference.,3.0,5,4.0,1.215011313570808,0.06866644980632262
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,it gives access and modify the caller's argument data directly. it eliminate the pass by value overhead of copying large amounts ofdata,5.0,1,3.0,0.9587389334562598,0.1551028840478515
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"it takes less memory, thus it would make the program faster",4.0,0,2.0,1.0437716759723081,0.0725821232347736
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,you are able to modify the variable that is referenced directly.,3.0,2,2.5,1.2011197603783732,0.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"if you pass by reference, you can modify the value as opposed to passing by value where you cannot change the value",3.0,1,2.0,1.2212321237931882,0.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"only the memory address is sent to the function, so no copy of the object sent needs to be made. it makes the function run faster, and saves memory.",5.0,2,3.5,1.1215954297412818,0.031917515091005905
3.4,What is the main advantage associated with function arguments that are passed by reference?,it avoids making copies of large data structures when calling functions.,"actual arguments are associated with dummy arguments when a function or subroutine is referenced. in a procedure reference, the actual argument list identifies the correspondence between the actual arguments provided in the list and the dummy arguments of the subprogram",3.0,1,2.0,1.1921429325282127,0.02805506382394624
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","the compiler selects the proper functions to execute based on number, types and order of arguments in the function call.",5.0,2,3.5,0.7425606251118464,0.32797198505544006
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",they differentiated by the compiler by the conditions/inputs used for one of the overloaded functions.,4.0,2,3.0,0.8753493282017419,0.18243276906424152
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","the compiler distinguishes overloaded functions by their signatures. it encodes each function identifier with the number and types of its parameters to generate type-safe linkage, which ensures the proper overloaded function is called.",5.0,1,3.0,0.7962667773660257,0.285393051744145
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","overloaded functions are distinguished by their signatures, name mangling or name decoration, and type-safe linkage ensures that proper overloaded functions is called and types of the arguments conform to tpes to the parameters.",5.0,5,5.0,0.9486065120042984,0.1563427110612855
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","the compiler selects proper function to execute based on number, types and order of arguments in the function call.",5.0,4,4.5,0.7273261226422315,0.37378068118328256
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","by the type they are initilized with (int, char, etc.)",2.0,5,3.5,1.0135940621353878,0.02850595392736922
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","it selects the proper function to execute based on number, types and order of arguments in the function call.",5.0,1,3.0,0.7721893612089483,0.32997711092591564
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",overloaded functions must have the same return type but different input parameters,1.0,5,3.0,0.9963010253119571,0.11064580199351841
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","it examines the names, types, and order of arguments on each function.",5.0,1,3.0,1.0280757381571741,0.14097034818903836
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",unique function signatures,5.0,2,3.5,1.0723187420323832,0.11765112417431509
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","is based on number, types, and order of arguments in the function call.",5.0,4,4.5,0.70873234392707,0.343210726876429
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","compiler selects proper function to execute based on number, types and order of arguments in the function call.",5.0,5,5.0,0.7873381437197478,0.3540827838302503
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",not answered,0.0,1,0.5,1.26440500093852,0.0
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","they have to have same return type, but different input parameters",1.0,3,2.0,1.2107327438936677,0.013372597309742109
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",overloaded functions are differentiated by their parameters.,4.0,3,3.5,1.0566062598264845,0.09757952876098631
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","the compiler selects the right function to execute from the number, types and order of arguments in the function call.",5.0,2,3.5,0.7885258985414403,0.34491519777282803
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",it creates a set of candidate functions then a set of viable functions,3.0,1,2.0,1.1143246401278135,0.0
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",their function signature.,5.0,1,3.0,1.011803310154476,0.4290620057519673
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",the number and type of its parameters.,5.0,1,3.0,1.0330522942574396,0.049480324823435624
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",by their function signature,5.0,4,4.5,0.9472654101196093,0.3938086773583873
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","they have the same name, just different parameters.",3.0,3,3.0,1.0450210703428555,0.03559103002484516
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","they are differntiated by number, types and order of arguments in the function call.",5.0,3,4.0,0.9338676392393432,0.1557254136657904
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","it looks at the number, types, and order of arguments in the function call",5.0,5,5.0,0.8762541464263479,0.1916752158019735
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",the compiler differentiates overloaded functions by their signature.,5.0,3,4.0,0.8838465872450816,0.33223606746769124
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","by the number, types, and order of their arguments",5.0,1,3.0,1.048629980786686,0.03671831248664079
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","compiler selects proper function to execute based on number, types and order of arguments in the function call.",5.0,2,3.5,0.7873381437197478,0.3540827838302503
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",paremeters,4.0,0,2.0,inf,0.0
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","by the number, and the types and order of the  parameters.",5.0,5,5.0,1.0175872301549158,0.1111447199932372
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",by the number and type of arguments,5.0,2,3.5,1.05455295336007,0.046997850480539866
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.","by their signature (return type, argument list)",3.0,5,4.0,1.1902892628335184,0.16950132934828027
3.5,How are overloaded functions differentiated by the compiler?,"based on the function signature. when an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",overloaded function simply invovles haing a method with the same name within the class. is used to implement a method for subclass which overrides in other words replaces the implementation of the super class. overloading the concept of providing different meaning to a object based on the context of its presence. overloading is one type of polymorphism and this is also a feature in programing.,1.0,3,2.0,0.8617443940108316,0.20236688489215138
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","a base case that is the simplest case for a problem so that the function will lead to it, if this does not happen then it will end up as an infinite loop. and a condition to know when to terminate.",5.0,1,3.0,0.8159397052694513,0.26089702086993005
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",badly designed algorithyms. using recursion for a non recursive problem.,2.0,0,1.0,1.1448490958200639,0.06991411235453701
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",infinite recursion can occur when the base case is omitted or the recursion step is written incorrectly so that it never converges on the base case.,5.0,4,4.5,0.5828634751423943,0.5088532666063394
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","infinite recursion is an infinite loop if the condition is not met.  either omitting the base case, or writing the recursion step incorrectly so that it does not converge on the base case causes ""indefinite"" recursion, eventually exhausting memory.",5.0,4,4.5,0.6119305845616283,0.5173029544111424
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",either omitting the base case or writing the recursion step incorrectly so that it does not converge on the base case can cause an infinite recursion.,5.0,4,4.5,0.6342027899892354,0.4881426617130968
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",not having a base case that returns a base value.,3.0,0,1.5,0.9101021158319285,0.31293234708609985
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",incorrect or missing base case. must reduce to the base case. the function must get simpler each time it is run (converge to the base case).,5.0,2,3.5,0.8095460768472097,0.31218030562328325
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",no base case no change in values.,4.0,3,3.5,0.9788371797472689,0.17788922680255737
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","if at each recursive call the problem does not diminish or if it does not diminish to a base case, can cause infinite recursion.",5.0,2,3.5,0.7654823950094385,0.3630391867663554
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",omitting the base case or incorrectly calling the recursive step.,5.0,1,3.0,0.7406639619566342,0.46990838243816335
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",the recursive problem cannot be reduced to reach the base case.,4.0,0,2.0,0.8923381047462506,0.19502901412218607
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","lack of defining a base case, or writing the recursion step incorrectly so that it does not converge on the base case",5.0,2,3.5,0.622901800700092,0.48254141818454555
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",not having the proper case to leave the recursion,3.0,3,3.0,0.7434665719281268,0.2588906217748747
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","no base case, or the recursive calls do not converge to the base case",5.0,2,3.5,0.6259363385866424,0.3670079853800153
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","no base case, or an incorrectly written recursion step that does not converge on the base case will lead to infinite recursion.",5.0,4,4.5,0.7068144734348588,0.5003447299048869
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","if the recursion function never reaches or successfully defines the base case it will recurse forever.  this happens many ways, such as the function doesn't progress towards the base case, or the function is coded poorly and doesn't even contain a base case.",5.0,2,3.5,0.698027889053961,0.34651977798434336
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","not creating a base case, or in the case where the base case will never be met.",5.0,4,4.5,0.6434412899832966,0.36814461905672485
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",improper handling of cases such that not all possible values are able to be handled.,2.0,2,2.0,1.0378168201297222,0.036030654661810047
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",there is no base case. the recursion step doesn't reduce the problem during each recursive call.,4.0,2,3.0,0.669583668142087,0.35558041189662426
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","no base case, as in a single return that does not include calling the function again.  a static value to end at.",2.0,2,2.0,0.9712404041382217,0.18858678700937612
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","either omitting the base case, or writing the recursion step incorrectly so the it does not reach the base case can cause infinite recursion.",5.0,4,4.5,0.6194983854652895,0.5038413057106427
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",omitting the base case or writing the recursive call so that it does not converge upon the base case.,5.0,2,3.5,0.6862312599729672,0.3171571388193235
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","either omitting the base case, or writing the recursion step incorrectly so that it does not converge on the base case",5.0,3,4.0,0.5966151920854901,0.50486286054815
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",infinite recursion may occur if no base case is defined or if the call is not varied.,4.0,0,2.0,0.3779802352452328,0.590276737615431
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","not having a base case, or building a recursion process that doesn't converge on the base case.",5.0,3,4.0,0.7403737634537912,0.35802111627126215
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","either omitting the base case, or writing the recursion step incorerectly",5.0,1,3.0,0.6467966574685575,0.3669382750070267
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",no base case or if the programmar does not define the base case as the simplest case and it never gets reached,5.0,1,3.0,0.6062089537911396,0.38436567716344044
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",no easily reached base case and no base case at all,5.0,4,4.5,1.0189699317070533,0.25730464058120817
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",function is never allowed to reach the 'base case',5.0,5,5.0,0.8072525368492854,0.23983927301084018
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.","it has no base case, or the base case is never met",5.0,1,3.0,0.6672761865079531,0.3628953993714139
3.6,"When defining a recursive function, what are possible causes for infinite recursion?","if the recursion step is defined incorrectly, or if the base case is not included.",recursion refers to situations in which functions call themselves. these types of functions are known as recursive functions. that being said infinite recursion occurs when the function is designed in such a way as to call it self forever without stopping possible causes,1.0,2,1.5,1.015754198155546,0.09635575495220736
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"both involve a controlled repetition structures, and they both have a termination test.  also both of them can loop forever.",5.0,1,3.0,0.4520522510731676,0.6185694611521961
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"as discussed earlier, recursion may be used to process iterative actions. recursion is used for calculations where the answer can be described in a function that relates to itself.",1.0,2,1.5,1.1333044033892503,0.01417954327847144
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,both iteration and recursion are based on control statements and involve repetition. they can both also occur indefinitely.,5.0,0,2.5,0.7077603248857023,0.536020807922051
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,both are based on a control statement         - iteration-repetition structure         - recursion-selection structure        both involve repetition         -iteration-explicitly uses repetition structure         -recursion-repeated function calls        both involve a termination test         -iteration-loop-termination test         -recursion-base case         both gradually approach termination         -iteration-modifies counter until loop-termination test fails         -recursion-produces progressively simpler versions of problem        both can occur indefinitely         -iteration-if loop-continuation condition never fails         -recursion-if recursion step does not simplify the problem,5.0,5,5.0,0.9501844776784688,0.36817449990828455
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"iteration and recursion have many similarities: both are based on a control statement, involve repetition, involve a termination test, gradually approach termination and can occur infinitely.",5.0,1,3.0,0.7266404178897644,0.45694955926596226
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"both rely on repetition, both have a base case, both can become an infinite loop. anything recursive can also be solved with iteration.",5.0,3,4.0,0.8268581368447715,0.4040816008899889
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"both will repeat (loop) until a condition is met, and exit the loop. both are capable of entering an infinite loop.",3.0,0,1.5,1.014851410261289,0.1932771824668882
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,anything you can do iterativly you can do recursively,2.0,5,3.5,1.0639572064060778,0.04458571588987406
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,both are repetative and both have a end test.,4.0,2,3.0,0.7554581343197563,0.3932270865276478
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"incorrectly writing either can result in infinite loops, both perform the same task over and over.",3.0,1,2.0,1.017067304686356,0.1346076942473438
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,both are based on a control statement. both involve repetition. both involve a termination test. both gradually approach termination. both can occur infinitely.,5.0,3,4.0,0.556121001135198,0.6884482668540449
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"both are based on a control statement, both involve repetition, both involve a termination test, both gradually approach termination, both can occur infinitely",5.0,3,4.0,0.5735560149783999,0.6884482668540449
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,not answered,0.0,2,1.0,1.1794225599611785,0.0
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,anything you can do recursively you can do iteratively,2.0,2,2.0,1.0726493331383937,0.045648206518680616
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"many problems can be solved by both iteration and recursion, and either may go into a condition of infinite execution if a termination test is omitted.",2.0,2,2.0,0.986665375360957,0.18231118694885518
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"iteration and recursion both use repetition and perform several simple operations and algorithms successively until they reach a certain limit.  so both involve a termination test to find that limit and both slowly approach that termination limit.  both are based on a control statement as well.    if coded poorly, both can continue on for forever until the compiler or the computer either locks up, shuts down or halts the operation.",5.0,4,4.5,0.984964759855059,0.38882838020242205
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"both based on control statement, involve repetition, and involve a termination test within loops",5.0,4,4.5,0.9007311796773236,0.3800552159002421
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,they are methods of repeating the same task.,1.0,0,0.5,1.0061823523392674,0.15519978852032087
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,both involve a termination test.   they use a control statement and repition to solve the problem.  they can also result in an infinite loop.,5.0,0,2.5,0.7502481549906966,0.4223456053530077
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"based on a control statement, involve repetition, involve a termination test.",5.0,1,3.0,1.0360596297750733,0.28439329872935304
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,both are bases on a control statement. both involve repetition. both involve a termination test. both gradually approach termination. both can occur infinitely.,5.0,2,3.5,0.5549837803907866,0.6780129487599907
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"both based on a control statement, both involve repitition, both involve a termination test, both gradually approach termination, both can potentially occur infinetly.",5.0,3,4.0,0.5667161120614073,0.5747215448822721
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"they are both based on a control statement, both involve repetition, both involve a termination case, both graduatlly approach that termination case, and both can occur infinitely",5.0,1,3.0,0.48503206928459386,0.7220530018441393
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"they both use repetition, a control or test to terminate, and both can infinitely repeat if not defined correctly.",5.0,2,3.5,0.8207903784925995,0.4807598986843317
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"both are based on a control statement; both gradually approach termination ending with a termination test; both involve repetition, and can both repeat infinitely if their  termination requirements are not met.",5.0,4,4.5,0.7759159875694447,0.5321965742028574
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"both are based on a control statement, involve repetition and involve a termination test. both gradually approach termination, both can occur infinitely",5.0,2,3.5,0.6739809840887084,0.6290586794810371
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,they are used to solve the same type of problems. they do a task over and over again until a cirtain conditional statement is reached (its called the base case in recursion).,3.0,4,3.5,1.0823231224540277,0.14946138532427408
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,based on control statement;  involve repetition; involve a terminal test; both can occur infinitly,5.0,3,4.0,0.7936697986886432,0.37720362618978615
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"repetition, termination test, eventually terminate, occur infinately",5.0,3,4.0,1.004966722963513,0.2286775663762015
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,both need to have some kind of base case to tell when the loop needs to stop.,3.0,2,2.5,0.9836215695015577,0.16025322072331377
3.7,What are the similarities between iteration and recursion?,they both involve repetition; they both have termination tests; they can both occur infinitely.,"they both are able to do repetiive tasks. however recurisve calls itself with different parameters and defines and exit clause that is guaranteeed to be reached. iterative includes a loop which iterates a pre-determined number of times, or checks for an exit clause every time through",2.0,0,1.0,1.1018566834524832,0.12004693854285316
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",int n[10]; //array of 10 integers and int n[arraysize] //where arraysize is some positive integer defined by the user,3.0,2,2.5,1.0268017524713904,0.06747948911389204
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",by either inputing the different elements in the array at coding or giving the array specifacations as to the size of the array. it is also possible when giving it specifacations to tell the array to grow as needed.,3.0,0,1.5,0.7789701718814437,0.1879407304582601
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",you can initialize and array by using an initializer list in its declaration or by initializing its size with a constant variable.,5.0,2,3.5,0.7190276261542106,0.6171173422252119
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",pass the length along with the array or use a vector.,2.0,3,2.5,0.7213620482363208,0.1342342800156333
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","one way is to declare a size of the array using a variable that is equal to an integer. the other way, if the size is omitted in the declaration, the compiler determines the size of the array based on the size of the initializer list.",5.0,3,4.0,0.845704741198931,0.35480070011320586
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","in the declaration (int array [x]) or with an initilizer (int array[]={0,1,2,etc.}",5.0,2,3.5,0.3666251553974392,0.34284663215468997
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","1. declare the length of the array (int array[10];) 2. initialize the array (int array[] = {0, 1, 2, 3}; //compiler will assume size of 4)",5.0,2,3.5,0.9018205141931975,0.16358185049498372
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",statically and dynamically,2.0,1,1.5,1.3240956984369718,0.0
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",explicitly int array[10]; or by variable const int size = 10; int array[size];,3.0,1,2.0,1.0357824144837546,0.12638006174946165
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","array lengths can be explicitly specified by inputing the number of elements between the brackets [ ] during declaration, or implicitly by including an initializer list without specifying a number between [ ], the compiler will automatically declare the array with the proper number of elements needed for the list.",5.0,4,4.5,0.8433817747030457,0.3741810703419592
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",specify an arrays size with a constant variable. and setting array elements with calculations.,2.0,4,3.0,0.9758343919492258,0.09092602302473005
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","statically, using {} and dynamically, using []",4.0,1,2.5,1.1083585537231495,0.22005922161358485
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","define it as array[5] or array[1,2,3,4,5]",4.0,2,3.0,1.0503163977515237,0.21932955684217786
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",static and dynamic.,2.0,1,1.5,1.3215565364185842,0.0
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",manually inside the brackets or automatically via an initializer list,5.0,5,5.0,0.8125228039027788,0.34064780608413725
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","you can use an initializer list, or simply tell the compiler how many elements you want in the array.  for an initializer list:  int a[] = {10, 2, 3, -4, 5};  for an elemental declaration: int b[5];  both arrays have 5 elements in them, but array a is already initialized.",5.0,1,3.0,0.8670153992707579,0.47434496708437873
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","in a string you can specify with the strlen(arrayname) command. this gets the length of the string. another way is with integers where you initiate the size from the start, ex array[40] specifying a possible length of up to 40. then it is passed by an object the actual ammout in the array. another way is to declare it in an initializing program.",4.0,1,2.5,0.8708882093847247,0.15638466601926165
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","implicit, namely when you give it values, like {1,2,3,4,5,6,7,8,9}, at which the compiler will automatically give this a size. static, during the declaration.",5.0,1,3.0,1.030713241657332,0.11350029324888063
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","supply an integer inside the brackets or the compiler counts the number of elements in the initializer list. int n[5]; int n[] = { 1,2,3,4,5 }",5.0,2,3.5,0.873231557598702,0.2998581928377314
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",either initializing the array with a specific length or initializing an array while declaring its contents.,5.0,4,4.5,0.7507518007149473,0.16580792358426702
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",within the brackets or by using an initializer list.,5.0,4,4.5,0.352557666708719,0.60887777866335
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",specify the number of elements in the array declaration with a constant or using a constant variable for future scalability,3.0,2,2.5,0.8122323689321611,0.30562084906262094
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",with a number and with a variable,3.0,3,3.0,1.1962623050594874,0.0
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","explicitly, by declaring it in brackets (i.e. int array[50];) and implicitly, by initializing several values (i.e. int array[] = {1, 2, 3};)",5.0,3,4.0,0.9634990018195464,0.16564868084013834
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","one way of specifying of array is a[10] ; other way of specifying array is a[arraysize] = [1,2,3,4,5,6,7,8,9,10}",4.0,3,3.5,1.0301990935634033,0.059621709927619775
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",1-initializing an array in a declaration with an initializer list 2-specifying an arrays size with a constant variable,5.0,0,2.5,0.857570400361602,0.5039076091381645
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","initializing the size in the brackets: int a[100]; initializing the length by assigning variables: int a[] = {1,2,3};",5.0,4,4.5,0.8710361628506439,0.09142734076970435
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.",user defined value or by the number of elements in initializer list,5.0,1,3.0,0.7514191446578599,0.45966532741852145
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","you can assign the size of it inside the brackets when you declare the array [3], or you can have it set by how many items you set the array equal to {1,2,3}",5.0,1,3.0,0.8713268104843981,0.14249874706723037
4.1,What are the two different ways of specifying the length of an array?,"in the array declaration, or by using an initializer list.","use an arraylist, or have your program ask the array how many elements it has. as an obj it it should have member length that is the number of slots it has.",3.0,5,4.0,0.932281164230096,0.12295924717866032
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"strings that are used in an char array are much easier to manipulate than as a string object, because each character is stored separately rather than as a whole",1.0,0,0.5,1.0144179484247093,0.1157907756749599
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"the type string uses less storage and you have to change the string all at once. with an array of characters you can make permutations of words using the characters stored in the array, without needing to actually access and change the variables. with an array of characters you can just change how they're accessed.",1.0,4,2.5,0.7955335215107352,0.35647863658651135
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"unlike in a string declared using type string, in a string declared using an array of characters the programmer must provide the null terminating character and must ensure the array is large enough to hold the string and null terminating character.",5.0,1,3.0,0.6641405763095146,0.351630311180364
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"all strings represented by character arrays end with the null character. you declare an object of type string just like any other type, for example:  string s;",5.0,5,5.0,0.8646079113040166,0.20532762114875908
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"by using an array of characters, one can store and manipulate the strings rather than just having a type string variable.",1.0,1,1.0,0.8315943099783312,0.32585659247879395
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,type string is an array of chars that will make an array of single letter characters while an array of strings will be an actual array of words (or an array of char arrays),0.0,5,2.5,0.9496354228556082,0.425515614109398
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"they're basically the same, however, a string ends w/ a null character, denoting the end of the string (and the size). a char array has potential to be any size, so it must be declared or limited.",2.0,3,2.5,0.7870037499376393,0.2363478592503674
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,string is a class in the standard library and has method that modify it. whereas the char array is on able to be modifie by the user.,4.0,0,2.0,0.9665924957813723,0.10922085573296395
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"by using an array of characters, you are limited to the size of the array of characters.  by declaring by type the end of the string is acknowledged by white space.",3.0,4,3.5,0.7457602735858482,0.40625593645489355
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"the data class type string are designed to handle character data, and has many functions built into the class library to deal with them. an array of characters however is subject to all the same rules of any other array with no real additional functionality. another difference is that the string class deals with the null character implicitly, unlike an array of characters, which must handle the null character explicitly.",5.0,4,4.5,0.8805922583470435,0.2936311724855807
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,string declared used in an array of characters contains each character in the array and a special string-termination character called the null character versus the type string.,5.0,3,4.0,0.7025758065969713,0.3072057212976694
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,a char array reads a string as each individual character. a string literal array reads the entire string.,2.0,1,1.5,1.0604501619193325,0.10236692190089944
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,array of characters can only hold as many characters as the array size and strings are not that limited.,4.0,4,4.0,0.8954607501539018,0.36864318798180684
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"stings can only be modified by functions of the string class, an array of characters can be modified by the user",3.0,1,2.0,0.8684785412931075,0.21644985362166522
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"if by type string, the array contains an additional terminating null character",3.0,4,3.5,0.8265672651944931,0.22051610863016285
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,the array of characters has a null character \0 at the end of the array to signify the array's end.  the string does not have this.,5.0,1,3.0,0.5429649122750081,0.592723748602156
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,strings with type string are just that. strings. they are not part of an array list at all where as one declared by an array is actually an array of characters able to be pointed and detected.,2.0,4,3.0,0.8492419117041153,0.42106244511551627
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"the array of characters has a set length, while the type string has virtually unlimited length.",4.0,2,3.0,0.8348759025928271,0.2076881769012306
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,char array - individual letters can be accessed directly with array subscript notation.  string array - array subscript will return the entire string.,1.0,0,0.5,1.0745578421409894,0.1742007991582813
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,array of characters need a termination character as well as size specification whether its explicit or implicit.,5.0,2,3.5,1.058750270907568,0.14097953134484464
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,when using an array individual characters can be accessed and manipulated.,1.0,3,2.0,0.8991127696625406,0.2806140683652045
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,strings declared using an array of characters could result in data loss if character array not initialized large enough.,4.0,0,2.0,0.7520839269277266,0.39228756396329323
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"an array is passed by reference therefore if an array of characters is changed, the memory is changed not just the variable",3.0,2,2.5,0.8699070814311728,0.2670205907803821
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"the type string has several built-in functions not available when using a char array, but the individual characters in an array or more directly accessible than the characters in a string type string.",3.0,4,3.5,0.8436217060580992,0.2688467790575902
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"declaring a string, it includes white spaces but declaring a array of character does not include white spaces",0.0,0,0.0,1.0803163651434797,0.05534764813918201
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"an array of characters has one element a string doesnt have. it is the termination element, or ""null""",5.0,1,3.0,0.7584828434358369,0.45880467156556176
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,strings declared using the type string can vary in length. strings declared using an array of characters can not extend past the array length.,4.0,2,3.0,0.6538687860199552,0.48245916138595624
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"cant modify individual characters of a type string array, character type array can modify individual characters",1.0,3,2.0,1.079089266168134,0.22558917199102285
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"the type string is a class and is safer, while the other is just an array of characters.",3.0,4,3.5,0.8706276180299732,0.2557989903800214
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,the strings declared using an array of characters have a null element added at the end of the array.,"array  it is the collection of similar data types ex:int a[10]  ten indicates the size of array. [ ] is index of array, we can give only integer values to array of a.  where as string mean collection of group of characters.  string declarations have a datatype usually causes storage to be allocated in memory that is capable of holding some predetermined number of symbols.    however  arrays can be declared to contain values of any non reference data type. multiple arrarys of the same type",1.0,5,3.0,1.0505156280922527,0.2773058513760743
4.3,How are arrays passed to functions?,by reference.,by reference only,5.0,3,4.0,0.873827138748516,0.8217376202620741
4.3,How are arrays passed to functions?,by reference.,a reference pointer to an element in the array.,4.0,1,2.5,1.2866642838347357,0.39046618448757053
4.3,How are arrays passed to functions?,by reference.,arrays are passed to functions by reference.,5.0,2,3.5,1.06513593409289,0.5317145568840895
4.3,How are arrays passed to functions?,by reference.,#name?,5.0,3,4.0,inf,0.0
4.3,How are arrays passed to functions?,by reference.,arrays are passed by reference.,5.0,4,4.5,0.977144316333036,0.5873141103030732
4.3,How are arrays passed to functions?,by reference.,"you must pass the array and its size to the function. ex. function(array, size);",4.0,4,4.0,1.2999099035407755,0.0
4.3,How are arrays passed to functions?,by reference.,"usually the same way you pass anything else... you do not have to specify the length of a char array, just pass it to the function by sending the name of the array.  example: char str[20]; ispalindrome(str); // this sends the char array to the function ispalindrome.  otherwise, would need to send the length of the array as well.",3.0,4,3.5,1.2812688777495247,0.04074772066678888
4.3,How are arrays passed to functions?,by reference.,you pass a pointer to the first item and also pass the size.,4.0,2,3.0,1.2823796951411632,0.0
4.3,How are arrays passed to functions?,by reference.,by reference.,5.0,3,4.0,0.0,1.0000000000000002
4.3,How are arrays passed to functions?,by reference.,"in two parts, the array itself, and it's size, so that the function it's being passed to can avoid out of bounds errors.",4.0,2,3.0,1.2888440976754105,0.0
4.3,How are arrays passed to functions?,by reference.,specify array name without brackets. array size is normally passed as another argument so the function can process the specific number of elements in the array. arrays are passed by reference. individual array elements passed by value. functions that take arrays as arguments.,5.0,1,3.0,1.2384316026770994,0.21450327211660353
4.3,How are arrays passed to functions?,by reference.,arrays are passed by reference.,5.0,4,4.5,0.977144316333036,0.5873141103030732
4.3,How are arrays passed to functions?,by reference.,the same way but with [] at the declaration and the actual function.,3.0,5,4.0,1.2380328829277962,0.0
4.3,How are arrays passed to functions?,by reference.,specify the array name without brackets.,3.0,2,2.5,1.296603934219292,0.0
4.3,How are arrays passed to functions?,by reference.,by reference,5.0,2,3.5,0.6783867041994397,1.0000000000000002
4.3,How are arrays passed to functions?,by reference.,"you pass the name of the array to the function. so for: int bin [10]; you pass it to an array like so: jingle(bin); but jingle must be declared correctly in order to receive an array, either with prototype void jingle (int []); or with the definition in its initialization: void jingle (int array[]);  it's also worth noting that arrays are passed to function by reference, so as to not copy large arrays over and over and burn memory.  this gives the function complete control over the array however.",5.0,4,4.5,1.2846366345240008,0.082638009814228
4.3,How are arrays passed to functions?,by reference.,they are called by the function then the function must loop through the array to get the set of characters.,1.0,0,0.5,1.199875572539506,0.1103485543046723
4.3,How are arrays passed to functions?,by reference.,"by reference by default, unless you specify const, at which the later will make the array unmodifiable.",5.0,3,4.0,1.101202394505373,0.35272279333927303
4.3,How are arrays passed to functions?,by reference.,"the function recieves both the array and the array size as parameters. function(arrayname, arraysize)",4.0,2,3.0,1.2866563914650284,0.0
4.3,How are arrays passed to functions?,by reference.,specifying array name and passing as reference in an argument into the function,5.0,4,4.5,1.3078304559836489,0.22921212200777868
4.3,How are arrays passed to functions?,by reference.,1st you must specify the array name without brackets and then the array name and size are passed as two arguments in the function call.,4.0,5,4.5,1.3018688416884705,0.0
4.3,How are arrays passed to functions?,by reference.,"arrays are passed by reference, passing the starting address of array. programmer specifies the array name without brackets and passes the array size as another argument so the function can process the specific number of elements in the array",5.0,1,3.0,1.2634712751098112,0.18280672374015877
4.3,How are arrays passed to functions?,by reference.,by reference only,5.0,5,5.0,0.873827138748516,0.8217376202620741
4.3,How are arrays passed to functions?,by reference.,by reference,5.0,2,3.5,0.6783867041994397,1.0000000000000002
4.3,How are arrays passed to functions?,by reference.,by reference,5.0,4,4.5,0.6783867041994397,1.0000000000000002
4.3,How are arrays passed to functions?,by reference.,by refrence,5.0,3,4.0,0.7386961951236506,0.22236636022715173
4.3,How are arrays passed to functions?,by reference.,"function( int [], int length)",4.0,4,4.0,1.398900366919116,0.0
4.3,How are arrays passed to functions?,by reference.,by reference,5.0,3,4.0,0.6783867041994397,1.0000000000000002
4.3,How are arrays passed to functions?,by reference.,by reference,5.0,4,4.5,0.6783867041994397,1.0000000000000002
4.3,How are arrays passed to functions?,by reference.,"the function reads the variables, stores them. then returns the what ever the variable reads. the function then prints the content of the array.",1.0,2,1.5,1.2747637583911913,0.0
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",a static array will store the new values that were assigned to each of its elements. meaning if you call a function twice it will use the last values that were returned the first time.  if you don't declare it static then the new values will not be stored and will be reset to their original value,5.0,2,3.5,0.8191106925777374,0.18034729522422585
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",a static array can only be referenced not accessed. also static arrays can be used without creating an object.,3.0,2,2.5,0.9681382846612213,0.17416410498582247
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",an array declared as static is not created and and initialized each time the function and it is also not destroyed when the function terminates.,5.0,3,4.0,0.6055092611141342,0.369689799364875
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","a program intializes static local arrays when their declarations are first encountered.  if a static array is not initialized explicityly by the programmer, earch element of that array is intialized to zero by the compiler when the array is created.  non-static array members cannot be initialized at all in c++.",3.0,0,1.5,0.7123622129389005,0.3983407878007289
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",arrays that are static remain the same size throughout the program execution.,3.0,3,3.0,0.6925369374602682,0.3976419250175674
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","a static array will only be initilized once, a non static array will be re-initilized once the program reaches the initilization line again.",5.0,2,3.5,0.8850312476192722,0.2321648816920907
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",an array declared as static is available from beginning of program to end. one w/o static declaration disappears if it is not accessed within the right scope.,4.0,1,2.5,0.7973214031160654,0.2893868431920915
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",a static array has pre-runtime size and that size cannot be changed. a dynamic array gets its size at runtime.,1.0,0,0.5,1.010055898234888,0.0928598597602158
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","if an array is declared as static, it is not created each time the array is called.",5.0,4,4.5,0.8096478920229849,0.4012380622009689
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","an array that is not declared as static will re-initialize every time the function declaring it is called. a static array will initialize only once, at the declaration, and will store the values in it's elements throughout the duration of the program, even if the same function is called multiple times, a static array will only initialize once.",5.0,1,3.0,0.6280147447617335,0.45595596428701546
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","all elements are initialized to zero if not explicitly initialized, this does not happen for automatic local arrays",4.0,2,3.0,0.9813393294077905,0.16723946760570246
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","all elements are initialized to zero if not explicitly initialized for a static array, while a non-static array is not initialized to zero.",4.0,3,3.5,0.9194503044354274,0.2723454023796902
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",static cannot be changed,1.0,3,2.0,1.173135501027843,0.08365141079027057
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","a static array has a set size that cannot change. the data may not need all of the space assigned, or could go beyond the size.",3.0,5,4.0,0.8433412036836048,0.16386769969097792
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","a static member prevents naming conflicts (not put into global namespace) while allowing for information hiding (private, public).",1.0,4,2.5,1.1861335970324762,0.03380787915887003
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",a static local array exists for the duration of the program and its elements are initialized to 0 if not explicitly initialized. so a static local array's elements will still be the same when called later unless specifically initialized to something else.  this doesn't happen for automatic arrays.,5.0,4,4.5,0.8583339309449249,0.3066126163505354
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","static arrays are those with a declared size, that is known to the program, whereas non-static arrays leave the size undeclared and open so it can be assigned later. usually used for input purposes.",1.0,3,2.0,0.7630669795191531,0.2726898561434246
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","static arrays keep the values after the end of a function, while non static reinitialize every time.",5.0,5,5.0,0.9179397478903794,0.2179124981485226
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","static arrays are created and initialized only once, and the values aren't destroyed  when the function terminates in the program. automatic arrays reset everytime the function is called.",5.0,4,4.5,0.6128935439904615,0.42436145610542747
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","its not created and initialized each time program calls the function, and is not destroyed every time the function ends in the program.",5.0,4,4.5,0.8283593157150537,0.24878304740306334
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","when we declare it static the array is not destroyed after the function is over.  when an array is not declared as static, the array is created and initialized every time a function calls it.",5.0,3,4.0,0.6395361717221562,0.43441663836961963
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",the static array exists for the duration of the program,4.0,1,2.5,0.8456702948468549,0.28112898273811493
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",an array declared as static can only be declared once,2.0,5,3.5,0.8926703084529768,0.3833998074887075
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","a static array exists in memory until the program terminates, whereas an automatic (or normal) array is removed when the function that created it terminates",5.0,4,4.5,0.7267898561941658,0.25408868704245674
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",not answered,0.0,2,1.0,1.2059703415484628,0.0
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",only constants can be used to declare the size of automatic and static arrays exists for the duration of the program is initialized when its declaration is first encountered all elements are initialized to zero if not explicitly initialized,5.0,0,2.5,0.744694802866695,0.36905763368720423
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",a static array cannot be changed in the program.,1.0,1,1.0,0.9104025892532766,0.2192646927735468
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",static arrays are available throughout the program,5.0,1,3.0,0.8626573522602452,0.400290501111734
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","a static array is allocated when the program starts and is freed when the program exits but has limited scope, while an array that is not declared static is allocated and freed when it comes into and out of scope.",5.0,2,3.5,0.7985146248563828,0.3236869643347471
4.4,"What is the difference between an array declared as static, and one that is not?","the arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.","if they are declared fixed or static that means they can't change size once their storage has been allocated, however one that is not or dynamic arrarys can be resized.",1.0,4,2.5,0.8456002343707081,0.23678993563946657
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","at least 2, depending on how many arrays are being used.",1.0,5,3.0,1.1893908229936474,0.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",all of them.,2.0,0,1.0,1.074612600297843,0.2673498807557681
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","when passing a multi-dimensional array, all dimensions must be specified except for the first dimension.",5.0,2,3.5,0.7468332159033763,0.45390159009396397
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",it depends what parameters you are passing in a multidimensional.  a multideminsional can have more than two dimensions.,2.0,1,1.5,1.175905372281968,0.13814983133309183
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",the first dimension is not required however the subsequent dimension(s) are needed for the compiler.,5.0,3,4.0,0.8116703858118447,0.12155794715054803
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",all but the first,5.0,4,4.5,0.3873877730470661,0.4560147833176418
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",all of the dimensions must be specified.,2.0,1,1.5,0.7667550448882539,0.4368288584745205
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",just the first one at least.,1.0,3,2.0,0.6686490988949084,0.29006009577751496
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","two paramaters, the array and how many columns.  array(a[],[3])",4.0,3,3.5,0.9515019916018482,0.03087599459662051
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","the size of the first dimension can be omitted, same as a regular array. however, for every dimension outside the first, the size of those dimensions must be specified when passed, for example, a multi-dimensional array of [2][4][6] with the name multiarray would be passed as: ""multiarray[][4][6], 2""",4.0,0,2.0,0.9629016400068278,0.18642313995575951
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",size of subsequent dimensions are required. compiler must know how many elements to skip to move to the second element in the first dimension,4.0,2,3.0,0.9905740152792255,0.20163894640917143
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",every dimension after the first.,5.0,3,4.0,0.8801779568061403,0.1519034713499705
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",both,2.0,2,2.0,1.1642055868143995,0.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","the size of the first dimension does not need to be specified, but all other dimensions do.",5.0,2,3.5,0.8280570332212517,0.3664038039898429
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","when passing (in main) a multidimensional array to a function, no dimensions need be specified",1.0,3,2.0,1.206191902819328,0.1633957113385833
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","all dimensions except for the first one need to be specified when passing an array to a function, the compiler needs to know how many memory addresses to skip to make it back to the 2nd element in the first dimension.  the size of the first dimension does not need to be specified.",5.0,2,3.5,0.8693062578050146,0.3723686558562777
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",as many as there are dimensions. most commonly just rows and columns,2.0,5,3.5,1.1909504542713463,0.13786974416614478
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","at least 2, but it should always equal the number of dimensions that the argument is expecting... like...  blah[][][][] will require 4 dimensional array input. blah[][][] will require a 3 dimensional array. blah[][] will require a 2 dimensional array.",1.0,2,1.5,1.1112154668734715,0.08420863255641656
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","none, just pass the array name.",1.0,0,0.5,0.9138652801679215,0.0409272935509056
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",all subsequent dimensions after the first dimension.  first is not needed to be specified.,5.0,3,4.0,0.7658344964597759,0.39881278761976
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","all dimensions, excluding the first one.",5.0,2,3.5,0.41410660052049875,0.6133356479041279
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",all dimensions but the first,5.0,4,4.5,0.477475471397337,0.6716384258555239
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",the first needs to be specified by size and the rest need only be stated( first like this [3] then [][][]),1.0,2,1.5,0.8586678214864594,0.15968444068656687
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",one less than the number of dimensions the array contains,4.0,3,3.5,0.9422230087767622,0.39625523671832685
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",not answered,0.0,4,2.0,1.2246663253302008,0.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",one,1.0,0,0.5,1.0849778505909353,0.35045447861296736
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",all subsequent dimensions after the first one.,5.0,1,3.0,0.6211495158079202,0.5950941656479286
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",two or more,1.0,4,2.5,1.173476520158364,0.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.",1 less than the total number of dimensions,4.0,3,3.5,1.0541993719649936,0.26234614440964366
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all the dimensions, except the first one.","multi dimensional arrays are accessed using more than 1  index, one for each dimension at least.",2.0,1,1.5,1.223813018722794,0.06923002813113971
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","takes an element of an array and compares it with the next element, depending on the values of the two elements they will switch and then the program will compare the new switched element with the next one in the array.",1.0,2,1.5,0.8056228510247678,0.2279732156114323
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","insertion sort divides the list into sorted and unsorted regions, then takes each item from the unsorted region and inserts it into its correct order in the sorted region.",5.0,4,4.5,0.7724512570874532,0.19421907571999705
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",the sorted array or list is built one entry at a time.,3.0,1,2.0,0.8952025253905269,0.24577473837300182
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",it starts with the second element and checks it to see if it is less than the element(s) to the left of it and if it is it inserts it into its corrected position.,5.0,4,4.5,0.7942348414301128,0.4032284804090766
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",compare two numbers at a time and swap until the entire list is sorted.,1.0,3,2.0,1.0334721733503291,0.14465987885079165
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","assume the first number is sorted, then move down the list and 'insert' the numbers you come across into the corresponding place on the sorted side of the list.",5.0,1,3.0,0.948290585989678,0.13567520424499577
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",insertion sort is were after k iterations the first k items in the array are sorted it take the k+1 item and inserts it into the correct position in the already sorted k elements.,5.0,4,4.5,0.7121813080489888,0.3867885652070222
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",looking at the 2nd element move forward and place the element in the correct spot.,4.0,4,4.0,0.8865484313499048,0.136523156518515
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","starting at the beginning of an array, take each element in order and place it in it's correct position relative to all previously sorted elements.",5.0,2,3.5,0.7507700637725371,0.3041073046772801
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",to sort the elements in an array by removing an element from the input data and inserting it at the correct position.,5.0,3,4.0,0.6772066638764914,0.30731034298255266
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","insertion sort removes an element from the data, and inserts it at the correct position in the already sorted list.",5.0,1,3.0,0.553870992583165,0.4544269161765894
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",take a number and choose a pivot point and insert the number in the correct position from the pivot point.,2.0,3,2.5,0.8714501970667196,0.10454220186748807
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",have a marker and sort everything to the left of the value for every new value when moving to the right.,3.0,3,3.0,0.9858943163641455,0.19583211393466557
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",the main idea behind insertion sort is to take a random variable from the right and insert it in order to the left.,4.0,1,2.5,0.806811527446192,0.2797802069397318
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",insertion sort progresses through a list of elements and determines where the next element should be inserted into an already sorted array starting with sorting and using the first two elements.,5.0,3,4.0,0.8338144231022049,0.19294817575610004
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","it goes through the list only once, picking each integer and putting it in its desired position, then continuing.",4.0,2,3.0,0.8649587025988472,0.17762862306386185
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",inserting array items in to their appropriate positions from smallest to largest at a pivot which starts on the second element of the array.,3.0,3,3.0,0.7115939769346729,0.18774695606802416
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",insert the item into its proper position by shifting larger sorted array values to the right.,1.0,1,1.0,0.8368692443277377,0.28257853017495943
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",a comparison sort in which the sorted array is built one entry at a time,4.0,2,3.0,0.8297322873641589,0.2273184646111673
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","insertion sort is an algorithm where the first element of the array is in the sorted list, all the other pick one by one and taken from the unsorted array, to the sorted array.",5.0,2,3.5,0.7582044009295792,0.28315840574454026
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","every iteration of an insertion sort takes away an element from the input data, inserting it at the right position in the sorted list.",5.0,5,5.0,0.6133168059562099,0.3271282339849229
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",the insertion sort creates a new array and inserts each item in its place with respect to the new array.,4.0,1,2.5,0.8557107463930232,0.18623163686203104
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","insertion sort takes each entitity of an unsorted array in order, and sorts it into the correct position between the entities it has sorted.",5.0,5,5.0,0.7512613926920024,0.2087971470201994
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","it takes the second element and swaps it with the 1st if it is less and keeps it there if its larger, then it goes to the third element and inserts it in the right places with respect to the first 2 elements and so on...",5.0,0,2.5,0.7478212310688326,0.35714430794124935
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","starting with the first element in the array, each following element is put in place by determining if it is smaller or larger than the starting element.",3.0,2,2.5,0.8899408018626783,0.1722357774010032
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","one by one, each item is taken and placed into the correct place in the sorted portion of the array until there are no more items",5.0,4,4.5,0.8346006337266983,0.15498982924475982
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",you take each element and insert it in the correct position with respect to all the elements before it,5.0,3,4.0,0.6897003635244111,0.259688475584973
5.1,"In one sentence, what is the main idea implemented by insertion sort?","taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.","insertion sort is a simple sorting algorithm, a comparison sort in which the sorted array (or list) is built one entry at a time.",4.0,2,3.0,0.8580320759689078,0.17168256700953338
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",searches an array for the largest or the smallest element and is moved out to the front of the array then it will search for the next largest or the smallest element to move out to the front,5.0,2,3.5,0.854199944928499,0.2353738213532686
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","selection sort searches the whole array for the largest item and puts it at the end of the array, then searches for the second largest item and puts it at the second to last spot and so on.",5.0,3,4.0,0.8305581297970281,0.18825507185762316
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",finds the minimum value and swap it with the value in the first position.,5.0,3,4.0,0.7675669115712339,0.2400886984699598
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",it finds the minimum element in the array and swaps it with the first element then repeats this step swapping the minimum element with nth positions in the array.,5.0,1,3.0,0.6237173017497185,0.4684992422605659
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","find the lowest value and place it at the front, then find the next lowest and place it in front of the last value, etc.",4.0,3,3.5,0.8411541937758049,0.14786264157018075
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","cycle through the unsorted list, place the minimum in the next slot in the sorted list, and repeat.",5.0,4,4.5,0.9416349352979354,0.14195253154444817
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",find the minimum value in the list swap it with the first element in the list the find the second largest and swap it with the second element in the array continue like this until  the array is sorted.,5.0,2,3.5,0.7020151062506601,0.3253637812448706
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",find the smallest and put it in the current position till you get to the end.,5.0,4,4.5,0.873581795914246,0.20099721951603122
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","find the lowest unsorted value in the array and place it at the current position (starting at the first element in the array) and advance the ""current"" position by one.",5.0,0,2.5,0.7517527530621254,0.3585860856500388
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",to sort the elements by comparing two elements and swapping the smaller one to sort the elements in the array.,2.0,4,3.0,0.8595593441721696,0.23954387399415425
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","selection sort finds the minimum value in the list, swaps it with the first value in the list, and repeats throughout the list.",5.0,1,3.0,0.749667790219895,0.2692233407951982
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","select the minimum number from the array and put it in the current position, then move on",5.0,3,4.0,0.6711151672775323,0.3457847152536635
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",find the lowest value and place it in the front of the list and swap it with that value. continue moving right.,5.0,3,4.0,0.8104600423415882,0.20734532886086968
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",the main idea behind selection sort is to take the least variable from the right and put it directly to the left.,5.0,2,3.5,0.8417188217497007,0.2667270858082568
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","find the smallest value in the list and make it the first element, then find the smallest value of the leftover list and make it the first element of the leftover list and continue until the list is sorted.",5.0,2,3.5,0.9096844644990891,0.2098815879392682
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",it runs through and finds the lowest (or highest) value and puts it in its desired position.,5.0,4,4.5,0.9659818541793025,0.1227535789169408
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","places the smallest item in the list at position 1, and then proceeds to each value until the last position of the ray is reached.",5.0,0,2.5,0.9561696323048743,0.10629613371846562
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",search for the largest item in an array and swap it with the last unsorted item.,5.0,4,4.5,0.8148141820357113,0.1556147232594025
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",finds the smallest element and places in 1st position. then the process is repeated on the rest of the array.,5.0,1,3.0,0.9325509085116889,0.16535963460183004
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",selection sort is an algorithm that selects the larges item the array and puts it in its place; then select the next largest until the array is sorted,5.0,3,4.0,0.902064248016019,0.13861619536830944
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",select the smallest number in the list and move it to the front of the list and then advance to the next number.,5.0,4,4.5,0.9398083671888937,0.1594488990505162
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",the selection sort chooses the largest or smallest value in an unsorted list and creates a new list using the selection depending on how it is sorted.,5.0,5,5.0,0.9886725101560613,0.08321626702617968
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","selection sort finds the smallest number left unsorted in an array, and puts it at the end of what it has sorted",4.0,5,4.5,0.8259546914742155,0.2124916038040594
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","selects the minimum from the remaining elements of the array, and palces the miminum in the current position and moves to the next position",5.0,2,3.5,0.6905524567122026,0.36675565830462215
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","to put the biggest element at the end of the list and place the next highest element behind it, and so on.",3.0,1,2.0,0.8551160912126972,0.27803102012694475
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","the sort finds the largest item and places it at the end, then then next largest is found and placed next to last, continue until there is only one number left, this is the beginning of the sorted array",5.0,3,4.0,0.8557725573407147,0.18455626042393888
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.","you loop through the entire list, and for each iteration you find the smallest element and move it to the current position.",5.0,0,2.5,0.8343675873900831,0.23814061033754771
5.2,"In one sentence, what is the main idea implemented by selection sort?","taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",find the minimum value in the list swap it with the value in the first position; repeat the steps above for remainder of the list(starting in the second position.,5.0,2,3.5,0.820290479833513,0.1833562199422107
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"the run time for this sorting program is n^2.  best case is the list is already sorted, worst case is the list is sorted but in reverse.",4.0,5,4.5,0.9920788573157916,0.18493994032406635
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"insertion sort is o(n) and performs n-1 operations in the best-case scenario, which is when the list or array is already sorted.",5.0,1,3.0,1.0218154160907507,0.2662202692398027
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"the number of operations for insertions sort, under best-case, is  n(n-1)/2. the best case for insertion sort is on a sorted list where it runs is o(n).",3.0,3,3.0,0.9104223699264861,0.2151350475359064
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"best case would be o(n) or n-1, because that's what it takes to scan the array and make one swap. the array would then be sorted and would take only 1 operation.",4.0,2,3.0,1.1087830811275372,0.18237245221368523
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,best case-1 worst case-n,0.0,3,1.5,1.317182762870895,0.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,it will do (n) operations where (n) is the number of elements in the array. best case is when all the elements are already sorted.,5.0,2,3.5,1.0305492355360155,0.3182096906009446
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,o(n),3.0,2,2.5,inf,0.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,best case is all elements sorted. n-1.,5.0,1,3.0,1.2688509247015352,0.13843197318837586
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"the best case scenario for an insertion sort, where all the elements of the array have been already sorted, will cause the for loop to iterate ""x"" times (""x"" being the number of elements in the array) and the while loop to never have to iterate, resulting in the insertion sort to require ""x"" operations.",5.0,3,4.0,1.0278565524030094,0.29318175689562104
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,1 operation. the best case scenario s where it is already sorted and does one comparision.,3.0,5,4.0,1.0663773024320993,0.10496289570547031
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"n operations, where n is the number of items.",3.0,1,2.0,0.9141792195855961,0.23013554653405804
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,n-1,3.0,0,1.5,inf,0.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"o(n), the list is already sorted.",5.0,2,3.5,1.1200098688679077,0.22568405210225057
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,insertion sort will take n-1 operations if the array is in reverse order.,4.0,5,4.5,1.0250020514485358,0.22469112964709512
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"in the best case scenario of an already sorted list, insertion sort will progress once through the list.  so the number of operations is directly proportional to the number of elements in the list.  also noted as o(n) in big o notation.",5.0,1,3.0,0.9898949395648673,0.1890585861257647
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,1 where there is a list of two ints and only one must be moved.,2.0,1,1.5,1.2254223346536768,0.02027637723227403
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"best case is n, while the worst case is n factorial.",2.0,2,2.0,0.9973306432579954,0.02598028821175879
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,n-1 the best case is when the array is already sorted.,5.0,4,4.5,1.1169194516710788,0.2988454465510445
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,worst case its = o(n) time best case its = o(n^2) time,2.0,2,2.0,1.212258478518899,0.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,o(n),3.0,4,3.5,inf,0.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,n number of times.  where n equals the number of elements in the list.  best-case scenario is that the elements in the list are already sorted.,5.0,0,2.5,0.9457518972463181,0.16610921969106895
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,the best case scenario for insertion sort is a list that is already sorted. the number of operations would be the same as the number of elements,5.0,3,4.0,0.9856689871432348,0.27479982239660905
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"insertion sort will make zero operations (and length - 1 comparisons) in the best case scenario, that is, when the array its given is already in order.",3.0,1,2.0,1.0005069780439242,0.2559486375733674
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,theta(n) the best case senario is that everything is already sorted,5.0,3,4.0,1.0172542223062602,0.10321968527596206
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,n operations  the best case scenario is when all the numbers are in increasing order.,5.0,0,2.5,0.9038172520213766,0.1314668569286972
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,"it could be considered that having only one item would be the easiest to sort, but this could also be a trivial result as nothing is moved  having two items allows the algorithm to sort the items into the correct order",2.0,2,2.0,1.1114180537532585,0.04589369292860888
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,the best case is if it only has to look through the list once. the best case scenario is when it goes through the list and doesn't have to make any changes (the list is already sorted),5.0,4,4.5,1.1188781872474427,0.10866697169420966
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n (the length of the array) operations achieved for a sorted array.,very simplistic it moves one element from the list by one and inserting them in their correct position into a new slot then starting over. best case is (0)1,2.0,3,2.5,1.205247428638277,0.015818205538984283
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),"the base case for a recursive merge sort is one number.  one number by itself is a sorted list, regardless of what number it is.",5.0,2,3.5,0.9218385410420616,0.19803145751006312
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),the base case for a recursive implementation of merge sort is when the sequence being passed to merge sort has less than 2 elements.,5.0,3,4.0,0.9334007537783299,0.17196722989204044
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),the base case for a recursive implementation of merge sort is one.,5.0,1,3.0,0.9863571705087145,0.11497747731958298
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),the best case is the same as the worst case o(n log n) for a recursive merge sort.,1.0,2,1.5,0.9142737854474458,0.12014937025269293
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),there is one object in the split array to sort.,5.0,4,4.5,0.7765781662139826,0.21131205466258476
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),the base case is when the length of the current array is 1.,5.0,5,5.0,0.5909170416155707,0.4243991253508297
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),o(nlog(n)),1.0,2,1.5,inf,0.0
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),best case is one element.  one element is sorted.,5.0,3,4.0,1.0681759144284853,0.21087309928596473
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),if the array being sorted has 0 or 1 elements,5.0,5,5.0,0.6752384098837408,0.3884198349913623
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),"t(n) = 0, if n&lt;2.",4.0,4,4.0,1.2270820269227893,0.0
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),"a list size of 1, where it is already sorted.",5.0,1,3.0,0.8953118874409122,0.43611014787454083
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),single element in the array,5.0,5,5.0,0.8506792860299436,0.18551481615679472
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),o(nlog(n)),1.0,3,2.0,inf,0.0
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),n * log( n ),1.0,2,1.5,1.3587591452245966,0.0
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),a list or array of only 1 element.,5.0,5,5.0,0.943504652808582,0.2813586379520754
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),where you only must merge sort once,3.0,0,1.5,1.171819038423831,0.0
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),a single element on the array.,5.0,3,4.0,0.9780847873318368,0.17464999713793267
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),there is only one element in the subarray.,5.0,4,4.5,0.8811894476051692,0.09369699067136225
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),"if the array length is less than or equal to 1, then that array is returned to the other array and merged together",5.0,3,4.0,0.7814559451226575,0.31488887728337156
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),"if (right &gt; left)   {     mid = (right + left) / 2;     m_sort(numbers, temp, left, mid);     m_sort(numbers, temp, mid+1, right);      merge(numbers, temp, left, mid+1, right);   }",2.0,0,1.0,1.2116369138971108,0.0
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),the sequence of numbers has zero or one elements.,5.0,1,3.0,1.02514146915271,0.14598725120664843
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),one element in an array,5.0,4,4.5,1.0592546365295392,0.127065196614132
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),array of length 1,5.0,2,3.5,0.9946761420500869,0.21897164126335228
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),the array has one element,5.0,2,3.5,0.8537279568992213,0.19353827138276905
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),"when there is only one element in the array, or when the starting element in the array is the same as the ending element.",4.0,2,3.0,0.6768829283224231,0.40729154505889226
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),"when each half or the original array has nothing else to sort, and puts the halfs back together",2.0,5,3.5,0.8889576029304187,0.22483704843632585
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),the size of the list being sent is &lt;= 1,5.0,2,3.5,0.514625185627621,0.27395731659043054
5.4,What is the base case for a recursive implementation of merge sort?,when the size of the array to be sorted is 1 (or 2),o(n log n),1.0,2,1.5,1.3493489435037076,0.0
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,its a location in memory that contains the memory address of another location in memory that contains information.,5.0,4,4.5,0.37299693800124384,0.590024720146136
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer is a variable that contains a memory address as its value.,5.0,4,4.5,0.5289464356310682,0.6163618869965234
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer is a variable which stores the address of another variable.,5.0,1,3.0,0.5987718339879766,0.6599111678240182
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,pointers are variables that contain as their values memory addresses of other variables.,5.0,4,4.5,0.9124376467160082,0.10840969247444576
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a data type whose value refers to another value stored elsewhere in the computer memory using its address.,4.0,2,3.0,0.8842489473846755,0.2429291148984044
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer holds a memory location,5.0,3,4.0,1.1135096236599762,0.09884151775172056
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a name that represents actual location or value of a data type. int *bptr points to an integer value.,5.0,4,4.5,1.0956636401345201,0.04856877375491916
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a variable that stores the address of another variable,5.0,2,3.5,0.489623960391975,0.7752413785392251
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer is a programming language data type whose value refers directly to (or points to) another value stored elsewhere in the computer memory using its address,5.0,2,3.5,0.9364632586157482,0.2043732704474399
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a data type whose value refers to another value stored somewhere else in the computer memory using its address.,5.0,4,4.5,0.9035886804852298,0.2225338696425377
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,"it is like a variable however instead of holding data, it holds a location in memory.",4.0,2,3.0,0.9266234383005153,0.24270586323039692
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer is a reference to a location in memory,5.0,3,4.0,0.9224454958107391,0.15016252691221207
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer is a reference to the memory location of an object.,4.0,0,2.0,0.8957086919237869,0.13822784793342616
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer is a variable that contains the memory address of a variable that has a value.,5.0,2,3.5,0.4693617604903542,0.7683702802020069
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,"it is a variable that contains not only a *value but has a memory address associated with it, and can be moved along a string or an array by jumping up one memory address.",2.0,4,3.0,0.8796990480928666,0.37414676661401325
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,contains a variable's memory address as a value.,5.0,0,2.5,0.7948389744724192,0.6759957557665792
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,variable that points to the memory address of another variable and it is type specific.,5.0,2,3.5,0.5018024787857986,0.6874323035656889
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,an element that references a memory cell,5.0,1,3.0,0.9023881021118,0.12546435510882364
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,is a reference call to the place in memory where the object is stored.,4.0,3,3.5,0.8215593099016205,0.13403702794848446
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a variable that contains the address of another variable,5.0,1,3.0,0.3228718753775406,0.9442096474050314
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,"a pointer variable contains the number of a memory address as its value, which may be null or 0, or the address of some value stored in memory.",5.0,2,3.5,0.7362355617670713,0.473148685822098
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer is a variable that contains a memory address of anther variable,5.0,2,3.5,0.5216158392893766,0.6920228351811614
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a variable that contains the memory address of another variable that contains a specific value.,5.0,1,3.0,0.32566547295070336,0.8520081590041203
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a variable with a memory address as the value,5.0,5,5.0,0.6061371370876094,0.5305392451847022
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,it is a type that points to something else. it is the memory address of something else,5.0,1,3.0,0.8131394027320579,0.1449798577737991
6.1,What is a pointer?,a variable that contains the address in memory of another variable.,a pointer is a way to get at another object. essentially it is a way to grab an instance of an object and then either pass that instance a message or retreive some data from that object. a pointer is actually just an address of where an instance is held in memory.,4.0,1,2.5,1.009852723199587,0.16444525286002126
6.2,What does the address (&) operator return?,the memory address of its operand.,this operator returns the memory address of its operand.,5.0,0,2.5,0.5262173121484243,0.7083826436284787
6.2,What does the address (&) operator return?,the memory address of its operand.,the address operator returns the memory address of its operand.,5.0,2,3.5,0.33323412736585795,0.8075462365479453
6.2,What does the address (&) operator return?,the memory address of its operand.,returns memory address of its operand.,5.0,2,3.5,0.3299651519909525,0.8596455712958884
6.2,What does the address (&) operator return?,the memory address of its operand.,the address (&) operator returns the memory address of its operand.,5.0,2,3.5,0.33323412736585795,0.8075462365479453
6.2,What does the address (&) operator return?,the memory address of its operand.,returns the memory address of its operand.,5.0,5,5.0,0.27238279382012676,0.8797566698769921
6.2,What does the address (&) operator return?,the memory address of its operand.,returns the place in memory of that element,5.0,3,4.0,0.9022995506162796,0.22863701597185493
6.2,What does the address (&) operator return?,the memory address of its operand.,the address of the where the data is stored: &b will return the address of b.,4.0,1,2.5,0.7439495453177937,0.41719706470912266
6.2,What does the address (&) operator return?,the memory address of its operand.,the & operator returns the address of a variable,5.0,3,4.0,0.8046212328229995,0.3144609839894198
6.2,What does the address (&) operator return?,the memory address of its operand.,"the ampersand (&) means ""pass by reference"". when the function is called, a pointer to the variable, instead of the variable itself, will be passed into the function.",3.0,1,2.0,0.9688455153528581,0.08886269167345781
6.2,What does the address (&) operator return?,the memory address of its operand.,& returns the memory address of its operand.,5.0,4,4.5,0.45633493584473167,0.8797566698769921
6.2,What does the address (&) operator return?,the memory address of its operand.,the address of the variable in memory,5.0,2,3.5,0.5152789006373025,0.5520347295393173
6.2,What does the address (&) operator return?,the memory address of its operand.,returns the address location in memory of the item.,5.0,2,3.5,0.5872395949077758,0.4261517310760878
6.2,What does the address (&) operator return?,the memory address of its operand.,the address operator returns the memory address of its operand.,5.0,1,3.0,0.33323412736585795,0.8075462365479453
6.2,What does the address (&) operator return?,the memory address of its operand.,the & operator returns the memory address of the variable it precedes.,5.0,3,4.0,0.7058429242313777,0.3445473604976242
6.2,What does the address (&) operator return?,the memory address of its operand.,"the memory address of operand, 0x000000 or something along those lines.",4.0,5,4.5,0.7235271833181269,0.37993859961954957
6.2,What does the address (&) operator return?,the memory address of its operand.,the object's memory address.,4.0,3,3.5,0.5913714264480402,0.5356772131674895
6.2,What does the address (&) operator return?,the memory address of its operand.,the reference to a variable,5.0,4,4.5,0.9452930699165278,0.046814208548476344
6.2,What does the address (&) operator return?,the memory address of its operand.,returns the memory address of its operand,5.0,3,4.0,0.4422150533690663,0.8797566698769921
6.2,What does the address (&) operator return?,the memory address of its operand.,memory address of its operand,5.0,4,4.5,0.34096437708186045,0.9813647945038706
6.2,What does the address (&) operator return?,the memory address of its operand.,returns the address number of the specified variable,5.0,2,3.5,0.7992698821320824,0.27530821779674075
6.2,What does the address (&) operator return?,the memory address of its operand.,"it returns the memory address of it's operand. that is, if applied to a normal variable, it gives the variable's memory address, just as a pointer variable might.",4.0,4,4.0,0.9108832659299003,0.3888582600551272
6.2,What does the address (&) operator return?,the memory address of its operand.,the & is a unary operator that returns the memory address of its operand,5.0,1,3.0,0.6930480800573354,0.610259524241851
6.2,What does the address (&) operator return?,the memory address of its operand.,the address of the variable it is attached to,5.0,1,3.0,0.7697417207408753,0.2701246689195678
6.2,What does the address (&) operator return?,the memory address of its operand.,the memory address of its operand,5.0,4,4.5,0.26828534382349306,1.0
6.2,What does the address (&) operator return?,the memory address of its operand.,returns the address of what it is put in front of,5.0,1,3.0,0.9641945047034262,0.24938336607640021
6.2,What does the address (&) operator return?,the memory address of its operand.,returns a pointer,4.0,1,2.5,1.344689151846485,0.0
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,returns a synonym for the object to which its pointer operand points.,5.0,2,3.5,0.7212498757492584,0.5498821238438313
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the star operator returns a synonym for the object to which its pointer operand points.,5.0,5,5.0,0.6776635110815029,0.5640183065726705
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,returns synonym for the object its operand points to.,5.0,3,4.0,0.6645370649492572,0.6062034483869922
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,"it returns a synonym, alias or nickname of the name of the object that its operand points to in memory (dereferencing the pointer).",5.0,4,4.5,0.3201077588885616,0.7660647437759919
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,returns an alias/nickname for the object to which the pointer operand points.,5.0,1,3.0,0.6213846911161283,0.48599462640257174
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the * operator returns the value in the memory address the element points to.,4.0,4,4.0,0.8097345510165357,0.42967787883572395
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the * returns the value,4.0,1,2.5,0.9764218167892238,0.1286041218628036
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the * operator returns the dereferenced pointer variable (ie: it returns the value of whatever variable the pointer is pointing to),5.0,2,3.5,0.8303490698717081,0.20302066148177741
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the dereferencing operator returns the dereferenced object.,4.0,2,3.0,0.9702099998039216,0.4093362108084908
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,* returns the synonym for the object its operand points to.,5.0,4,4.5,0.5887745422147048,0.6262615495241123
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,it returns the information in the address the pointer points to.,4.0,2,3.0,0.7257698424956105,0.2932878898101969
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the star operator returns the value at the memory address the pointer is pointing at.,5.0,0,2.5,0.8754215236899677,0.25260220666444794
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the star operator returns the object at that memory location.,4.0,4,4.0,0.8102829498718301,0.3261779321458157
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the * operator returns the value of the object's memory address it precedes.,4.0,4,4.0,0.8898907653281671,0.35502023819560424
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the value of the object that the operand points to,4.0,3,3.5,0.6249211949111227,0.5266842121754925
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the value stored in the object being pointed to.,4.0,5,4.5,0.817851539157866,0.18846568918793957
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,the value of the variable the pointer points to.,4.0,2,3.0,0.878820835705796,0.30139619415706753
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,returns synonym for the object its operand points to,5.0,0,2.5,0.6645370649492572,0.6062034483869922
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,synonym for the object its operand points to,5.0,3,4.0,0.6393545373123659,0.654839005032651
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,returns synonym for the object its operand points to,5.0,4,4.5,0.6645370649492572,0.6062034483869922
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,"it dereferences a pointer, meaning it returns the value stored in the memory address a pointer refers to.",4.0,3,3.5,0.8432231126808298,0.16797375522474456
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,it is unary operator that returns the value of the variable located at the address,4.0,3,3.5,0.7293248978168503,0.2632467477490543
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,a reference to a = variable,1.0,1,1.0,1.2777445604130393,0.043539170037212714
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,a synonym for the object to which its pointer operand points,5.0,2,3.5,0.664251899480017,0.58540643263807
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,it returns the actual data at the address pointed to,4.0,5,4.5,0.8839062694765297,0.12894554161276905
6.3,What does the star (*) operator return?,an alias (synonym) for the name of the object that its operand points to in memory. it is the dereferencing operator.,will return zero or many characters placed before the operator,1.0,3,2.0,1.0956826015567787,0.1257562316784555
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",the array itself can be signed to a pointer or each element of the array can be assigned to a pointer.,2.0,4,3.0,0.836099528124804,0.43977699699966527
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",an array can be addressed in pointer/offset notation by setting a pointer variable equal to the variable name of the array. elements of the array can then be accessed by adding an offset value to the pointer variable.,5.0,1,3.0,0.7760517103758661,0.3760906127515226
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",element b[ n ] can be accessed by  *( bptr + n ).,5.0,4,4.5,1.1219971110500382,0.16913058965181904
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",using either the name of the array as a pointer or using a separate pointer that points to the array.,3.0,2,2.5,0.7337763215816188,0.39218538015135757
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",an element b[3] can be referenced by using *( bptr + 3) instead.,5.0,5,5.0,1.0852070348498832,0.1277910430452054
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",you get the memory location of the first element and the you add an offset to it to get other elements.,5.0,4,4.5,0.8582138950749827,0.2330665989069861
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",yes *(array +offset),5.0,2,3.5,1.3162809107732385,0.07863355689261695
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.","the name of an array is considered to be a pointer in c++, and can be passed as such in functions parameters. declaring int a[10]; creates a pointer ""a"" which stores the address of a[0].",3.0,4,3.5,0.9318751262446484,0.262541115468879
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",element b[ n ] can be accessed by  *( bptr + n ) is an example of how an array can be addressed as pointer/offset notation.,5.0,1,3.0,1.0332715127799175,0.20971826283307324
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",*(array + element),5.0,0,2.5,1.3649502920965866,0.4601967824170155
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",*f[3],2.0,3,2.5,inf,0.0
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",you can have a pointer to the front of the array and add to the memory location (or offset from the initial value).,5.0,3,4.0,0.7826817064110824,0.320491493943769
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.","the pointer to the array will initially point to the first element of that array.  when the pointer is incremented, it will point to the next element, and so on.",2.0,1,1.5,0.5540712741630219,0.5847448174015257
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",with int x[10]; int *xptr; xptr = x; address &x[1] is the same as xptr + 1.,5.0,2,3.5,1.0544250099504522,0.03731871448382906
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",takes the number of array elements and points to each at a time,1.0,3,2.0,0.9653591973356448,0.20484796305198938
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",the array can act as a pointer or be referenced by a pointer.  *(arrayptr + 3) or *(array + 3),5.0,3,4.0,0.9045287213031797,0.315277060169909
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",by using the *(pointer + element-index),5.0,3,4.0,0.9075164469658215,0.5557643635673786
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",using the star operator.   array: b[n] can be accessed by *(bpointer +n),5.0,1,3.0,1.0036123102878227,0.12606679164482867
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",element a[n] can be accessed by *(aptr + n),5.0,1,3.0,1.102066465187073,0.1568300296880359
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.","by referencing a pointer and referring to other pointers relative to the first pointer(pointer+1, pointer +2, etc)",2.0,0,1.0,0.8163878587911507,0.36895101499288097
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.","first, some pointer variable must reference the first entity in the array. any variable in the array can then be accessed by referring to that first entity's address plus some offset. i.e. ptrtoarray = array;  nthentity = *(ptrtoarray + n);",5.0,3,4.0,0.8320450494764066,0.24399488308493497
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",&[b3] is as bptr + 3. array can be treated as pointer,4.0,4,4.0,1.0364527612362036,0.15206569230091857
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",a[i] = *(a+i),5.0,4,4.5,1.353041809873848,0.0
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",&b[3]  bptr + 3,5.0,1,3.0,1.3087007017817214,0.0
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",*(arrayname + index),5.0,1,3.0,1.3649502920965866,0.13436278743915087
6.4,How can an array be addressed in pointer/offset notation?,"by initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",multi-dimensional array,0.0,3,1.5,1.2981469010834423,0.08511776314055786
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the number of bytes of an array during program compilation.,4.0,1,2.5,0.8427966560057883,0.26596327712347023
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the sizeof operator returns the size of the operand.,5.0,4,4.5,0.7397037449403563,0.42590963008086735
6.5,What does the sizeof operator return?,the size in bytes of its operand.,returns size of operand in bytes.,5.0,1,3.0,0.719477821384427,0.8018427366998515
6.5,What does the sizeof operator return?,the size in bytes of its operand.,it returns the size of an array in bytes.,4.0,2,3.0,0.7219604528187088,0.565092287136556
6.5,What does the sizeof operator return?,the size in bytes of its operand.,returns the size of the array in bytes during the program compilation.,4.0,1,2.5,0.5937603218177581,0.4276286493296612
6.5,What does the sizeof operator return?,the size in bytes of its operand.,it returns the size of the argument passed in,5.0,2,3.5,0.7046275175117168,0.29979744097082234
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the byte size of the date stored ina variable.,4.0,4,4.0,0.7351900385936261,0.1740106514250768
6.5,What does the sizeof operator return?,the size in bytes of its operand.,sizeof returns the size of the operand in bytes,5.0,3,4.0,0.5193968881486044,0.6658191737153527
6.5,What does the sizeof operator return?,the size in bytes of its operand.,"the amount of memory required for a specific parameter such as ints, doubles.",4.0,3,3.5,1.0584423686266247,0.03718790955125356
6.5,What does the sizeof operator return?,the size in bytes of its operand.,sizeof returns the size of the operand in bytes.,5.0,1,3.0,0.5912849253436893,0.6658191737153527
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the size of the information in bits.,1.0,1,1.0,0.46710379819718595,0.2945302234425798
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the size of the string.,3.0,4,3.5,0.661551434697769,0.3840223577238658
6.5,What does the sizeof operator return?,the size in bytes of its operand.,sizeof returns the size in bytes of the respective object.,4.0,2,3.0,0.5203682935563022,0.4041384787824885
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the sizeof operator returns the total number of bytes of its operand.,5.0,5,5.0,0.6834418001590078,0.48628988553791824
6.5,What does the sizeof operator return?,the size in bytes of its operand.,"the size of an operand in bytes. used with variable names, type names, and constant values",5.0,2,3.5,0.8714893369037464,0.4043000509889353
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the size in bytes needed to store the object in memory,4.0,2,3.0,0.5235941028440991,0.4919752265818003
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the size of the list object.,4.0,2,3.0,0.7022429216274266,0.3702392933621518
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the sizeof operator returns the size in bytes of an array parameter,3.0,2,2.5,0.6624869635656426,0.4015671200393957
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the size of operand in bytes,5.0,2,3.5,0.27205852144847903,0.9224784677126064
6.5,What does the sizeof operator return?,the size in bytes of its operand.,returns the size in bytes of the specified data,4.0,1,2.5,0.5365396226737346,0.5251450762254558
6.5,What does the sizeof operator return?,the size in bytes of its operand.,"it returns the size of an operand in memory, which is checked at compiler-time.",5.0,1,3.0,0.8550680418540997,0.35483560248541374
6.5,What does the sizeof operator return?,the size in bytes of its operand.,return size of operand in bytes,5.0,1,3.0,0.5261876583448568,0.8013415995608344
6.5,What does the sizeof operator return?,the size in bytes of its operand.,the total number of bytes of an object.,4.0,0,2.0,0.7250478208817435,0.3169478958659083
6.5,What does the sizeof operator return?,the size in bytes of its operand.,total number of bytes in the array,4.0,1,2.5,0.615176857421499,0.3643794688400492
6.5,What does the sizeof operator return?,the size in bytes of its operand.,it returns the size in bytes of a certain variable type,4.0,3,3.5,0.6663759436260555,0.458392099868306
6.5,What does the sizeof operator return?,the size in bytes of its operand.,"it yields the size in bytes of the operand, which can be an expression or the parenthesized name of a type",3.0,5,4.0,0.7720080157365903,0.46765730635541697
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",they can be passed by value or by reference,2.0,2,2.0,1.2948389195757917,0.0
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","nonconstant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to nonconstant data, constant pointer to constant data.",5.0,2,3.5,0.3648957177611338,0.9651438579213111
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",#name?,5.0,3,4.0,inf,0.0
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","four different ways: nonconstant pointer to nonconstant data, a nonconstant pointer to constant data, a constant pointer to nonconstant data and a constant pointer to constant data.",5.0,1,3.0,0.23306472050782936,0.9787263453958945
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",pass-by-value or pass-by-reference.,2.0,1,1.5,1.3449810141698808,0.0
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",you can pass a pointer to a pointer or pass a reference to pointer.,2.0,5,3.5,0.9542200107196667,0.31879910147438817
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",by address &bptr or directly bptr.,2.0,3,2.5,1.316564607587967,0.0
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","nonconstant pointer to nonconstant data, constant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to constant data.",5.0,3,4.0,0.3648957177611338,0.9651438579213111
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",by argument and reference.,1.0,0,0.5,1.3316817146577247,0.0
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","nonconstant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to nonconstant data, and constant pointer to constant data.",5.0,4,4.5,0.3648957177611338,0.9635320217464898
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",pass by value and pass by reference with reference or pointer arguments.,2.0,2,2.0,1.1643761819849372,0.08953725997165748
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",you can pass them with the pointer (*) or the memory address (&),2.0,1,1.5,1.1372830876809736,0.1333070224543291
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",nonconst -&gt; nonconst const -&gt; nonconst nonconst -&gt; const const -&gt; const,5.0,3,4.0,1.357302567752373,0.0
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",nonconstant pointer to nonconstant data constant pointer to nonconstant data nonconstant pointer to constant data constant point to constant data,5.0,4,4.5,0.5469717723054757,0.9509902052186222
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","non-constant pointer to non-constant data, non-constant pointer to constant data, constant pointer to constant data, constant pointer to non-constant data.",5.0,5,5.0,0.3648957177611338,0.6575472249719432
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",pass by reference with reference arguments. function(int &)  pass by reference with pointer arguments. function(int *),2.0,2,2.0,1.1563066387096081,0.06276857388532646
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",you can pass the reference or the dereference in a function,2.0,1,1.5,1.2472498067979376,0.0
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",1. nonconstant pointer to nonconstant data. its delcaration does no include  const qualifier. 2. nonconstant pointer to constant data. provides the performance of pass-by-reference and the protection of pass-by-value 3. constant pointer to nonconstant data.  4. constant pointer to constant date.,5.0,3,4.0,0.8092968282032411,0.7820884124215982
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","constant pointer to constant data, constant pointer to nonconstant data, nonconstant pointer to constant data, nonconstant pointer to nonconstant data",5.0,3,4.0,0.3633421001991447,0.9651438579213111
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",nonconstant pointer to nonconstant data nonconstant pointer to constant data constant pointer to nonconstant data constant pointer to constant data,5.0,2,3.5,0.4605518968868804,0.9651438579213111
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","pointers may be passed to functions by value, by reference with reference arguments, or by reference with pointer arguments.",2.0,1,1.5,1.163147172224968,0.08749100585125989
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",there are four way to pass pointer to a function 1. non constant pointer to non constant data 2.non constant pointer to  constant data. 3. constant pointer to non constant data. 4. constant pointer to  constant data.,5.0,1,3.0,0.5091026366722433,0.6953456294212577
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",nonconstant pointer to nonconstant data nonconstant pointer to constant data constant pointer to nonconstant data constant pointer to constant data,5.0,2,3.5,0.4605518968868804,0.9651438579213111
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","pass by value, pass by reference with reference arguments, pass by reference with pointer arguments",2.0,4,3.0,1.1911519548988772,0.0595718385263567
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","you can pass it where either the pointer cant be moved, the data pointed to cant be changed, or both or neither",5.0,2,3.5,1.1931560575818876,0.12156391363321649
6.6,What are the different ways to pass a pointer to a function?,"there are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.","there are only two ways to pass something, by value and by reference. use of dot or pointer operators within the receiving function and use of '&' operator inside the passing function",2.0,4,3.0,1.1097132985550462,0.14222467130470892
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,a pointer that points to the memory address of the beginning part of a functions.  pretty much the pointer points to the function so it can be called to execute.,5.0,4,4.5,0.8272143342199895,0.2445087153564053
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,a function pointer is a pointer that contains the address of the  function in memory.,5.0,4,4.5,0.6790807685465969,0.40220182065008075
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,"function pointers are pointers, i.e. variables, which point to the address of a function.",5.0,3,4.0,0.8190576640796474,0.2234608757458637
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,"a pointer to a function is the address where the code for the function resides. they can be passed to functions, returned from functions, stored in arrays and assigned to other pointers.",5.0,1,3.0,0.7172307685193973,0.44167667618095874
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,it contains the address of the function in memory.,5.0,4,4.5,0.5085859025347148,0.5131270716801205
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,when it is dereferenced a function pointer calls its function with zero or more arguments.,4.0,1,2.5,1.0689836151333934,0.07069673662445716
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,a pointer to a function,5.0,2,3.5,1.2076954862291,0.10870706067987423
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,"a pointer to a function itself, contains the address of the function and can be used to call that function",5.0,3,4.0,0.8335466020610363,0.29458845639039966
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,"function pointers are pointers, i.e. variables, which point to the address of a function.",5.0,5,5.0,0.8190576640796474,0.2234608757458637
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,a pointer to a function that contains the addresses of the function.,5.0,1,3.0,0.723001944952825,0.22436394044090638
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,a pointer that contains the address of a function,5.0,3,4.0,0.7854673993581676,0.317257458973619
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,a function pointer is a pointer to a function. it can be used in substitution for calling a function.,5.0,5,5.0,1.0349496873433979,0.12814107466426014
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,points to the memory address of a function.  kind of like breaking a branch off of a tree object and hitting other objects with it.,5.0,4,4.5,0.9994176422539575,0.20055784614746594
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,"they are pointers that contain the addresses to functions, they can be passed and returned from functions, as well as stored in arrays and assigned to other function pointers.",5.0,1,3.0,1.0197774857108068,0.06268283430902212
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,pointer variables that point to function addresses.,5.0,3,4.0,1.1047674371424925,0.05068374974891059
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,contains the address of the function in memory.,5.0,2,3.5,0.48876605304191845,0.5410603822968216
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,"a pointer that points to a function itself, which allows passing a function as a parameter to another function.",5.0,3,4.0,1.0686080804129412,0.09688430988132142
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,pointers that contain the addresses of functions.,5.0,4,4.5,0.9468556836288533,0.08094635744375123
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,is a pointer that contains the address of a function,5.0,4,4.5,0.8121096780176604,0.30479923846922696
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,a pointer that contains the address of the function definition,4.0,2,3.0,0.69131250424374,0.32468029175707025
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,"a function pointer contains the memory address of a function. using a function pointer, a function can be passed to or returned by another function. function pointers can also be stored in arrays.",5.0,1,3.0,0.8882986450028261,0.26828935274143856
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,function pointer is a pointer to a function. function pointer contains address of functions,5.0,4,4.5,1.0491731641924156,0.20008319314330728
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,a pointer that contains the address of a function in memory.,5.0,1,3.0,0.6745943981995539,0.42917051926292304
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,it contains the address of the function in memory,5.0,3,4.0,0.42419887091748615,0.5131270716801205
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,it is a pointer that points to the address of a function.,5.0,4,4.5,0.9322663404670233,0.28652960300820024
6.7,What is a function pointer?,the address of the location in memory where the function code resides.,"when dereferenced, a function pointer invokes a function, passing it zero or more arguments just like a normal function. in programming languages like c, function pointers can be used to simplify code, such as replacing large switch statements.",4.0,4,4.0,1.1036396063779412,0.13594798307517655
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"consists of sequence of nodes, each containing a number of data fields and one or two links called pointers that point to the next or previous nodes.",4.0,5,4.5,1.1569720984733274,0.077196672118152
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a linked list is a list in which each item in the list points to the next item in the list.,4.0,5,4.5,1.1984745962961387,0.0
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a linked list is a chain of structs or records called nodes and you have the ability to add, delete, or retrieve items.",4.0,1,2.5,1.1682292554360134,0.017096603824341316
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a list of elements, or nodes, that are linked to one another such that each element points to the next element.",4.0,3,3.5,1.0043172462767176,0.1638166938195746
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a sequence of nodes, each containing data fields (specified by programmer) and pointer(s) which can point to the next or previous nodes.",4.0,3,3.5,1.0942311663790916,0.05706329003873915
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a list of nodes where each node contains a data member and also a pointer to the next node.,4.0,1,2.5,1.219041581925516,0.02353138430422282
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a list of items linked together.  each item is linked to its successor.,4.0,3,3.5,1.2184935056889157,0.024350496476949153
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a linked list is a chain of nodes that each store a single piece of data and pointer variables that point to other nodes in the list.,4.0,1,2.5,1.100713564081102,0.10541390904812914
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"one of the fundamental data structures, and can be used to implement other data structures. it consists of a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes.",4.0,1,2.5,1.1032773364570394,0.08768755442981895
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a data structure in a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes.",4.0,4,4.0,1.216575344375981,0.015091344946162183
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,information in memory linked to the next piece of information and can only be linked forwards and not backwards.,2.0,4,3.0,1.0315591249722407,0.09718877123752302
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a linked list is a data structure that is not necessarily in the same contiguous memory space (such as arrays). it holds the data type and points to the next data item in the list, or in a doubly linked list also to the previous item.",5.0,5,5.0,1.1515407601994563,0.024004732403016694
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a linked list is a data structure containing one or more data elements with a pointer to the next node.,4.0,1,2.5,1.1149523053012786,0.06307502695679318
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a series of ""nodes"" structures with a value and a pointer that point to a similar ""node"". not quite an array, but still can carry a list of values.",4.0,1,2.5,1.0701931150110766,0.10254604514427047
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a data type that contains a pointer to at least the next  element in a list.,4.0,5,4.5,1.084073605507496,0.056356463282342284
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,each component contains a node - a data item and a pointer to the next item in the list,4.0,0,2.0,1.201494603021509,0.0
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a linked list is a chain of structs or records called nodes.  each node has at least two members, one of which points to the next item or node in the list.",4.0,1,2.5,1.1930567604250444,0.030538233811005306
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"an array based list that uses an implicit ordering scheme, often using pointers.",1.0,1,1.0,1.1349102548046146,0.04000089521364766
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a series of structures containing data items and a pointer that links the structure to the next structure.,4.0,0,2.0,1.1206873948874572,0.05955208382073518
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a linked list is a collection of objects each containing at least one data member, and a pointer to the next object in the list (and the previous object in the case of a doubly linked list)",4.0,2,3.0,1.1542855797129268,0.11076389561387703
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a link list is a data structure which is built from structures and pointers. it forms a chain of nodes with pointers representing the links of the chain and holding the entire thing together,4.0,4,4.0,1.1883721047092886,0.024366998015716252
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,its a list of pointers that are linked 2 each other. every pointer points to the next pointer which has the next element,4.0,4,4.0,1.1359270887558157,0.05581041949866014
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,linear collection of self-referential nodes connected by pointers.,4.0,4,4.0,1.0413868863459521,0.15507932202417235
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,the items of a data structure are linked to each other using pointers,4.0,2,3.0,1.1777765476491646,0.0284865674578551
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,a list of objects where each object contains a link to the next item in the list,4.0,1,2.5,1.2023997757332352,0.023782170436607648
7.1,What is a linked list?,a collection of elements that can be allocated dynamically.,"a linked list is one of the fundamental data structures, and can be used to implement other data structures. it consists of a sequence of nodes, each containing arbitrary data fields and one or two references (""links"") pointing to the next and/or previous nodes.",4.0,5,4.5,1.1082636399919263,0.08639681214854482
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,elements can be inserted into a link list at any point and does not need to be resized unlike an array needs to be.,5.0,4,4.5,0.9582769211893468,0.16637916969276412
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"unlike arrays, linked lists can insert and delete without shifting data and change in size easily.",5.0,2,3.5,0.9122901109408075,0.22305716851207452
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"array size is fixed,but linked is not fixed.",5.0,5,5.0,0.9566500573782708,0.0918485921508302
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,you can insert into and delete items from a pointer-based linked list without shifting data.,5.0,0,2.5,0.9359347899846413,0.13427322800786795
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,arrays must be of a defined size... elements can be added to a linked list w/o defining any size.,5.0,4,4.5,0.7264686421443456,0.2583444495496627
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"the principal benefit of a linked list over a conventional array is that the order of the linked items may be different from the order that the data items are stored in memory or on disk, allowing the list of items to be traversed in a different order. a linked list is a self-referential datatype because it contains a pointer or link to another datum of the same type. linked lists permit insertion and removal of nodes at any point in the list in constant time",3.0,2,2.5,0.8876426607818733,0.264954784254606
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,you can expand when you need it.  you do not have to predetermine the size.,5.0,4,4.5,1.015876642913173,0.059934413809232784
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,linked lists are able to grow and shrink in size as needed,5.0,2,3.5,0.9156854434269571,0.21021982533839134
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,linked list is able to grow in size as needed. does not require the shifting of items during insertions and deletions,5.0,3,4.0,0.9891277693709135,0.09331111754346957
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"a linked list is not fixed in size, and does not require the shifting of items during insertions and deletions.",5.0,2,3.5,0.9300762855236437,0.09818751089022754
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,there is no limit as to how many you create where an array can only hold a given amount of information.,3.0,5,4.0,1.1272648326688874,0.0642907423712132
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,linked lists have constant time insertion and deletion,4.0,4,4.0,0.8601087904897087,0.27908257639116774
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"linked lists can be grown dynamically, items don't require shifting, and they have a greater awesome factor than that of arrays.",5.0,4,4.5,0.8651682484453428,0.24219667751306645
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,linked lists have an indefinite size. they can be added to and taken away from very easily with little difficulty in the shifting of data.,5.0,4,4.5,0.8980979583947981,0.243819146032202
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"nearly infinite size, limited only by system memory and also the ability to expand the size dynamically.",5.0,3,4.0,1.032311209085898,0.024559626469399746
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"they grow as needed, while arrays are of fixed size.",5.0,2,3.5,1.17777484841842,0.028548051157896503
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,does not have a fixed size. linked list is able to grow as needed. the time to access an array bases list takes a contant amount of time where as an linked-base like depends on 'i',5.0,4,4.5,1.0433597628707552,0.11955805800698359
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,linked lists can grow and shrink as you need them to.  arrays have a fixed size.,5.0,4,4.5,0.8629143382672303,0.24567613907182861
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,more memory can be allocated on the fly for more items,4.0,2,3.0,0.9121615161057431,0.1324810328635915
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"a linked list may be increased in size as needed, while an array's size is set when it is created",5.0,3,4.0,0.9895018679913185,0.12068008672366068
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"array has a fixed size, but linked list is able to grow in size as needed",5.0,4,4.5,1.0155351889314437,0.07867479899844171
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,its resizeable,5.0,2,3.5,1.248669854728503,0.0
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,linked lists do not have a set size and can grow or shrink as needed.,5.0,3,4.0,0.8846750232721112,0.25562529237863496
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,linked lists are abe to grow as needed to a new size,5.0,1,3.0,0.9246077020903929,0.2094776476041359
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,"the size is not fixed, easier sorting because of no shifting, easier to insert items into the list",5.0,1,3.0,0.9922621323131615,0.044103573281205094
7.2,What is the main advantage of linked lists over arrays?,the linked lists can be of variable length.,the size of array is restricted to declaration. insertion/deletion of values in middle of array is not possible.,5.0,4,4.5,1.0778320907460521,0.07365173309743726
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",array can retrieve memory from any place in the list while in a link list you have to traverse through each individual node.,5.0,5,5.0,0.9424195915761209,0.10599783126269932
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","arrays require less memory than linked lists and allow direct access to a specified item. also, insertion and deletion in arrays does not require a list traversal.",4.0,4,4.0,0.9774878512238901,0.3091452413516474
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","access to a particular element is very fast, because its location in memory can be determined mathematically and accessed directly.",5.0,4,4.5,0.8608219986166021,0.21374353357222284
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",arrays are good for random access and good for sequential access which are both in constant time. where linked lists are linear for random access. arrays are faster in this case.,5.0,0,2.5,0.9975825527125426,0.10241646318004052
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","an array is capable of accessing any part of that array based on the index. the link list must be traversed from the beginning or the end, that is, data can only be accessed if it is adjacent to the previous or next nodes.",5.0,4,4.5,0.8448782316896976,0.18720805784526504
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","on the other hand, arrays allow random access, while linked lists allow only sequential access to elements. singly-linked lists, in fact, can only be traversed in one direction.",5.0,1,3.0,0.844157590265009,0.2338387283238262
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",you have to keep up with the head of the list.,1.0,4,2.5,1.1188539322885072,0.04808880478339379
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",arrays are easier to implement and require less memory,3.0,1,2.0,1.1468913191089372,0.1591038042108407
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",linked list has an increase complexity of the implementation. the linked list has an array that keeps growing which leads to a increase in memory.,2.0,5,3.5,0.7947995031724353,0.18885896540495117
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",you don't have to iterate through the entire list to access elements.,5.0,5,5.0,1.0745108873221536,0.08532383203740602
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",you can go forwards and backwards and point to any piece of data at any given time where linked lists have to point to the next piece of data.,2.0,5,3.5,1.0245900501118934,0.12571918373671107
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",take up less memory and are contiguously stored,4.0,4,4.0,1.2170109466820804,0.0
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","arrays, being fixed, are less error prone.",1.0,1,1.0,1.2311028423691963,0.0
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","arrays have a set list of values. meaning you can pick a spot in the array such as a[7] picks the 8th spot in the array. with linked lists you have to keep track with pointers if you want to take specific nodes out, otherwise you must traverse the entire list.",5.0,1,3.0,0.9671198034531041,0.16031331819916905
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","direct access to elements, and speed, linked lists have increased search times to access elements even if the list is sorted. ( like getting the last element without a pointer directly to the end of the list. )",5.0,3,4.0,0.9293308931554995,0.21803737075625576
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",array items are accessed directly with equal access time,5.0,4,4.5,0.944949113883396,0.2439730682050784
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",array-bases implementations require less memory than a pointer-bases one.,3.0,3,3.0,1.1677116027483585,0.11299702360153463
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",you can access specific elements quickly in an array.  in a linked list you must traverse the list to get access the same element.,5.0,1,3.0,0.7713858535242492,0.1953206466307085
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",link lists only allow sequential access where arrays allow random access,5.0,2,3.5,1.1394546295768397,0.06198578462500481
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","any entitiy in an array may accessed immediately, whereas a linked list must be traversed one item at a time because each object only points adjacent objects",5.0,5,5.0,0.8520624664870902,0.1677910020859917
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",array based implementation requires less memory than lined lists based implementation,3.0,3,3.0,1.1275076003150282,0.08490716012603987
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).",array-based implementations require less memory than a pointer-based ones,3.0,3,3.0,1.161262377527053,0.12563010903306393
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","you can go up and down an array , but you can only go one direction while traversing a linked list.",1.0,5,3.0,0.9082758510682857,0.12984177086433962
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","arrays allow for the random access of any item cotained a any time, linked lists must be gone through toget to the desired item",5.0,1,3.0,0.943247690346942,0.1237198466696009
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","in arrays you have direct access to each element, but in linked lists you have to traverse the list up to the element that you need.",5.0,4,4.5,0.910973702771199,0.1552456577291011
7.3,What is the main advantage of arrays over linked lists?,"the elements in an array can be accessed directly (as opposed to linked lists, which require iterative traversal).","array size is fixed. but linked is not fixed, data is also accessed quicker in array list, also memory requirement is less and no pointers required. arrays have random access and less overheads compared to linked list have sequential access only with too much overheads and no cache memory support. on the other hand, arrays allow random access, while linked lists allow only sequential access to elements. singly-linked lists, in fact, can only be traversed in one direction.",5.0,4,4.5,0.92652472570149,0.20129687335410734
7.4,How are linked lists passed as arguments to a function?,by reference.,they are passed by reference because you want the function to change the pointer,4.0,0,2.0,1.2161313167949404,0.3441093963251259
7.4,How are linked lists passed as arguments to a function?,by reference.,linked lists are passed as arguments to a function by passing the head pointer of the list by reference.,5.0,2,3.5,1.133923737857456,0.4345294373057904
7.4,How are linked lists passed as arguments to a function?,by reference.,- a function with access to a linked list's head pointer has access to the entire list.        - pass the head ponter to a function as a reference argument.,5.0,2,3.5,1.3058074306450786,0.1491624747377402
7.4,How are linked lists passed as arguments to a function?,by reference.,by using a node.,2.0,4,3.0,0.65651106432368,0.3105748873832458
7.4,How are linked lists passed as arguments to a function?,by reference.,pass-by-reference,5.0,0,2.5,inf,0.6985566146178492
7.4,How are linked lists passed as arguments to a function?,by reference.,you send a pointer to an object of the linkedlist class,2.0,3,2.5,1.3212697039772794,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,passed as a pointer to the head.,5.0,3,4.0,1.2747707746189096,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,passing the head pointer of a linked list to a function gives that function access to all nodes of that linked list,5.0,2,3.5,1.3424309031029762,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,you have to pass the head pointer to a function since it has access to the entire list.,5.0,4,4.5,1.290955205111486,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,you pass the head pointer to a function as a reference argument.,5.0,1,3.0,1.3348053219879419,0.2683062272021208
7.4,How are linked lists passed as arguments to a function?,by reference.,not answered,0.0,0,0.0,1.3662997986498784,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,passes a pointer to a linked list object,2.0,0,1.0,1.3563443669885606,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,"the linked list object contains the head, through which the other elements are accessible.",4.0,2,3.0,1.259269114785851,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,by the head of the list. it takes the head address and traverses from there on in.,5.0,1,3.0,1.2115261226750016,0.11529967054525246
7.4,How are linked lists passed as arguments to a function?,by reference.,as a pointer node.,3.0,3,3.0,1.3204694038400957,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,a method with access to a linked list's head pointer as access to the entire list,5.0,0,2.5,1.3069329652823818,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,a function with access to a linked list's head pointer has access to the entire list. pass the head pointer to a function as a reference argument,5.0,3,4.0,1.311859562588018,0.1520559739480196
7.4,How are linked lists passed as arguments to a function?,by reference.,the head pointer is passed to a function as a reference argument.,5.0,4,4.5,1.3082429779182756,0.2787423615473756
7.4,How are linked lists passed as arguments to a function?,by reference.,the pointer to the first element is passed to a function,5.0,3,4.0,1.2880288745353958,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,"linked lists are passed by reference, specificly the head pointer",5.0,2,3.5,1.1613161289666463,0.37650446749599487
7.4,How are linked lists passed as arguments to a function?,by reference.,pass the head pointer to a function as a reference argument,5.0,1,3.0,1.3240300395403386,0.2826367394910913
7.4,How are linked lists passed as arguments to a function?,by reference.,by refrenece,5.0,0,2.5,0.0,0.22236636022715173
7.4,How are linked lists passed as arguments to a function?,by reference.,by passing the head pointer and going through the list as needed inside the function.,5.0,4,4.5,1.1934015136724825,0.11937423650359133
7.4,How are linked lists passed as arguments to a function?,by reference.,linked lists are passed by using pointers,3.0,0,1.5,1.1309967840645987,0.17614026222659102
7.4,How are linked lists passed as arguments to a function?,by reference.,the head object is passed to the function,4.0,4,4.0,1.280525943065269,0.0
7.4,How are linked lists passed as arguments to a function?,by reference.,"linked lists permit insertion and removal of nodes at any point in the list in constant time,[1] but do not allow random access.",0.0,4,2.0,1.3252117782999702,0.0
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,they are passed by reference because you want the function to change the pointer,0.0,4,2.0,1.0362309076554859,0.09053554560360656
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in a circular linked list, every node has a successor which means that the last node's successor is the head or first node.",5.0,3,4.0,0.730391539070208,0.3704172617750763
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,a circular linked list is a linked list that links items in a continuous circle. this allows the full list to be traversed by starting at any item in the list; a fixed head or tail is not required.,5.0,1,3.0,0.7671091552482182,0.46567753455644106
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in a circular linked list, the last node points to the first node.",5.0,4,4.5,0.41176473480355524,0.6794866800000873
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"on a circular linked list, the end element points to the head, thus making the circle. a basic link list has nothing pointing to the head, and the last element points to null.",5.0,4,4.5,0.4956759678271387,0.6723057578581706
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,the circular linked list's last node points to the begining of the list while a standard linked list points to null,5.0,3,4.0,0.5358818272891417,0.6990918859102926
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,the last item in the list points to the head,5.0,4,4.5,0.3374558734136293,0.7458020113859473
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in a circular linked list, the last node points back to the first node, there is no null",5.0,2,3.5,0.6175021347892509,0.5490865018794253
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"circular linked lists are most useful for describing naturally circular structures, and have the advantage of regular structure and being able to traverse the list starting at any point.",2.0,3,2.5,0.8715741633290057,0.28540511936472457
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,a circular linked list has the last node point back to the head of the linked list.,5.0,2,3.5,0.4299896004192764,0.7334026520300317
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,basic linked list points to a null at the end and circular points to the head at the end.,5.0,1,3.0,0.4949956107266959,0.5764596283498141
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,in a circular linked list the the last item points to the first item.,5.0,5,5.0,0.22160711491175197,0.6559823280312733
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"the circular linked list's tail points to the head, whereas the basic linked list's tail points to a null.",5.0,2,3.5,0.6220080702397913,0.6241585488377804
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,a basic linked list has an end with a null value where a circular linked list has a pointer from the end to the beginning,5.0,5,5.0,0.7857758636537893,0.41049709916960786
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"how to determine the end of the list, in basic linked lists the last element links to a null pointer, while circular linked lists link to the head element at the end.",5.0,3,4.0,0.5189908622238764,0.542776414966421
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"no node in a circular linked list contains null, the last node points pack to a node within the list.",5.0,2,3.5,0.5933474432285055,0.5128617207730992
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"the difference between a circular linked list and a basic linked list is that a circular linked list, the last node references the first node. every node in a circular linked list has a successor and no node in a circular linked list contains null.",5.0,4,4.5,0.6691534547379737,0.5844781540822204
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,no node in a circular linked list contains null.,3.0,4,3.5,0.7992478628739015,0.4133682658825791
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,in a circular linked list the last element points to the head of the list,5.0,1,3.0,0.10255223780232689,1.0
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in a regular linked list the last object points to null. in a circular linked list, the last object points back to the beginning of the list",5.0,4,4.5,0.3638776295567101,0.7460267630311147
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in circular linked list each node has successor, no node contains null, while in basic linked list last node contain null.",3.0,2,2.5,0.7691657416792217,0.3767895531082984
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in a circular linked lists, the last element points to the first",5.0,2,3.5,0.2965253829877986,0.6973069457402024
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"a circular linked list does not have a last element. instead, it's last item points to the head of the list.",5.0,4,4.5,0.48978728893208817,0.7664455073079366
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in a circular linked list, the last node contains a pointer that goes back to the first node; in a basic linked list, the last node contains a null pointer",5.0,2,3.5,0.6556837602383845,0.4762801012116427
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in a circular linked list, the last object is linked back to the first object.",5.0,3,4.0,0.5676896956374209,0.5610979459659771
7.5,What is the difference between a circular linked list and a basic linked list?,the last element in a circular linked list points to the head of the list.,"in the case of a non circular link list, if you are at the last node of the list and u want to move to first u need to go to one, step back till u reach to first. but in circular link list from last to first you need to make only one move.  in a single link list u can move only in one direction but in double link list u can move in any direction back or forward or forward.",2.0,0,1.0,0.8942654113085096,0.3490262042040314
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",they can traverse in both directions,3.0,2,2.5,1.0520592935745965,0.0719266401071027
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",in a doubly linked list you can delete a node without having to traverse the list.,5.0,1,3.0,0.9179330328703994,0.18641102786558716
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",a doubly-linked list allows you to delete a node without traversing the list to establish a trailing pointer.,5.0,4,4.5,1.0671584781049273,0.10887061890915978
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",a doubly linked list allows you to traverse the list in either direction. each node points to its successor as well as to its predecessor.,3.0,2,2.5,1.0170343927057033,0.11180414435912937
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","doubly-linked lists can traverse backwards, though they still cannot access data at any point in the list, it can be shorter to traverse backwards.",3.0,3,3.0,0.9051524277748131,0.1239455463192419
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",you can traverse the list from front to back and back to front,3.0,2,2.5,1.0035246370106672,0.11385036957226938
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",you can traverse the list in reverse.,3.0,2,2.5,0.8474609322525617,0.1944127708560544
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",doubly linked lists can be traversed in both directions,3.0,1,2.0,1.0018987767215692,0.08217365008273267
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","double-linked lists require more space per node, and their elementary operations are more expensive; but they are often easier to manipulate because they allow sequential access to the list in both directions.",4.0,1,2.5,0.9904670421450773,0.11220254054966075
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",you can traverse forwards and backwards through nodes.,3.0,5,4.0,1.20032305605681,0.040198912120497664
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",you can point both forwards and backwards,3.0,3,3.0,1.1922175131102877,0.043182965512632954
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",you can go backwards in the linked list and access previous data easier without having to keep track of the previous item,4.0,4,4.0,0.9335955057285058,0.12928260581640383
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",doubly linked lists allow backward movement through the nodes.,3.0,1,2.0,1.0621550667278221,0.025190463647923614
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","they have double pointers, so each node can point forwards or backwards. making it a little easer to get to where you need.",3.0,5,4.0,1.0899193256308064,0.031037820829964088
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",ability to backtrack through a list.,3.0,3,3.0,1.2633352229979584,0.08012337715661949
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",you can move forwards and backwards in the double-linked list. basic only moves forwards.,3.0,5,4.0,0.9636483587272071,0.10553311393253662
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",the advantage is that each node points to bothe its predecessor and its successor. there are no special cases for insertion and deletion.,4.0,5,4.5,1.0709781911709557,0.12689720169148452
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",each node points to both its predecessor and its successor.,4.0,4,4.0,1.2150073106504877,0.012423018248732718
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",a doubly linked list has pointers in both directions. this allows for access from back to front as well as front to back,3.0,3,3.0,1.066279405174895,0.058378749492275395
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","a doubly linked list can be traversed either direction, while a normal linked list can only be traversed from start to finish",3.0,3,3.0,1.0441294763697395,0.12983099701682554
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","double linked list are often easier to manipulate, because they allow sequential access to the list in both direction",4.0,0,2.0,1.0045274533308968,0.12565989513680131
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","given a node in the list, one can navigate easily in either direction",4.0,1,2.5,0.8919649158607702,0.21380047696278345
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",you can traverse the list both forward and backwards.,3.0,2,2.5,0.9687206751864511,0.13690418371535068
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",a doubly linked list allows you to back up from a node rather than having to go through the entire list again,4.0,0,2.0,1.0705233899247848,0.10355199389275585
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",gives faster times for some operations such as insertion and deletion,5.0,3,4.0,0.9907091625817697,0.2333284268885063
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,"all the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.","the primary disadvantage of doubly linked lists are that (1) each node requires an extra pointer, requiring more space, and (2) the insertion or deletion of a node takes a bit longer (more pointer operations).",0.0,1,0.5,0.9461593773970728,0.18404626009281766
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,they take up twice as much memory for each node,5.0,2,3.5,1.2127662154585892,0.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"in a doubly linked list, there are more pointers to set and the mechanics of inserting and deleting are more difficult. also, the special cases at the beginning or end of the list are more complicated.",4.0,0,2.0,1.0652545030188387,0.1031095212931618
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"there are more pointers to set, the mechanics of inserting into and deleting from a doubly linked list are a bit more involved than for a singly linked list.",4.0,2,3.0,1.192609966198993,0.09679082252769877
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,insertion and deletion with a doubly linked list are more involved than with a singly linked list leaving more room for error and complex algorithms.,3.0,4,3.5,1.2531708264220747,0.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"need more memory to store ""previous"" pointers.",5.0,4,4.5,1.0125285837312308,0.3029654885649017
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,a node in a doubly linked list takes up more memory than a node in a singly linked list.,5.0,4,4.5,1.215223729394313,0.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,you have to keep up with where you are and you have to consider the predecessor and successor connections when inserting/deleting.,3.0,2,2.5,1.1683296649109927,0.036967240591683305
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"each node requires an extra node, requires more memory, and is more difficult to insert and remove individual nodes",5.0,5,5.0,1.0934679103063976,0.124736465270475
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"double-linked lists require more space per node, and their elementary operations are more expensive",5.0,1,3.0,1.0762353534028548,0.1087506347255677
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,more difficult to delete and create nodes.,3.0,5,4.0,1.2545295226624222,0.029925946977214006
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,they use more memory and you have to make 2 pointers and update 2 pointers each time you change the list.,5.0,1,3.0,1.1817162166031767,0.21748095639117798
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,nodes take up more memory,5.0,2,3.5,1.2336048895613991,0.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"each node requires an extra pointer (space requirements increased), insertion or deletion of a node takes a longer (more pointer operations).",5.0,1,3.0,1.1177106032036508,0.21061366209619747
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,its a little more confusing. the special cases at the end and beginning become more difficult to do.,3.0,4,3.5,1.0441718517457792,0.03525920218764556
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,increased actions to add and remove elements to the linked list.,3.0,4,3.5,1.1038596467151311,0.06548770337973259
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"inserting and deleting in a double-linked list is more involved, and has special cases at the beginning and end.",3.0,1,2.0,1.1407774228291045,0.009560430930146682
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,the main disadvanate is that if hard to remove all items in the list.,1.0,1,1.0,1.0411209633959233,0.04682244747813204
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"each node requires an extra pointer, taking up more storage.  insertions and deletions require more pointer operations.",5.0,4,4.5,1.0695332439371439,0.11120051324421275
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"in a doubly linked list there are twice as many pointers for each element , therefore more memory is used",5.0,3,4.0,1.238016294655627,0.1041245710506784
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,the process of adding and removing nodes in a doubly linked list is more complex than in a basic linked list,3.0,5,4.0,1.172443130033668,0.009398202970133263
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"double linked lists require more space per node, and their elementary operation are more expensive",5.0,2,3.5,1.1053079014322638,0.10739387013505135
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"1- each node requires an extra pointer, requiring more space 2- the insertion or deletion of a node takes a bit longer, more pointer operations",5.0,3,4.0,0.9975910616659338,0.20587350014171182
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,it takes up twice the storage needed.,5.0,5,5.0,0.9981537616486573,0.014274001323067451
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"using more pointers to enable the backward movement takes up more memory, having more pointers make it slightly more work to add or remove a node from the list",5.0,2,3.5,1.1251546237147758,0.1636789563260458
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,"increased memory requirements, slightly more complicated when modifying elements in the list",5.0,5,5.0,1.1162116955038646,0.01053538652480047
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required to store the back pointers.,not answered,0.0,1,0.5,1.2661195250704897,0.0
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a data structure for storing items which are to be accessed in last-in first-out order that can be implemented in three ways.,5.0,0,2.5,0.7160474882673479,0.4705828040747416
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a stack is an abstract data type that is based on the principle that the last element inserted into the stack will be the first element removed from the stack.,5.0,1,3.0,0.6768409120009807,0.3771628773348561
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",stores a set of elements in a particular order.,0.0,3,1.5,1.1810710830014253,0.06929959022633657
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","an adt whose most recently inserted item is the first item removed or retrieved. this property is called last in, first out (lifo). items enter and leave a stack at its top.",5.0,1,3.0,0.8517647924731448,0.3530116517151622
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a list in which only the top (or last item added) can be modified.,4.0,3,3.5,0.6775919038050203,0.47027749292542315
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a stack is a data structure that uses push to insert an item and pop to remove ad item. the stack use a last in first out structure for inserting and removing items.,5.0,3,4.0,0.8339990347343786,0.37318755233558093
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a data structure that stores data using lifo.,5.0,2,3.5,0.9882601343691643,0.2114252074421707
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","a stack is similar to an array, but does not allow for random access. stacks only allow a user to retrieve the last item put into the stack. last in, fist out.",5.0,4,4.5,0.9368665975742337,0.24368991170095153
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",stores a set of elements in a particular order. stack principle: last  in  first  out. it means: the last element inserted is the first one to be removed.,5.0,5,5.0,0.8211599931406167,0.47361023621429615
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a stack is an adt that stores a set of elements in a particular order.,1.0,0,0.5,1.0547077158555618,0.10379388400160207
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","a data type that stores a set of elements in a certain order, last in, first out.",5.0,5,5.0,0.8642944907693031,0.39666106870015555
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a data structure that moves elements in last in first out,5.0,1,3.0,0.8361043734439384,0.535418260407536
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",stores a set of elements in a last in first out order.,5.0,5,5.0,1.0481669007104084,0.38023128125556077
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a list that can be added to or removed from only from the top.,5.0,3,4.0,0.6891136118102775,0.3865668972694751
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","a stack is an abstract data type which operates on a last in first out basis for storing a list of objects, and does not support ( at least in the pure stack) peeking at a element without removing the rest of the stack first.",5.0,5,5.0,0.9284335334772316,0.23944061194194063
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",stores a set of elements in a particular order based on the principle of last in first out (lifo).,5.0,4,4.5,0.9707535432741834,0.28468521705126143
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","an object list that stores elements in a particular order, the first object inserted is at the bottom with the last object at the top so the first object in is the last object out.",5.0,2,3.5,0.8310179839232291,0.3386468928351156
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",an adt that stores a set of elements in a particular order. the stack principles are lifo. the last item inserted in the list is the first out.,5.0,2,3.5,0.7687109558247527,0.35095428030106696
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",an abstract data type that stores a set of elements in a particular order.,1.0,3,2.0,1.0085932865712448,0.13759933487189158
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a collection of data to be executed in the order of last in first out,5.0,1,3.0,0.8093235286242015,0.4501564087383326
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","a stack is a data structure that allows data members to be added or removed one at a time, and in order. they are a ""last in first out"" structure.",5.0,4,4.5,0.7188622215271796,0.5513364684066764
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",stores a set of element in a particular order,0.0,0,0.0,1.1746431195320954,0.023100405782199948
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",is a list of element where the first one to be removed is the last one inserted,5.0,1,3.0,0.7460828190547786,0.3767671054294307
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a data structure that puts elements in a list and only allows the user  access to the last element.,4.0,1,2.5,0.759039980449444,0.34683871009096967
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)",a finite ordered list with zero or more elements,0.0,4,2.0,1.2252363746101407,0.06909927624178822
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","a storage container that holds objects in a certain order, which has a lifo priority",5.0,0,2.5,0.9508221876767877,0.1298661443944464
8.1,What is a stack?,"a data structure that can store elements, which has the property that the last item added will be the first to be removed (or last-in-first-out)","stacks are a type of container adaptors, specifically designed to operate in a lifo context (last-in first-out), where elements are inserted and extracted only from the end of the container.",5.0,1,3.0,1.0333168998701494,0.1856876643929038
8.2,What are the two main functions defined by a stack?,push and pop,push and pop are two main functions defined in a stack,5.0,1,3.0,1.0416759313174464,0.5005624910324041
8.2,What are the two main functions defined by a stack?,push and pop,push which inserts an element on the top of the stack and pop which removes the last inserted element from the stack.,5.0,1,3.0,1.173336211245453,0.2863769946555207
8.2,What are the two main functions defined by a stack?,push and pop,push and pop.,5.0,4,4.5,0.6915363141202018,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,pop function and push function,5.0,4,4.5,0.6852410080537996,0.7475204184904582
8.2,What are the two main functions defined by a stack?,push and pop,push and pop.,5.0,0,2.5,0.6915363141202018,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,push (insert an item) pop (remove an item),5.0,3,4.0,0.6699966846489428,0.36165433105214395
8.2,What are the two main functions defined by a stack?,push and pop,adding a new item and removing the item,5.0,4,4.5,1.319994052803772,0.05460092446030279
8.2,What are the two main functions defined by a stack?,push and pop,push (insert) and pop (retrieve).,5.0,5,5.0,0.0,0.5477793765177253
8.2,What are the two main functions defined by a stack?,push and pop,push and pop.,5.0,1,3.0,0.6915363141202018,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,push and pop.,5.0,2,3.5,0.6915363141202018,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,2,3.5,0.0,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,push (add an element) pop (remove an element),5.0,2,3.5,0.6699966846489428,0.4054949443284957
8.2,What are the two main functions defined by a stack?,push and pop,push and pop.,5.0,5,5.0,0.6915363141202018,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,5,5.0,0.0,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,push ( to add to a item the stack) pop  ( to pull the last item added from an array. ),5.0,2,3.5,1.0618494591156147,0.2869381784251567
8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,0,2.5,0.0,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,"push and pop, push puts an object into the list, and pop takes the last object off.",5.0,3,4.0,0.9778845511457102,0.6187078732091362
8.2,What are the two main functions defined by a stack?,push and pop,push and pop are the two main functions of a stack,5.0,4,4.5,0.9897764571680111,0.543136367383186
8.2,What are the two main functions defined by a stack?,push and pop,push and pop,5.0,2,3.5,0.0,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,"push, which adds an element to the stack... and pop which takes an element off the stack",5.0,1,3.0,1.2186072545705218,0.31075727379955004
8.2,What are the two main functions defined by a stack?,push and pop,"push and pop, which add and remove data from the stack, respectively.",5.0,4,4.5,1.1205944774797898,0.4655049751057715
8.2,What are the two main functions defined by a stack?,push and pop,push and pop,5.0,2,3.5,0.0,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,pop - to remove item push - to insert an element,5.0,4,4.5,0.9241153579728711,0.4216673836294724
8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,1,3.0,0.0,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,pop and push,5.0,1,3.0,0.0,1.0000000000000002
8.2,What are the two main functions defined by a stack?,push and pop,push - adds an item to the top of the stack pop - removes the top item from the stack,5.0,3,4.0,1.1416681211652007,0.2542168899996918
8.2,What are the two main functions defined by a stack?,push and pop,push and pop. push adds a given node to the top of the stack leaving previous nodes below. pop removes and returns the current top node of the stack,5.0,1,3.0,1.1391700772220676,0.4501485233914852
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",an array has a fixed size.  you can add and delete elements to the end of the array and you use a pointer to keep track of the last element added.  each time you add or delete an element you update the pointer and check if it is equal to the max size of the array.,5.0,2,3.5,0.850071150988589,0.35915851444999636
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",by implementing an array of a pre-defined size with the bottom stack element stored at element 0 and the last element stored in the array is the top. you increment top when an element is pushed and you decrement it when an item is popped.,5.0,4,4.5,0.9703923956122742,0.24107687211274992
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","if you use a dynamically allocated array, you must provide a destructor and copy constructor.",2.0,1,1.5,1.2097530101581095,0.05374599892828299
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","create a int value that stores the ""head"" of the stack. increment the top when one element is pushed and decrement after it is popped.",5.0,4,4.5,0.9050869131925907,0.2186690276579526
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",use a pointer that always points to the end of the array list for push/pop modifications.,5.0,1,3.0,0.9241702667415224,0.3213241461149808
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",if you used an array to implement a stack when you add an element just add it to the end of an array and remove items from end of array also.,5.0,1,3.0,0.8675976757087559,0.39487049123025414
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",you predetermine the size of the stack as you would an array.  this type can not grow.,1.0,4,2.5,0.9472408292472262,0.19913621804882187
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","declare a variable that points the last item in the array, which increases (++) when items are pushed onto the stack, and decreases (--) when an item is popped off the top.",5.0,4,4.5,0.960633215638493,0.22625786338691695
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","allocate an array of some size. the bottom stack element is stored at some element. last index in the array is the top. increment top when one element is pushed, decrement after pop.",5.0,2,3.5,0.963794896590566,0.26525801502804086
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","you allocate an pre-defined array, the bottom element is stored at element 0, and the last index is the head.",5.0,1,3.0,0.935738867895737,0.16945928881509287
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","make an array, make the bottom at spot 0, make the last spot in the array the top, and increment top when you ad",5.0,2,3.5,0.8957743897286427,0.2348197531387885
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",treat the beginning of the array as the beginning of the stack,4.0,0,2.0,0.8140940931117272,0.36445130404288634
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",use an index value called top to keep track of the last element in the array.,5.0,5,5.0,0.9068129924651365,0.31625033153500615
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",create an array and implement pointers that point to the next list item down and stack them up.,1.0,1,1.0,1.041038926211801,0.15516374131657923
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","for efficiency it is easiest to implement the left to right method, with the right most item being the one that is retrieved when a pop is performed, and a push places an object on the furthest element.",3.0,3,3.0,0.8864640557074088,0.22226654804490686
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","create an array based on a pre-defined size n there can't be more elements than n.  bottom stack element stored at element 0 last index in the array is the top  increment top when one element is pushed, decrement after pop",5.0,3,4.0,0.9777485786336915,0.23894153489521916
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","with the element added to the array, so that the last element added is at the end, and when the element is popped it takes the last element off the array",4.0,2,3.0,0.8215270117269018,0.31900890274626464
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",allocate an array of some pre-defined size. bottom stack element stored at element 0. the last index in the array is the top. increment top when one element is pushed.,5.0,5,5.0,0.9305748837788227,0.26660748190741607
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","create an array, size n.  n++ when one element is pushed.  n-- when one element is popped.",4.0,3,3.5,1.1548652976272593,0.043958375080033196
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",define an array and keep track of a pointer to the last element as items are added,5.0,4,4.5,1.0461280919279812,0.2004218429945995
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","by allocating an array of predetermined size, and an integer to track the top element of the stack. the bottom member of the stack will go in element 0 of the array, and for each element pushed the ""top"" tracking integer is incremented.",5.0,1,3.0,0.8312895665078464,0.3804687038053446
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","allocate an array of some size, bottom stack element stored at element 0",4.0,2,3.0,1.1679731270656595,0.12674493786589253
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",you store the stack in the array but you have to keep in mind the first element,3.0,4,3.5,0.8273008434464377,0.2739027805604859
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",you keep track of the last item entered into the array and do not  allow the user access to the other parts of the array.,5.0,3,4.0,0.8320277363393823,0.3504319586188505
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","using arrays, you are pushing one int at a time into the stack until you get to the end of your array",4.0,2,3.0,0.9234280180313233,0.21563423877732196
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","by having a max number of elements, allocating an array with that number of elements, storing the elements starting at 0, and keeping track of how many elements are currently in the list",5.0,0,2.5,1.0196285672561527,0.21660597474482068
8.3,How can you implement a stack with an array?,"keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.","stack usually holds a bunch of items with the same type, therefore u can use an array, to hold the content of the stack and an integer top that holds the index of the element at the top of the stack. u choose an array size. then the sequence of operations used. u have to decide what data types are needed for this stack data structure.",2.0,1,1.5,0.8690171815107064,0.38967053650562533
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",you can add an element to the end of the linked list and update a pointer called top each time you modify the list.,2.0,1,1.5,0.8200865752692341,0.3868521940259255
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",you implement a list in which the head pointer points to the element most recently pushed onto the list and the pop function changes the head pointer to point to the next to last element in the list and removes the element head pointer previously pointed to.,5.0,3,4.0,0.8217727162396522,0.37624688743127277
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",this is the implementation of the stack using single linked list.   the operations performed on a stack are    1)push(): this is the function which is for insertion(pushing)of an element into stack                      it is similar to the insertion of an element at the end of a single linked list                   see  the function insert_end() in the program for operations of single linked list    2)pop(): this is the function which is for deletion(popping up) of an element from the stack             it is similar to the deletion of an element at the end of a single linked list       see  the function delete_end() in the program for operations of single linked list    3)stack_display():this is the function which is for displaying the elements of a stack,3.0,2,2.5,0.7841902456820261,0.4516512530618008
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",using nodes to keep track of the head of the stack. then using push( ) and pop ( ) to create the stack as needed.,4.0,3,3.5,0.7481519851261225,0.4305583113873966
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","use the head as the top of the stack, only modify the head when you push/pop... push would add a new item to the head, pop would remove the item from the head.",5.0,1,3.0,0.5826843102875966,0.505851996435307
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",you implement a stack with a list by changing the pointer to the first element of the list to the new item and move the pointer from the top of the stack to the next item when removing an item.,5.0,5,5.0,0.7733005804977187,0.4134801439933108
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",you dynamicly create space as the stack grows.  the stack can be as long as you need.,1.0,4,2.5,0.9776906524760789,0.12867963213828
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","declare a pointer that points to the head of the linked list, only add and remove nodes from the beginning of the list.",5.0,2,3.5,0.655290359423813,0.6091738068965631
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",creating a linked list. add an element to the top of the stack when pushing and deleting an element when popping.,4.0,2,3.0,0.8113373532052071,0.3262189054324343
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","a singly-linked list is already a lot like a stack, it just depends on the way you address moving the head.",4.0,3,3.5,1.0217356564704343,0.22970464973517812
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","make a list, make the bottom the head, add on the end and make the end top",3.0,4,3.5,0.7613654375574628,0.3123035203047716
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",use the add function with a list as the beginning of the stack and remove for pop,5.0,1,3.0,0.6940234954821375,0.5912111371577072
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",use head as the top and push and pop nodes from the head.,5.0,0,2.5,0.7702090229489427,0.40481557767652276
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",create a node based list that points to the next list item down.,0.0,1,0.5,1.086094262885897,0.19990587828205597
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","have the head of the list be the last item added, and a push just adds a new head.",5.0,3,4.0,0.8054194436921767,0.3605029695969413
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","create a new list.  pop elements in the stack as needed.  push the stack to remove items, unless the stack is empty.  the top item is at the head of the list. the last item is at the end.",5.0,1,3.0,0.5326564530365084,0.5652976805553016
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",adding the element to the end of the list so that it links to the element before it. when popping the element it takes the last element in the list and sets the previous one as the end of the list.,3.0,2,2.5,0.8007065147769032,0.403521561548614
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","you can implement a stack using arrays or and linked list. by the use of pointers, that point element(node) to the next element in the stack. by the use of pointers, the stack becomes a linked list.",1.0,4,2.5,0.7776986678102498,0.3866548166371178
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",elements are only inserted and removed from the head of the list.  there is no header node or current pointer.,5.0,2,3.5,0.8790817579541097,0.2893352031843794
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",use a linked list and keep track of a pointer that points to the first item,4.0,2,3.0,1.001032857927399,0.30484275190480475
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","a singly linked list can already be easily used for lifo data storage. members of a stack can simply be pushed and popped from a list, the first item in will be the last out.",5.0,2,3.5,0.9342575224761018,0.23731559928271861
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",using pointer,0.0,2,1.0,1.3170601615610564,0.0
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",the top is the first pointer.,3.0,3,3.0,0.837679241758804,0.3123242761884039
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","keep a pointer pointing to the last element entered at the front of  the array and move the pointer ""back"" when you delete an element.",2.0,0,1.0,0.7692844308827489,0.30694255428997674
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","using linked list, you are pushing the node that contains each int to the stack until you get to the end of your linked list",1.0,3,2.0,0.8803774591363147,0.3217683868207146
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","have a linked list, and for each push, add an item onto beginning of the list, and for each pop remove the first element in the list.",5.0,1,3.0,0.7316517332483056,0.5160886996903065
8.4,How can you implement a stack with a list?,"keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.","using a linked list is one way to implement a stack so that it can handle essentially any number of elements. it is usually convenient to put a data structure in its own module, thus, you'll want to create files stack.h and a stack.c",0.0,1,0.5,1.023031111796711,0.19780409456789444
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",they are converted to post fix expressions.  it still follow the order of precedence for the operators.,5.0,5,5.0,0.8178497244559582,0.16121167346644316
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",they are first converted to postfix expressions and then evaluated.,5.0,4,4.5,0.7099751635833563,0.4702596604159252
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.","computers cannot evaulate infix expressions, it must first convert infix to postfix expression then it can evaluate.",5.0,4,4.5,1.0247868810065663,0.21763146107807146
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",by using parentheses to have order in the expression.,2.0,4,3.0,0.980086400454275,0.18140053607419312
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",in postfix notation.,3.0,5,4.0,1.0053642851813047,0.3521637195012607
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",computers usually convert infix expressions to post fix expression and evaluate them using a stack.,5.0,2,3.5,1.1497231858062527,0.0753290498713721
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",they are converted to postfix,5.0,3,4.0,0.6879075114186017,0.646246610938089
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",infix expressions are interpreted as postfix expressions by implementing stacks.,5.0,1,3.0,0.8828896777847336,0.2066179602010207
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",they are first converted into an equivalent postfix expression so it can be read by the computer.,5.0,4,4.5,0.6099299171831163,0.5602481667141835
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.","the computer translates the infix expression to a postfix expression, then solves.",5.0,3,4.0,0.9254670608416098,0.3413199009291561
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",in postfix format,3.0,2,2.5,1.018839091817495,0.3092637332969365
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",they use parenthisis and a stack to determine which evaluations need to be made first,3.0,2,2.5,1.0275754406710866,0.07799962838685688
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",by throwing variables into a postfix expression and operands onto a parentheses regulated stack until end parentheses and enough variables to operate on are encountered.,4.0,4,4.0,0.9630274619616562,0.22213908505668928
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",by being passed to the function by a leading term,0.0,4,2.0,1.0128696747802866,0.08874344303718379
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.","i have an hard time explaining this so i'll show how infix is evaluated instead. start with an infix expression, like,  (((5+2)*5)+(400/(2+3))), and  push items until you get a "")"" and once that happens, perform the operations until you reach an ""(""... with that complete, you will now have  ((7*5)+(400/(2+3))) as now the expression that will be evaluated... perform last step again... (35+(400/(2+3))) is now the stack.... repeat agian... (35+(400/5)) is now the stack after that.... repeat... (35+80) is now the stack, repeat again... 115 is now the stack, and is returned.",1.0,1,1.0,1.0254565224120848,0.06409374237180618
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",the infix expression is converted to postfix form,5.0,4,4.5,0.794832102621908,0.6153135251739943
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",by converting them to postfix expressions and putting the operations in a stack,5.0,2,3.5,0.8130211804645596,0.2349995946625453
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",the computer converts the infix expression to postfix form. then evaluates the postfix expression.,5.0,3,4.0,0.8375308992128359,0.5124085197449564
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",infix expressions are converted to postfix expressions before they can be evaluated by a computer.  operands stay in the same order.  operators always follow the operands.,5.0,1,3.0,0.7652173269801972,0.2335055208141797
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",infix expressions are pointers evaluated by reference to the memory location,0.0,3,1.5,0.9044088869866451,0.08199650710190294
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",computers convert infix expressions to postfix form before evaluation,5.0,1,3.0,0.9204246078192455,0.3741060806835024
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",convert infix expressions to postfix expression and evaluate the postfix expression,5.0,3,4.0,0.8792157701841266,0.4610777402258887
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.","when an operand is entered, the computer pushes it onto a stack when an operator is entered, the computer applies it to the top two operands of the stack pops the operands from the stack pushes the result of the operation onto the stack",4.0,0,2.0,0.9912612566500623,0.05853402786974702
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.",computers convert an infix expression into a postfix expression. they then push the numbers onto a stack and pop them out as they are needed.,5.0,4,4.5,0.7709583281659489,0.39918924279092094
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.","infix expressions are converted to postfix, (i.e. 3+2 is changed to 32+)",5.0,1,3.0,1.0296860592807588,0.32513611193629166
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.","they are transformed into post-fix expressions, then evaluated with a stack.",5.0,4,4.5,0.8527533647384975,0.1145765169465019
8.6,How are infix expressions evaluated by computers?,"first, they are converted into postfix form, followed by an evaluation of the postfix expression.","writing arithmetic expressions is called infix notation.  this is because a binary operator (like '+') is written in between its two operands (as in ""a + b"").  there are two alternative forms of notation used in certain situations.  one is prefix notation, in which an operator is written before its operands.  in prefix notation, the sum of a and b is written ""+ a b"".  this is the notation used to write function calls in mathematics and computer science.  it is also used in the lisp and scheme programming languages.  in postfix notation, an operator is written after its operands.  the sum of a and b is written ""a b +"".  (you may have seen this as ""reverse polish notation"".)  postfix notation forms the conceptual basis for the way that arithmetic expressions are evaluated by a computer.  one important characteristic of both postfix and prefix notations is that they are unambiguous; no parentheses are needed to indicate the order of operations.",5.0,5,5.0,0.9984835645974725,0.15390054958751515
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",isemptry()//determines if the stack is full or not pop()//to remove the top element if it is not the on you are looking for search()//you compare each element of the stack to the data you are looking for.,2.0,1,1.5,0.7797799544244819,0.26829393988910555
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you would have to keep using peek or gettop to see what the top element is then popping the top element until peek or gettop provides the element you are looking for.,2.0,5,3.5,0.8444809566470436,0.1464728139687504
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",push adds a given node to the top of the stack leaving previous nodes below. pop removes and returns the current top node of the stack.,2.0,3,2.5,0.8396984468610544,0.2603593620140535
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","using linked lists and stacks, you would need a temp stack to retain the values. then you would use the pop( ) function to pop off each element and then compare it. if its not the element your looking for, push ( ) it to the temp stack. repeat until the element is found. when you find it,  pop ( ) off the temp stack back onto the regular stack to have a complete stack again.",5.0,1,3.0,0.7547067865368174,0.3924885391190129
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","pop each item off the top until you find what you are looking for. if the stack ends up empty and you never found the item, then it does not exist in the stack. it may also be necessary to save the popped values in case you want to recreate the stack.",5.0,0,2.5,0.8955039712293656,0.28017378535616433
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","if the stack is implemented using an array you could simply search the array for the item. if the stack is implemented using a linked list you would have to pop the values off of the stack until either the value is found or the stack is empty, you would then have to have the items put back into the list.",4.0,1,2.5,0.7639866060815774,0.3712039601928924
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","you need to pop each item on the stack and compare the item.  once the item is found, no more items need to be removed.",3.0,0,1.5,0.7660687034746277,0.2641439722097022
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","pop an element from one stack, check to see if it is the desired element, if not push it onto another stack. when finished, pop the items from the second stack and push them back onto the first stack (this will ensure the order of the elements is maintained).",5.0,4,4.5,0.6133339072972616,0.4505051414175187
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",basically pop the stack until you find the given element.,3.0,1,2.0,0.8224537725371597,0.3355014210393613
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","iterate through the stack, checking the number against the current element.",0.0,0,0.0,0.9808465800110292,0.20884861455076092
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",pop and push,2.0,5,3.5,1.1853666194178336,0.2691418918555991
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",pop all elements off stack until you find that element and then push the popped elements back on the stack,5.0,1,3.0,0.4459355793503886,0.6813046772016478
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","keep popping nodes and storing them in an alternate stack until the given element is found, then pop the given element and push the previously popped nodes back onto the stack.",5.0,1,3.0,0.5967888279621818,0.4493410423427949
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",either traverse the entire list and pop the given part or create a pointer system that automatically points to it.,2.0,0,1.0,1.0044410512572597,0.0967634073192061
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","depends on the type of stack, on a true stack you will haft to pop all of the elements of the stack until you find the element you want, and then after that you will need to push all the elements that where removed back in to the stack in the order that they where removed.  with a java style stack, where there is a peek function, it will return the element you wanted instead of requiring you to perform all the excessive actions that are required from a true stack.",5.0,5,5.0,0.7137833323932665,0.47101115231798096
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",if top item != given element pop the stack. repeat until item is found or stack is empty,3.0,4,3.5,0.8528961414684693,0.3800784323160301
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",could traverse through the list/array to find the element.,1.0,2,1.5,0.9902017709948218,0.11646695619948604
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you need the pop opertation to go throught the stack and find the element.,3.0,2,2.5,0.8638092905085305,0.24909180155586425
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.","createstack, push, isempty, pop, and a boolean return value.",2.0,1,1.5,1.278530669861025,0.10126037368029484
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you would have to traverse the stack popping each element to search it,3.0,2,2.5,0.9509229813278305,0.16443539781955238
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",pop each element off the stack (and into another stack for storage) until the desired element is found.,4.0,2,3.0,0.6479770484072845,0.4971187623122007
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",pop operation,1.0,3,2.0,1.2700220497457875,0.1082362036604048
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",to pop elements then push them back,4.0,5,4.5,0.7848963529743647,0.4766665305014844
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",a function to keep track of the elements popped and a function to put  the popped elements backinto the function.,4.0,3,3.5,0.8677291098997745,0.16014137175895024
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you would pop each element and compare it to what you are looking for and then push it back on the stack so that it is not lost,4.0,1,2.5,0.7382199186774997,0.3149968917731633
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",you would need to perform a search through the list of elements (i dont really understand what this question is asking....its not very clear?),0.0,5,2.5,0.9884271901799506,0.06637431484334091
8.7,What operations would you need to perform to find a given element on a stack?,"pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",stackpush() stackpop() stackisempty(),2.0,1,1.5,inf,0.0
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a data structure in c++ which is a collection of data that is kept in order.  first in first out.,5.0,5,5.0,0.8628260840510159,0.39457808609453593
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is a list of objects in a particular order that is read one at a time starting at the first followed by the second and so on.,4.0,3,3.5,0.9983900209298128,0.1364911394783502
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is an abstract data structure in which operations are performed at both ends giving the queue first in first out behavior.,5.0,0,2.5,0.9251663047870855,0.2754310613043713
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a queue stores a set of elements in a particular order.  its principle of operation is fifo(first in first out), which means the first element inserted is the first one to be removed.",5.0,3,4.0,0.9058606799844294,0.3825611543149377
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",an adt whose first inserted item is the first item removed. this uses the fifo idea where items enter a queue at its back and leave at its front.,5.0,4,4.5,0.9927971742523665,0.2187680359254981
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","last in, last out architecture. it works the same way a line at the bank would work, the person that's been waiting the longest gets served first.",5.0,0,2.5,0.8843184868682322,0.2838237881615369
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is a data structure that stores elements in a first in first out order.,5.0,4,4.5,0.9083091302477144,0.43618867051024207
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a waiting list of items that operation in a fifo (first in first out) order.,5.0,4,4.5,1.0213218493269818,0.27096232634947753
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a queue is similar to an array, except that the data can only be accessed sequentially rather than at random. unlike a stack, a queue follows fifo. first in, first out.",5.0,1,3.0,0.8950575044648679,0.25308422903752553
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",is a particular kind of collection in which the entities in the collection are kept in order and the principal (or only) operations on the collection are the addition of entities to the rear terminal position and removal of entities from the front terminal position. first in first out (fifo method).,5.0,1,3.0,0.9524901093129489,0.18126460057785213
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",like a linked list but first in first out,4.0,3,3.5,1.164154454937952,0.28272917968774863
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is a fifo data structure.,5.0,3,4.0,1.1905549596429732,0.14577169088357353
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is a first in first out data structure.,5.0,5,5.0,1.0982140665017983,0.4262555470242924
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","its like a stack, but uses the linked list to stack a little differently. it's fifo so the first thing enqueued is the first thing dequeued",5.0,4,4.5,0.985823423103019,0.12623832726940962
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a first in, first out abstract data type that can be used to store values.",5.0,3,4.0,0.7770724911174343,0.45611427370733243
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","stores a set of elements in a particular order with a first in, first out principle",5.0,2,3.5,1.1468829152956286,0.2594744087425161
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",object that stores elements in order that follows first in first out.  the first element added is the first one to come off.,5.0,3,4.0,0.8297671338316321,0.4248233849698953
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a quese is an list that stores a set of elements in a particular order. it has stack principle, but in this case, its ""first in, first out"". the first element inserted is the first element to be removed.",5.0,3,4.0,0.8719109025286369,0.3938891976671412
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a finite ordered list with zero or more elements, based upon first in first out",5.0,1,3.0,1.1769355972540816,0.23874669190803077
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a data structure that performs operations in the order of first in first out fifo,5.0,2,3.5,0.871700038166018,0.38680894816946654
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a queue is a ""first in first out"" data structure, such that the first element added is also the first removed.",5.0,3,4.0,0.7919909638710102,0.5179864279776457
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","queue is a buffer, which store element in a particular order",2.0,2,2.0,1.0397886780798395,0.12299658567199855
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","stores a set of elements where the first element in, is the first element to be removed",5.0,0,2.5,0.8108513300573214,0.38675189864219495
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a data structure that removes nodes from the head and adds nodes at the tail.,5.0,2,3.5,0.8145499180816127,0.1700735394140124
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).",a queue is a list of things that follows the first in first out behavior,5.0,4,4.5,0.981793881622461,0.2815401245793303
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","a queue is a storage container that holds its objects in a first in, first out priority",5.0,2,3.5,1.0591488268007108,0.24468510824717293
9.1,What is a queue?,"a data structure that can store elements, which has the property that the last item added will be the last to be removed (or first-in-first-out).","the queue is another data structure. a physical analogy for a queue is a line at a bank. when you go to the bank, customers go to the rear (end) of the line and customers come off of the line (i.e., are serviced) from the front of the line.",5.0,3,4.0,0.9611112083661295,0.09655941183326437
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue which adds data to the queue and dequeue which deletes data from the queue,5.0,2,3.5,inf,0.36924251243309925
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enqueue , which inserts a specified element at the head of the specified queue, and dequeue , which removes the specified element from the queue.",5.0,3,4.0,inf,0.2559944055316192
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,the two main functions are enqueue which inserts an item at the back of the queue and dequeue which removes an item from the front of the queue.,5.0,1,3.0,inf,0.28570957038697564
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,the two main functions are enqueue and dequeue.,5.0,1,3.0,inf,0.6457033669333676
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,3.0,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,2,3.5,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue - insert into queue dequeue - remove element,5.0,4,4.5,inf,0.5077336899747387
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"remove the item added first, add items to the back.",5.0,2,3.5,inf,0.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,the two main functions of a queue are enqueue and dequeue.,5.0,1,3.0,inf,0.5912923508819017
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue.,5.0,5,5.0,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,3.0,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,0,2.5,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,2,3.5,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,2,3.5,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enque ( data ),  deque ( )",5.0,3,4.0,inf,0.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,5,5.0,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,2,3.5,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"the two functions are, enqueue and dequeue",5.0,3,4.0,inf,0.7156216026578883
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enqueue, dequeue",5.0,3,4.0,inf,0.9486755482395413
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enqueue, that adds an item to the queue dequeue, that takes the first item out of the queue",5.0,2,3.5,inf,0.32137876124349823
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,"enqueue and dequeue, which add and remove elements from the queue",5.0,2,3.5,inf,0.5894003563933541
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,3.0,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,dequeue and enqueue,5.0,3,4.0,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,3,4.0,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,2,3.5,inf,1.0
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue dequeue,5.0,3,4.0,inf,0.9486755482395413
9.2,What are the two main functions defined by a queue?,enqueue and dequeue,rear and front,2.0,2,2.0,inf,0.09245273803844294
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",make use of a front pointer and a tail pointer.  when the tail pointer reaches the end of an array it gets reset to the front of the array.  if the two pointers are equal then the queue is either full or just has one element.,5.0,3,4.0,0.7768058881416614,0.3879926046233203
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",you create an array with the max size of your queue and adjust the items to make them follow fifo procedure.,2.0,4,3.0,1.0081263206374629,0.15988811761955277
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",by implementing an array and only adding items to the end of the array and only removing items from the beginning of the array.,2.0,0,1.0,0.9136677785444836,0.3420581793372692
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","for applications in which a fixed-sized queue does not present a problem, you can use an array to represent a queue.",1.0,0,0.5,1.0827630054754558,0.1380310997849276
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",keep track of the front and the back of the array as you increase and decrease the elements inside the array.,4.0,3,3.5,0.7346186583077592,0.38737810255324284
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","declare the size of an array, and have special conditional statements (pointers) to make sure you re-use all of the array. say, you have an array of 20 elements, you load up 18, then dequeue 3, when you enqueue 4 more elements, you want to loop back to index 0 and continue from there... this process saves resources.",5.0,1,3.0,1.1319098295052132,0.15328488901454546
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",you could use the first element of the list as the remove point and insert at the end f you do this you would have to shift the elements down each time you remove an item unless you make the array circular.,3.0,3,3.0,0.9458009022085205,0.2346970229554971
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",utilizing indexes for the front and the back.  front is 0 and as you add items the back index is incremented.,4.0,1,2.5,0.9228865324825734,0.19905356040083177
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","declare two variables, “front” and “rear”, to be used to denote which elements in the array can be accessed. increment “rear” whenever data is enqueued to the end and increment “front” whenever data is dequeued.",5.0,0,2.5,1.0439845623729531,0.3071368721504673
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",it is an array of fixed size. a queue of maximum n elements.,1.0,2,1.5,1.1718551899947354,0.15885621114108364
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","make an array of a size, and add on to the front and delete from the back, keep track of the two so that you know when it is full and where to add or subtract from",4.0,3,3.5,0.9802469586812486,0.24474986077315922
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",by using the beginning of the array as the removal point of the queue (or beginning of the queue) and the ith element as the end of the queue.,3.0,3,3.0,0.675931963224708,0.44413798361639345
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","add in data from the first element to the last, take out data from the first element to the last.",2.0,1,1.5,0.9231726821884774,0.15654666791835575
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",you can take the array and put it in a queue stack or you can just traverse the list and keep track of top and bottom,3.0,0,1.5,0.9765451610609367,0.22565083417075904
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","create a fixed array size, with with 2 integers to point to the beginning and the end of the que, and special cases to know when the que is empty or full.",4.0,3,3.5,0.9452386717635354,0.22525473688805456
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",keep track of the front and rear indexes. either: 1)dequeue items by shifting the array left 2)use wrapped configuration,4.0,2,3.0,0.8045145579655274,0.32903415900488164
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","add items into a fixed size array, pull the items out by calling on them with the starting index, increase starting index so when it calls again its now the next index element in the array.",3.0,4,3.5,1.0482285456346996,0.1295711047239349
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","to use and array to implement a queue, element or item 0, should be the top element in the array. every time an element is inserted, all the items in the array are pushed back one space. the top element is always removed first.",2.0,0,1.0,0.995942875721695,0.24965102211510692
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",fixed size array with max n elements.  need to keep track of front and rear of array.,4.0,2,3.0,1.0118703081916594,0.3540675210816253
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","by keeping track of a front item and a rear item, or with a circular array that uses the modulo function",5.0,4,4.5,0.8974788535033464,0.2954855634696094
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","using an array for a queue, the size of the array allocated limits the size of the queue. an array based queue class must keep track of both the front and back of the queue, which may need to wrap around the array.",5.0,2,3.5,0.795577690778956,0.4774694913451807
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","a pointer based implementation of a queue could use a linear linked list with two external pointers, one to the front and one to the back",0.0,4,2.0,0.8272815166351694,0.2528706988008889
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",remove the element then shift the elements one space back,2.0,3,2.5,0.9686254602632709,0.09887185193221927
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",by having the head pointer point to the first or least current data entered and having the tail point to the most current data entered. a method must be created so that the tail pointer doesn't leave the array.,5.0,2,3.5,0.9288370393770067,0.19304215902989375
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",an array is a type of queue with a fixed length,0.0,3,1.5,1.1731317525467146,0.14968867705479993
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.","your storage class has an array, and you keep track of the index of the first and last item in the array, and wrap around when end of the array is full",5.0,1,3.0,0.8733279835309692,0.43314642951506305
9.3,How can you implement a queue with an array?,"use a circular array. keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",boolean isfullq(queue) ::= rear == max_queue_size-1,5.0,2,3.5,1.1953587217509432,0.17670453527200577
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",a list can have unlimited elements in it.  you can push a node onto the end of the list and pop the one in the front.,5.0,4,4.5,0.928720394452673,0.37262665014627194
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",theoretically you could do it two ways one of which uses more processing power and memory no larger than the queue is ever at when full and the other which uses almost infinite memory. the more practical method would be two place the items in an array and remove the item in position one of the array after which you can shift the array and add another element if required. the other option which can use infinite memory when used for long term queues such as job scheduling that goes nonstop for extended periods. that is to implement an array and add the items read item one raise your counter value to two ecetera and continue adding more elements to the array. the downside to this method is after you use element one it is still in memory. or im crazy who knows,0.0,0,0.0,1.0128214743371942,0.19866416013426755
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","by implementing a list in which a tail pointer points to the item most recently inserted onto the back of the list and a head pointer which points to the item least recently inserted onto the list. also, items can only be removed from the front of the list and can only be added to the back of the list.",5.0,4,4.5,0.8815120534396798,0.4020224476049545
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",you can use list to represent the items in a queue.,0.0,1,0.5,1.0628912181524082,0.23350829919462524
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",have a pointer to the last element in the list and then use enqueue to insert items there. link the first and last elements together to dequeue the list.,3.0,2,2.5,0.9316161251722759,0.32797419670449424
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",enqueue to the end of the linked list... dequeue items from the beginning (head) of the list.,5.0,1,3.0,0.6658256594953984,0.6262853122192559
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",you use the first element in the list as the remove point for the queue and insert items at the end of the list.,5.0,2,3.5,0.7034702680649104,0.49481098216128916
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","utilizing a front pointer and a back pointer.  the front poiner and back pointer points to the first item into the queue.  as you add items, the front remains the same but the back poiner 'next' points to the new item and the new item is assigned to become the 'new' back pointer.",5.0,3,4.0,0.835862716957288,0.2402546873979416
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",implement a linked list that only allows nodes to be added to the tail and can only be retrieved from the head.,5.0,1,3.0,0.9425300284569613,0.26900089622680806
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",check if list is empty and add elements to the list.,1.0,2,1.5,1.0153151750106189,0.27171258522536745
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","make a linked list and add on to the front and delete from the back, keep track of both to do so.",5.0,3,4.0,0.8832068979873788,0.38375861006467116
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",by making the head of the list the beginning of the queue and the last listed item the insertion point of the queue,5.0,5,5.0,0.6512550257959875,0.5290790122854883
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",throw in data at the head and take it out at the tail,4.0,1,2.5,0.8645539868711086,0.26314361858144175
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","you create a list of nodes that had a head and a top pointer, and the functions are basically the same substituting pop and push with enqueue and dequeue",2.0,4,3.0,1.024425934635828,0.22944301410084622
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","fairly easy... singly linked list with a pointer to the head and tail of hte list.  deque first item in que, create temp pointer to next element, delete head, and then make head the temporary pointer.  enque new item, use pointer to end of list, add a new item to the next item of the tail, and make the tail the next item of the current tail.",5.0,5,5.0,0.8863079147698841,0.33163522058476147
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","use a linked list with 2 pointers, one to the front and one to the back. as long as back != front, the queue is not empty.",5.0,2,3.5,0.7616083895020238,0.3116675159861695
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","create a node with the input data, continue to add to the list.  when dequeueing - get the first elements data and set the next element in the list as the new first element",4.0,4,4.0,0.9234941334375006,0.30395012511157987
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","a linked list with stack principles. the queue's top element is the element that is always being removed first. must use nodes to contain each element, with a pointer to the top element, which also could  be called the head pointer.",2.0,3,2.5,0.9089070943930323,0.24680441609620346
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",linked list checking for front and rear.  keep enqueueing elements until front equal to rear -1.,3.0,2,2.5,1.0207432834177865,0.2602080589512079
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","a queue can be implemented in a list by keeping track of two pointers, a head and a tail",5.0,1,3.0,1.0282153643039116,0.22529472929866762
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","each element of a queue can be allocated in the nodes of an linked list. new elements should be added to the head of the list, with each dequeued element coming off the tail.",5.0,4,4.5,0.8684101938322888,0.3913814360678462
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","implement the operation dequeue() as the list operation remove(1) and the operation getfront(queuefront) as the list operation retrieve(1, queuefront)",3.0,0,1.5,0.8194444919423904,0.3620079288441974
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",remove the first element and reference the second element as the new head of the list.,3.0,3,3.0,0.817415477520934,0.3518105330272585
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",by creating and adding nodes at the end of the list and removing the nodes from the beginning of the list.,5.0,1,3.0,0.7283874643129554,0.4621504777120351
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",you would have your list and add a back pointer so that your program knows where the end is,4.0,3,3.5,0.9440171321415753,0.17778915044209337
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.","your queue storage class has a list, and for enqueue, you add the item to the end of the list, and for dequeue you return the first item in the list",4.0,3,3.5,0.8374070127718861,0.4390390832944784
9.4,How can you implement a queue with a list?,"keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",temp-&gt;next= null;       if (front)  { (rear) -&gt; next= temp;}       else front = temp;       rear = temp;   },3.0,1,2.0,1.1835329940990889,0.06367987737334135
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push.,5.0,4,4.5,inf,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"push, which inserts something at the top of the stack.",5.0,2,3.5,1.2963631652923222,0.29524939866270133
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,the stack operation corresponding to enqueue in queues is the push operation.,5.0,2,3.5,1.1711307962819248,0.2237244437875907
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"push in a stack operation corresponds to the enqueue operation in queues.  these operations insert a new item into one end(the top and back, respectively) of the adt.",5.0,2,3.5,1.2351355964526336,0.14835546298911367
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,the stack operation is almost the opposite of the enqueue operation.,0.0,1,0.5,1.3111385415857382,0.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push = enqueue pop = dequeue,5.0,3,4.0,1.019010993791438,0.45393097270184973
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,4,4.5,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,not sure what this question means.  you can use the stack 'push' operation and the enqueue operation to detect palindromes.,5.0,4,4.5,1.2967006270478734,0.16125189946951435
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"enqueue is the queue equivalent of push, and dequeue is the queue equivalent to pop.",5.0,5,5.0,1.3422787858286447,0.19359664921362557
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push operation.,5.0,1,3.0,0.0,0.5872057432823595
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,3.0,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,2,3.5,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,2,3.5,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,3.0,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"that would be the push operation, if it put the item at the end of the list.",5.0,4,4.5,1.1726480069786656,0.24313249131669526
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,2,3.5,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,2,3.5,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,the push method in the stack operations.,5.0,0,2.5,1.0861423072275502,0.42038272093115436
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,0,2.5,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,enqueue corresponds with push dequeue corresponds with pop,5.0,5,5.0,1.1091061570717091,0.20664166027570988
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,"push corresponds with enqueue, both very similarly place new elements into their stack or queue",5.0,4,4.5,1.227993488264883,0.19847170442698392
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,fifo: first in first out,0.0,3,1.5,1.3380602572985856,0.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,0,2.5,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,4,4.5,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,3.0,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,3.0,0.0,1.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,2,3.5,0.0,1.0
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a hierarchy of nodes that are sorted in a particular order.  each node has a ancestor (except for the root) and children (except for the leaves).,3.0,5,4.0,0.7673207479230254,0.25211153580076934
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a tree is a finite set of one or more nodes with a specially designated node called the root and the remaining nodes are partitioned into disjoint sets where each of these sets is a tree.,5.0,2,3.5,0.5553263403675069,0.659068678033072
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a tree is a finite set of one or more nodes such that: there is a specially designated node called the root.,4.0,4,4.0,0.694021577422153,0.3976158831152311
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a connected, undirected graph without cycles.",4.0,4,4.0,1.2800297017503182,0.0
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a data structure that contains a root, internal nodes and external nodes. each node references another node by means of pointers (pass-by-reference). the root is the ""base"" of the tree, it has no parents. a ""leaf"" is a node at the end of the tree which points to null.",5.0,0,2.5,0.8487804155931423,0.37413330611568274
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a tree is a series of nodes where each node has links to other nodes.,1.0,0,0.5,0.9473609006407057,0.37008251088451855
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","an infinite set of nodes that have a root and descendants, and each addition is a leaf.",2.0,4,3.0,0.9539910511698207,0.2723461627682666
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a set of one or more nodes that are hierarchically organized, with one special “root” node.",3.0,2,2.5,0.7211286115588659,0.4767152166718274
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a tree is a finite set of one or more nodes such that there is a specially designated node called the root.,2.0,1,1.5,0.6852344650515131,0.3976158831152311
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",one or more nodes in a hierarchy starting with the root and branching off like a tree to subtrees,5.0,1,3.0,0.8642529681157438,0.2769239812973374
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a tree is a data structure where nodes are linked to each other in a hierarchical manner.,2.0,0,1.0,0.9726829227630596,0.2013458790477228
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a grouping of data in a parent to child structure,2.0,3,2.5,1.2240322403015755,0.028063258033746482
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",it is a list of numbers in a list made by comparing values of nodes already in the tree and adding to the appropriate spot. its a list made up of nodes with left and right pointers.,1.0,2,1.5,1.01691150736866,0.20635290330265316
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a tree is a branched data structure with nodes, and leaves... a special node called root has no parent node, but however like all other nodes can and does have 2 nodes that it links to, namely one on the right, and one on the left.",4.0,4,4.0,0.8342860365859909,0.40254537289840786
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","it organizes data in a nonlinear, hierarchical form, where items can have more than one successor.  partitioned into a root node and subsets are general subtrees of the root.",5.0,1,3.0,0.7463660614693685,0.26645683328969744
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a tree is a finite set of one or more nodes such that there is a specially designated node called the root. the remaining nodes are partitioned into n&gt;=0 disjoint sets t the n plus 1, where each element set is a tree.",5.0,4,4.5,0.6012259630625565,0.5852706157382017
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a finite set of nodes that starts with the root and terminates with leaves.,3.0,0,1.5,0.9524716927689443,0.2513980090443066
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a set of data arranged with pointers. each element can have many pointers, but no two pointers point to the same element",1.0,3,2.0,0.9815536305829601,0.09328835998681878
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a tree is a data structure with one or more data nodes, each of which contains some data. each node itself can have a number of attached child nodes, creating the branched structure trees are named for.",4.0,5,4.5,0.8334152549698559,0.3378569676081945
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a finite collection of nodes, where it starts with an element called the root, which has children, and its children have children until you get to the leaves which are the last elements and have to children",4.0,1,2.5,0.8505782862877374,0.2646006005463816
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a nonlinear, two-dimensional data structure.",0.0,1,0.5,1.34106910191047,0.0
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a finite set of one or more nodes such that there is a root node and all other nodes are split into trees of lesser value than the root,3.0,2,2.5,0.7216358118292145,0.4280522536950024
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.","a finite number of nodes such that there is one root node, each node has a certain number of children nodes, and each child is also a tree",5.0,0,2.5,0.8929371546317418,0.3903037609219442
10.1,What is a tree?,"a collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",a type of data structure in which each element is attached to one or more elements directly beneath it.,3.0,1,2.0,0.9014576150619027,0.19888990581645108
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,"each level of a generation in the tree, some people do not count the root as a generation",4.0,5,4.5,0.9473567210953713,0.11645279238281878
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,"the height of a tree is in terms of the levels of its nodes such that, if  the tree is empty its height is 0 otherwise its height is equal to the maximum level of its nodes.",4.0,2,3.0,0.9042274237826571,0.23779910514772631
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the height of a tree is the number of nodes on the longest path from the root to a leaf.,5.0,3,4.0,0.532511657767766,0.5795947105383591
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the number of nodes on the longest path from the root of the tree to a leaf.,5.0,0,2.5,0.4629505163523267,0.611428852048138
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,height = the number of times you must progress down the levels of a tree to reach a leaf of the greatest distance from the root.,5.0,3,4.0,0.8932518664467363,0.2520734706474629
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the height of a tree is the length from the root to the furthest leaf,5.0,4,4.5,0.557713485924847,0.42386187006585047
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the height is the number of generations (levels) from the root.,4.0,2,3.0,0.7389059486775208,0.29131699190180804
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the height of a tree is the number of levels between the root and the leaf farthest away from it.,5.0,0,2.5,0.7668675300438026,0.26170593962070926
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,is the depth of its furthest leaf,4.0,4,4.0,0.8782946742380162,0.15439787078074757
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the number of nodes from root to leaf,3.0,3,3.0,0.8209190563276794,0.320002975660994
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the distance from the deepest leaf to the root,5.0,5,5.0,0.5909812382265928,0.2644087670329723
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the number of generations or levels of a tree,4.0,4,4.0,1.0265085135259149,0.1286160902600612
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,"the intensity of the children. say you begin with one node, thats one height. then you add two children to that node and then two children to each of those nodes and two children to each of those nodes. youre current height would be 4.",2.0,1,1.5,1.1321546255534072,0.0892168153736729
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,"the number of levels of a tree, like a tree can have at minimum a depth of 3 and at most a height of 8 for 8 nodes.",3.0,4,3.5,1.1415505392408585,0.12738704660263567
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the number of nodes on the longest path from the root to the leaf.,5.0,3,4.0,0.41535616389349905,0.6092777741087351
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the height of a tree is the number of nodes on the longes path from the root to a leaf.,5.0,2,3.5,0.5874442122403497,0.42456085166647456
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,is equal to the number of levels.  levels between the root node and the terminal nodes.,4.0,3,3.5,0.8106068211265993,0.1795754994717012
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the number of generations or levels the tree has,4.0,3,3.5,0.9116321573460406,0.12206425084120974
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,"the height of a tree is the depth of its subtrees, that is, how many layers deep it is.",4.0,2,3.0,0.9233608883855599,0.14084394003233563
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,is the number of generations in the tree,4.0,4,4.0,0.8751565261792108,0.14748450365899718
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the number of nodes on the longest path from the root to a leaf.,5.0,2,3.5,0.384086200198705,0.5997744956624119
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the number of distinct levels of separation,3.0,5,4.0,1.0432328373241562,0.11162996130085498
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the height of a tree is how many levels of nodes that it has,4.0,0,2.0,1.092012104502138,0.10832644975990888
10.2,What is the height of a tree?,the length of the longest path from the root to any of its leaves.,the connections between elements are called branches. trees are often called inverted trees because they are normally drawn with the root at the top.,0.0,5,2.5,1.0357414773743627,0.09277224666471098
10.3,What is a leaf?,a node that has no children.,a leaf is a child of a parent node that has no children nodes of its own.,5.0,2,3.5,0.7381448800716641,0.5477742024474314
10.3,What is a leaf?,a node that has no children.,a leaf is a node with no children.,5.0,4,4.5,0.7207408910013703,0.6057925274659292
10.3,What is a leaf?,a node that has no children.,a node with no children.,5.0,0,2.5,0.6017518435978184,0.7634081284551679
10.3,What is a leaf?,a node that has no children.,a tree node with no children.,5.0,1,3.0,0.6354362216656926,0.6977832077912298
10.3,What is a leaf?,a node that has no children.,and end point of the tree... a node that does not have any children.,5.0,3,4.0,0.8499234224778318,0.3731527935247635
10.3,What is a leaf?,a node that has no children.,a node with no children.,5.0,0,2.5,0.6017518435978184,0.7634081284551679
10.3,What is a leaf?,a node that has no children.,a new item to the tree--a child,2.0,4,3.0,1.2104776814189717,0.0
10.3,What is a leaf?,a node that has no children.,"a leaf is a node with children, it is a terminating node.",0.0,4,2.0,0.970853496281418,0.39388749793937056
10.3,What is a leaf?,a node that has no children.,the node with degree 0.,3.0,4,3.5,0.8698342112905797,0.1708253617795752
10.3,What is a leaf?,a node that has no children.,the node with degree 0,3.0,3,3.0,0.9721197920809126,0.1708253617795752
10.3,What is a leaf?,a node that has no children.,a leaf is a node with no children,5.0,1,3.0,0.8130806572722821,0.6057925274659292
10.3,What is a leaf?,a node that has no children.,the last child on any branch,4.0,2,3.0,1.1297134816564078,0.0
10.3,What is a leaf?,a node that has no children.,the last value in the tree. a value with no children attatched.,5.0,4,4.5,1.0553246452318112,0.3077812103761749
10.3,What is a leaf?,a node that has no children.,a node with no children.,5.0,3,4.0,0.6017518435978184,0.7634081284551679
10.3,What is a leaf?,a node that has no children.,a node with no children.,5.0,4,4.5,0.6017518435978184,0.7634081284551679
10.3,What is a leaf?,a node that has no children.,a leaf is a node with no children,5.0,3,4.0,0.8130806572722821,0.6057925274659292
10.3,What is a leaf?,a node that has no children.,a node with degree 0.  last node in the tree and furtherest away from the root.,3.0,4,3.5,0.9863140504193152,0.17538426801208207
10.3,What is a leaf?,a node that has no children.,an endpoint on a tree that contains no pointers or pointers that are set to null,4.0,1,2.5,1.001037112809936,0.217680702844458
10.3,What is a leaf?,a node that has no children.,a leaf is a node with no children.,5.0,1,3.0,0.7207408910013703,0.6057925274659292
10.3,What is a leaf?,a node that has no children.,an element in a tree that has no children,5.0,4,4.5,0.7840148819015063,0.705092835540639
10.3,What is a leaf?,a node that has no children.,a node with no children.,5.0,4,4.5,0.6017518435978184,0.7634081284551679
10.3,What is a leaf?,a node that has no children.,a leaf is a node that has no children nodes,5.0,3,4.0,0.54420769683249,0.7549616532295497
10.3,What is a leaf?,a node that has no children.,a leaf is a node with no children,5.0,1,3.0,0.8130806572722821,0.6057925274659292
10.3,What is a leaf?,a node that has no children.,"the elements at the very bottom of an inverted tree (that is, those that have no elements below them) are called leaves.",5.0,3,4.0,1.0720469019234018,0.19299997526464258
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"a tree data structure in which each done has at most two children, typical called left and right nodes.  the right node is usually greater than the left node and the parent node.",4.0,0,2.0,0.8487317949128679,0.33654683555648274
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"a binary tree is a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. each node can have no more than two children, a right and a left child.",5.0,2,3.5,0.941209819662271,0.2958874193798409
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root.  each node has at most two children, the left child and the right child.",5.0,5,5.0,0.9121250565798346,0.2650650963643838
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"a set of zero or more nodes, partitioned into a root node and two possibly empty sets that are binary trees. thus, each node in a binary tree has at most two children, the left child and the right child.",5.0,5,5.0,0.9526136137111462,0.26064439267910805
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree in which each parent has a maximum of 2 children.,5.0,1,3.0,0.7933458235337822,0.5275020431904756
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree where each node has at most 2 children.,5.0,3,4.0,0.9240811808193508,0.3088095298366995
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree with up to two children or a right subtree and/or a left subtree,5.0,1,3.0,0.9702957476982559,0.2321112768247481
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"a binary tree is a tree in which all nodes have a maximum of two degrees, or can only have two children each.",5.0,4,4.5,0.7231938812643292,0.4881669361126379
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a binary tree is a tree data structure in which each node has at most two children.,5.0,4,4.5,0.8040574045855006,0.4575748274645859
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"a tree with only 2 joints, left and right",4.0,5,4.5,1.087407384031932,0.08177135844083633
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a binary search tree is a tree that also has the condition that each node may have at maximum 2 children,4.0,4,4.0,0.7239800398962742,0.40759845443721154
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree where each parent can have at max two children.,5.0,3,4.0,1.0003672574079197,0.2792277704858982
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a list of numbers that are ordered compared to how they compare to the other numbers already added in the tree,1.0,4,2.5,0.9722378470819626,0.07329359534491636
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree where each node can have at most 2 children.,5.0,2,3.5,0.9284485775364675,0.29726515379772206
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"starting at the root node, it branches off into one or two subsets that are binary subtrees of the root.  each node has at most two children, the left child and the right child.",5.0,3,4.0,0.9838265108797998,0.2514473434170795
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"a binary tree is a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. each node has at most two children, the left child and the right child.",5.0,1,3.0,0.8672251845949877,0.29679640698646653
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree that has a maximum of 2 children per node,5.0,2,3.5,0.5803747093741901,0.7333227941491187
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree with elements that can contain at most two pointers,5.0,0,2.5,1.0752072317767165,0.17225316465268542
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a binary tree can have only two children for each node.,5.0,3,4.0,0.7855011961612735,0.4475486673918917
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree where every parent has only two children,4.0,3,3.5,0.9226153256203978,0.3195056042590531
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a tree where every node has no more than two children,5.0,2,3.5,0.787815576223315,0.35846190771706743
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,"a binary tree is a special search tree where each node has either 2, 1, or 0 children",4.0,5,4.5,0.8155735262045228,0.3158109468746683
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a binary tree is a special type of tree where each node can only have at maximum 2 children,5.0,4,4.5,0.7514929413537196,0.46133515805570346
10.4,What is a binary tree?,a tree for which the maximum number of children per node is two.,a binary tree is a special type of inverted tree in which each element has only two branches below it.,4.0,1,2.5,0.9206708365454336,0.2574309490218269
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a tree data structure where each node has a value, where the total order is defined on these values.  the left subtree contains only values less than the parent node, and vice versa for the right subtree.",5.0,3,4.0,0.6353664783723497,0.29336506248943967
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a binary search tree is a binary tree where the value in any node 'n' is greater than the value in every node in n's left subtree but less than every node in n's right subtree.,5.0,1,3.0,0.6159583019352189,0.4272474527317848
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary tree where the value in any node n is greater than the value in every node in n's left subtree, but less than the value of every node in n's right subtree.",5.0,1,3.0,0.6155592156061883,0.38650045298540947
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary tree where the search key in any node n is greater than the search key in any node in n's left subtree, but less than the search key in any node in n's right subtree.",5.0,3,4.0,0.6677622864220847,0.35177323734304156
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a tree which is split based on values. this makes it very easy to search. one can compare the desired value to the root, and if the root is greater than, we search the left side of the tree, if it is less than, we search the right side... and do the same thing recursively.",5.0,4,4.5,0.7796318012969172,0.2727147329152583
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a tree where each node has at most two nodes and the node on the left is less than the root and the node on the right is greater than the root.,4.0,4,4.0,0.6019168125196108,0.4169071749022909
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a special binary tree that has a rule that all the subtrees on the right are smaller than the node value and all the subtrees on the left are larger than the node value,5.0,0,2.5,0.5125343399371378,0.4517561545729488
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"binary search trees are similar to binary trees, but have been implemented to organize data in a specific way for later searching.",3.0,4,3.5,0.994681251342789,0.09420310477103513
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"it is a binary tree where each node has a value, a total order is defined on these values, the left subtree of a node contains only values less than the node's value, and the right subtree of a node contains only values greater than or equal to the node's value.",5.0,5,5.0,0.6531279529084093,0.3164791141195941
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a binary tree with the data organized in a specific arangment,2.0,4,3.0,0.9302774505733148,0.14497168301839036
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary search tree is a tree that also has the condition that each node may have at maximum 2 children and where the input data is compared to the data in the tree starting with the root. if the value is smaller than the root it traverses left, if it is larger it traverses right until it becomes a leaf.",4.0,0,2.0,0.6505133967183381,0.3842093199174159
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a binary tree in which the data is in order from left to right.,4.0,4,4.0,0.7459697164436611,0.36956137220916413
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a tree that is set up so that it can be easily searched for numbers based on the location compared to the previous nodes.,3.0,5,4.0,0.8382821595614879,0.16072196113281095
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary tree where the children are ordered such that the right side is greater than the current node, and the left is less than or equal the current node.",5.0,2,3.5,0.563144404401641,0.4265402892769811
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary tree where the value in any node n is greater than the value in every node n's left subtree, but less than every value in n's right subtree.",5.0,0,2.5,0.6179630229151317,0.3738572903293543
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a binary search tree is a finite set of nodes that is either empty or consits of a root and two disjoint binary trees call the left and right subtrees.,1.0,1,1.0,0.7998327686936926,0.2292396539343335
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,it is similar to a binary tree.  the keys in a nonempty left subtree (right subtree) are smaller (larger) than the key in the root of subtree.  the values in all nodes in the left subtree of a node are less than             the node value  the values in all nodes in the right subtree of a node are greater    than the node values,5.0,1,3.0,0.6517981569864424,0.3782598174759228
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a set of numbers arranged by links. each node can contain two pointers to other elements. each node to the left of the parent is smaller and each node to the right is larger. recursive implementation implies that if traversed in order, the output would be sorted",5.0,4,4.5,0.7495840077283095,0.2769353588670478
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary search tree is a special binary tree arranged such that every left child node contains a value less than its parent, and every right child node contains a value greater its parent.",5.0,2,3.5,0.7689139987509825,0.458077558244838
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary tree with a special organization of data. where the left child of the element is less than it, and the right child is larger than it.",5.0,2,3.5,0.5750790059536319,0.5385327282894503
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,a tree in which the smaller values are located on the left of a parent node and the larger values are located on the right of the parent node.,5.0,4,4.5,0.6000956050184053,0.3409569865010486
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"a binary search tree is a special tree in which each node has at most two children, labeled left child and right child",1.0,2,1.5,0.7214800239976683,0.454806529972392
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"it is a binary tree where each node has a unique key, the left child of a node has only values less than that node, and the right child of each node has higher values than that node.",5.0,5,5.0,0.5718353066281265,0.5183733474066262
10.5,What is a binary search tree?,a binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,"binary search trees are a fundamental data structure used to construct more abstract data structures such as sets, multisets, and associative arrays.",2.0,5,3.5,1.130666909294641,0.038988128572102494
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","for every node in the binary tree we first visit its left sub-tree (if its there) and then visit the parent node itself, and then the right sub-tree (if its there).",5.0,4,4.5,0.8152186671428292,0.19933269440642792
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",the inorder traversal of a binary tree visits the node of a binary tree in order according to their data values.,2.0,2,2.0,1.0818894061073465,0.04407575594695785
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",traverses the binary tree in inorder.  it lets you visit the nodes in order according to their data values.,2.0,5,3.5,1.0173240734197497,0.04393748976640935
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",its used to visit nodes of a binary search tree in a search key order.,3.0,3,3.0,1.2394495030831338,0.0
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",(left side of tree) (root) (right side of tree),5.0,1,3.0,1.2323540595763867,0.19738486333681668
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",printing a tree in order from least to greatest. this done by going as far left down the tree as possible and printing the parent and then right tree. then move up the tree.,5.0,4,4.5,0.8892310875528512,0.20165191690619072
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","the in order is to go from left,root,right",5.0,2,3.5,0.9711276448044965,0.3017175219217747
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","inorder traversal of a binary tree will retrieve start at the furthest left hand leaf and checks it, it’s parent, and it’s right side sibling, then it goes up a level and repeats until it gets to the root.",4.0,5,4.5,0.9729710203750923,0.17328810776496806
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",traverse the left subtree. visit the root. traverse the right subtree.,5.0,3,4.0,0.34089522102092473,0.7920627675225661
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",postorder,0.0,3,1.5,inf,0.0
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",in order starts with the root then does right child then left child recursively,0.0,2,1.0,0.7816762012388185,0.3741178640177558
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",left child -&gt; parent -&gt; right child,5.0,5,5.0,0.9870741758554484,0.10199783471370538
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",it goes from lowest to highest inside of the tree,1.0,4,2.5,1.04999713684925,0.03263982774234695
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","starting by displaying the node furthest to the right, then  the node, then the node on the right, in recursive order.",3.0,0,1.5,0.6842208221509187,0.33321506505489906
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",it travels left to right,3.0,3,3.0,0.8563187721959136,0.18557498664088884
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",void inorder(ptnode ptr) { if (ptr) { inorder (ptr-&gt;left); cout&lt;&lt;ptr-&gt;data; inorder(ptr-&gt;right); } },5.0,0,2.5,1.210765194129299,0.03472880846378611
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","the root is in the middle.  the left subtree is traversed first, then the root, and finally the right subtree.",5.0,1,3.0,0.48614152334727834,0.6663586345165038
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","a traversal that visits the left branch first, then the parent node, then the right branch, recursively.",5.0,0,2.5,0.5176669584472731,0.3069774499923319
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","inorder traversal visits the left branch of a node (all the way to it's deepest left-most leaf) before visiting the node itself. after visiting the entire left branch and the node, it visits the node's right branch following the same pattern of left child, node, right child.",5.0,1,3.0,0.7728500497552858,0.1886487784108199
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.",left middle right,5.0,0,2.5,0.8920138581518381,0.2161154890855885
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","you traverse all the nodes to the left, then visit the root, then traverse all the nodes on the right.",5.0,1,3.0,0.5388764273553206,0.5494950882856624
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","you would go to the furthest down left most node, then to the root then to the right (if left and right exist) then you would return one node previous and do the same until you reached the root, then go to the furthest down left most node on the right side of the root and continue this process",5.0,2,3.5,0.7182108137255788,0.40981515947881036
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","it means that you traverse one subtree of a node, then look at the node itself before traversing the other subtree of the node",4.0,3,3.5,0.8172487420694257,0.4644170266829859
10.6,What is the inorder traversal of a binary tree?,"traverse the left subtree, then the root, then the right subtree.","level order traversal is a traversal method by which levels are visited successively starting with level 0 (the root node), and nodes are visited from left to right on each level, with push and pop methods.",0.0,3,1.5,1.1198009730839182,0.10230149906979909
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,this is on the runtime order of log(n) where n is the number of nodes in the binary tree.,5.0,1,3.0,0.8068782806972931,0.5030444000022594
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,in a binary search tree of size 'n' it takes log(n) comparisons to find a specified element.,5.0,3,4.0,0.9817099498486643,0.2684712547448276
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,n-1/2 is the algorithm to compare and find an element.,0.0,4,2.0,1.0488732909853946,0.06163993624400463
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,at most its equivalent to the height of the tree.,5.0,1,3.0,0.7383260480836206,0.4322252810397868
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,log(n),5.0,2,3.5,inf,0.30406857518131086
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,o(log n),5.0,3,4.0,inf,0.30406857518131086
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,depends on what half of the tree and the levels you have.,3.0,1,2.0,0.8270714478897166,0.2760838755516173
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,o(log n) in balanced trees,5.0,2,3.5,1.0143057868408096,0.1607483937061021
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,n-1,2.0,0,1.0,inf,0.0
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,log(n),5.0,1,3.0,inf,0.30406857518131086
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,o(nlog(n)),0.0,1,0.5,inf,0.0
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,nlog(n),0.0,3,1.5,inf,0.0
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,logn,5.0,0,2.5,inf,0.0
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,"at the minimum log(n)/log(2), at the maximum n searches, where n is the number of nodes.",4.0,4,4.0,0.8194742464069824,0.37919773416566377
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,o(n),2.0,1,1.5,inf,0.0
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,it takes at most 3 comparisons to find and element in a binary search tree,0.0,3,1.5,0.9980801599949809,0.14298109130243603
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,log (n)   where n equals the number of nodes.,5.0,1,3.0,0.7801298937933128,0.3480917087002301
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,it takes as many comparisons as the number of levels of the binary search tree. it only compares one number at each level,5.0,0,2.5,0.9553182056336161,0.3105587549100305
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,at most it takes one less comparisons than the tree's height. in big-o notation it takes o(log n) comparisons if the tree is balanced.,5.0,4,4.5,0.9409623444469097,0.3100623904114953
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,o(log n),5.0,4,4.5,inf,0.30406857518131086
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,log n comparisons,5.0,3,4.0,1.1956150051706982,0.16657035455242006
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,(n^k)-1   where k is the height of the tree,0.0,5,2.5,0.6214308409364567,0.6637163752623175
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,"it takes h comparisons, where h is the height of the tree",5.0,5,5.0,0.7239462797845968,0.44794084177985394
10.7,How many comparisons does it take to find an element in a binary search tree?,the height of the tree (or log of the number of elements in the tree).,2 way key comparison,0.0,5,2.5,1.2651839083315048,0.0
11.1,What are the elements typically included in a class definition?,function members and data members.,"the name of the class file, the parameters it must take to perform its function.  also a brief description of what the class does.",1.5,0,0.75,1.2945171949524104,0.03275817522712608
11.1,What are the elements typically included in a class definition?,function members and data members.,"access specifiers and functions, oftentimes a constructor.",3.0,3,3.0,1.310835910292598,0.03632292613016205
11.1,What are the elements typically included in a class definition?,function members and data members.,"the elements typically included in a class definition are the function prototypes, usually declared public, and the data members used in the class, which are usually declared private.",5.0,2,3.5,1.131723869486792,0.24004203756055698
11.1,What are the elements typically included in a class definition?,function members and data members.,"class is user defined.  it contains members, data and functions.  the keyword class is used and includes brackets ({})",2.5,4,3.25,1.1985816345354836,0.30417537631836117
11.1,What are the elements typically included in a class definition?,function members and data members.,member functions and data members.,5.0,3,4.0,0.4941600084267723,0.6439769051882813
11.1,What are the elements typically included in a class definition?,function members and data members.,the functions and variables used when the object is defined for the class.,5.0,2,3.5,1.225212354575968,0.03893088585831921
11.1,What are the elements typically included in a class definition?,function members and data members.,"data members, functions and function definitions, variables.",5.0,2,3.5,0.4271929251779408,0.5713169775675149
11.1,What are the elements typically included in a class definition?,function members and data members.,return type and input parameters,1.5,4,2.75,1.27984175294117,0.05025213035460992
11.1,What are the elements typically included in a class definition?,function members and data members.,constructor data members methods,5.0,2,3.5,0.6623944840107217,0.5577390366997832
11.1,What are the elements typically included in a class definition?,function members and data members.,"function members and member attributes, or in other words, the class variables and functions.",5.0,4,4.5,0.959845628480901,0.36758858490413093
11.1,What are the elements typically included in a class definition?,function members and data members.,"the elements that are included in a class definition is the access-modifier, data types, variables, and function signatures.",4.0,2,3.0,1.0850377053992109,0.126433863321676
11.1,What are the elements typically included in a class definition?,function members and data members.,the variables and function prototypes.,5.0,2,3.5,0.7999715925471109,0.1523371170268803
11.1,What are the elements typically included in a class definition?,function members and data members.,public and private variables and initiations of functions included in the class.,4.5,5,4.75,1.2196906754828551,0.06454437936968613
11.1,What are the elements typically included in a class definition?,function members and data members.,the return value and the accepted value.,1.5,3,2.25,1.311225552231453,0.038420677477775035
11.1,What are the elements typically included in a class definition?,function members and data members.,"a class definition typically includes the class name, the classes constructor(s), and any extra functions and class variables.",5.0,2,3.5,1.2684310350213723,0.050180386568550304
11.1,What are the elements typically included in a class definition?,function members and data members.,"parameters and their type, class name, and return type, and the code to be executed in the class.",2.0,4,3.0,1.297272779129445,0.08152220744216755
11.1,What are the elements typically included in a class definition?,function members and data members.,"data members, class variables, and functions",5.0,2,3.5,0.7082159721273809,0.6057151421591352
11.1,What are the elements typically included in a class definition?,function members and data members.,"constructor, functions, and variables native to the class.",5.0,4,4.5,1.2756309990775023,0.04013158538032815
11.1,What are the elements typically included in a class definition?,function members and data members.,functions and data members,5.0,4,4.5,0.24412839652926577,0.7673757509652811
11.1,What are the elements typically included in a class definition?,function members and data members.,data members and function definitions,5.0,4,4.5,0.32258964696118364,0.6748055869820416
11.1,What are the elements typically included in a class definition?,function members and data members.,member functions and data members,5.0,4,4.5,0.4785813847807249,0.6439769051882813
11.1,What are the elements typically included in a class definition?,function members and data members.,"constructor, and function definitions.",3.5,5,4.25,0.8855196276742028,0.1431465999451892
11.1,What are the elements typically included in a class definition?,function members and data members.,class name data of class definition of functions and methods,5.0,1,3.0,1.0625245331899291,0.12138022373235008
11.1,What are the elements typically included in a class definition?,function members and data members.,"a class definition includes the definitions of the class' constructor(s) and any public or private functions. of course, it also #includes the class header and any necessary c libraries",3.0,0,1.5,1.2943835628450662,0.034948599017140494
11.1,What are the elements typically included in a class definition?,function members and data members.,"class name, {}, semicoln at the end of the defination, private and bublic followed by "": """,2.5,0,1.25,1.3298568570310016,0.02602959490037981
11.1,What are the elements typically included in a class definition?,function members and data members.,"a constructor, private and public variables, and function prototypes",5.0,5,5.0,0.9896787827618954,0.1405577561790657
11.1,What are the elements typically included in a class definition?,function members and data members.,"data variables and functions, data members",5.0,4,4.5,0.5413437839680596,0.6483920147049955
11.1,What are the elements typically included in a class definition?,function members and data members.,class definitions include the name of the class and type of parameters,1.5,2,1.75,1.2911391829467074,0.03369226757718213
11.1,What are the elements typically included in a class definition?,function members and data members.,"class variables, class function prototypes",5.0,3,4.0,1.0313637975922363,0.07229377464095563
11.1,What are the elements typically included in a class definition?,function members and data members.,input  & return type elements,1.5,0,0.75,1.3163844243397627,0.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public and private specifiers.,5.0,2,3.5,0.4591472558500318,0.7238250268548481
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"public, private, restricted",4.5,2,3.25,1.2629601619122501,0.6360756674682934
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,the access specifiers are public and private.,5.0,3,4.0,1.2252479701443468,0.6332575411934932
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public private protected,5.0,4,4.5,0.728760521938707,0.697587378325531
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public or private.,5.0,4,4.5,1.1184646538651886,0.8789495803166167
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public: the function or variable can be used outside the class private: the function or variable can only be used with the class,5.0,1,3.0,1.3128167602248895,0.31587194056658385
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public and private,5.0,1,3.0,0.4591472558500318,1.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public private and protected,5.0,1,3.0,0.728760521938707,0.745243617614878
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public private,5.0,0,2.5,0.4591472558500318,0.9556232992856121
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"private, public, protected",5.0,3,4.0,1.2679870541160576,0.697587378325531
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,the access-specifiers that can be used in a c++ class definition is private and public.,5.0,3,4.0,1.1816782418151792,0.5028956849481027
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public and private.,5.0,2,3.5,0.9182945117000636,1.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"static, long, unsigned",0.0,1,0.5,1.3820318414268946,0.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"private, public, protected, or friend.",5.0,3,4.0,1.3186347960303135,0.5312481800479995
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"a c++ class definition may include access-specifiers public, private, and static.",4.0,3,3.5,1.3365408032988109,0.47061872611214295
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"local, global, local-variable, function specific",1.5,1,1.25,1.2912951132571164,0.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"public, private",5.0,5,5.0,0.0,0.9556232992856121
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"public, protected, and private.",5.0,2,3.5,inf,0.745243617614878
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"private, public",5.0,3,4.0,0.9182945117000636,0.9556232992856121
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public - can be accessed by any of the program  private - can only be accessed by the class functions themselves and no outside functions or calls,5.0,1,3.0,1.2297215075337469,0.318334826815016
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"public , private, protected",5.0,5,5.0,1.0931407829080606,0.697587378325531
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public and private,5.0,3,4.0,0.4591472558500318,1.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"public, private, protected",5.0,3,4.0,1.2679870541160576,0.697587378325531
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"functions and data members can be given access-specifications of public, private, and friend. public access is given to any functions or members not given specific access rights.",5.0,1,3.0,1.2856470861479716,0.36601377380547057
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,data member or data functions are access specifiers,0.0,1,0.5,1.312406378626906,0.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public or private,5.0,4,4.5,0.7456431025767923,0.8789495803166167
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public and private,5.0,1,3.0,0.4591472558500318,1.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public and private,5.0,2,3.5,0.4591472558500318,1.0
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,"public - can be accessed from outside the class private - accessible only from inside the class, not inherited protected - accessible only from inside the class, inherited",5.0,4,4.5,1.2193373024012077,0.21885998554405064
11.2,What are the access-specifiers that can be used in a C++ class definition?,private and public.,public private protected,5.0,2,3.5,0.728760521938707,0.697587378325531
11.3,How are objects initialized when they are created?,by using constructors.,ie. gradebook mygradebook();  call upon the class and then give it a name like shown,0.0,4,2.0,1.2861708004295525,0.0
11.3,How are objects initialized when they are created?,by using constructors.,they are initialized as a named instance of the template formed by the class. this named instance can then be modified to be different from the class that it was created from.,3.0,4,3.5,1.1806914938612239,0.05127407470262007
11.3,How are objects initialized when they are created?,by using constructors.,not answered,0.0,1,0.5,1.3295873968395848,0.0
11.3,How are objects initialized when they are created?,by using constructors.,objects are initialized by a value given.  when an object is defined for a certain task.,2.0,5,3.5,1.1505814538263166,0.09226440606475608
11.3,How are objects initialized when they are created?,by using constructors.,"they are initialized with a "" . "" (dot) between the constructor and the object being created.",0.0,1,0.5,1.2096293695834874,0.0
11.3,How are objects initialized when they are created?,by using constructors.,objectname classname();  to call a function from the class:  objectname.funciton();,0.0,2,1.0,1.236544879911527,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"if the object refers to a class, the constructor(s) will initialize the objects based on return type and parameters passed. compiler will auto-create one if one is not provided.",5.0,5,5.0,1.259928375996004,0.0
11.3,How are objects initialized when they are created?,by using constructors.,classname objectname(input parameters);,3.0,1,2.0,inf,0.0
11.3,How are objects initialized when they are created?,by using constructors.,when the class is called by the constructor,2.0,1,1.5,1.0913369973474596,0.1595811786641698
11.3,How are objects initialized when they are created?,by using constructors.,"constructors; default when not provided by user, or programmer specified constructors.",5.0,4,4.5,1.1103279397266668,0.467709538283408
11.3,How are objects initialized when they are created?,by using constructors.,objects are usually initialized at the beginning of the program and are initialized usually in the main function. they are initialized after the class's name.,1.0,1,1.0,1.224675137992642,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"&lt;variable type&gt; &lt;variable name&gt;; or, if you want to initialize a variable to a certain value, &lt;variable type&gt; &lt;variable name&gt; = &lt;value&gt;;",1.0,5,3.0,1.293819465726772,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"variables are set to a given value, or 0 if none is given.",1.0,2,1.5,1.2861761022552822,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"when the object is initialized, its constructor is called (whether one is provided or c++ assigns a default constructor).",5.0,0,2.5,1.2505560903887862,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"objects are initialized essentially as copies of the corresponding classes, complete with their own separate variables.",2.0,1,1.5,1.2456631725944514,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"if you had a class gradebook, you would initialize it in your main function by use of a constructor in the gradebook class.  if no constructor is specified or found, c++ will use a default one with no parameters.  gradebook mygradebook;  in this bit of code, the class gradebook has been initialized as object mygradebook.",5.0,1,3.0,1.2120054455600524,0.0308907138972529
11.3,How are objects initialized when they are created?,by using constructors.,objects are initialized by stating the classname first then assigning a name to the object. within the object's ( ) is a place where it can be initialized.,3.0,1,2.0,1.163121892948842,0.06283532020317179
11.3,How are objects initialized when they are created?,by using constructors.,they are initialized with a constructor.,5.0,2,3.5,1.192376534327279,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"the value is specified after declaration,  it can initialized anywhere between the declaration and the corresponding }.",1.0,4,2.5,1.236503138883665,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"with the default constructor for that object in its class.  if no constructor is specified, it uses the default system constructor.",4.0,1,2.5,1.232233016853554,0.0
11.3,How are objects initialized when they are created?,by using constructors.,initialized using the same name as the class,1.0,2,1.5,1.0933212618802257,0.20296317738884873
11.3,How are objects initialized when they are created?,by using constructors.,they are initialized to a value dependent on the compiler,1.0,4,2.5,1.2554211615348008,0.0
11.3,How are objects initialized when they are created?,by using constructors.,memory is allocated in accordance with their type and initialization input.,1.0,0,0.5,1.2483676069703993,0.0
11.3,How are objects initialized when they are created?,by using constructors.,objects are assigned a space in memory when they are created. the name given to the object points to the memory address where the objects data resides.,1.0,0,0.5,1.261389194306025,0.0
11.3,How are objects initialized when they are created?,by using constructors.,using constructor,5.0,1,3.0,0.7043110206873289,0.36264793694256764
11.3,How are objects initialized when they are created?,by using constructors.,by giving them a value,2.0,4,3.0,0.9447983840230216,0.15516447417003168
11.3,How are objects initialized when they are created?,by using constructors.,"by declaring the class first, the name of the variable, and then any variables that need to be put in the constructor.  ex. class myclass(x, y)",5.0,1,3.0,1.1623786793059592,0.06852412458415688
11.3,How are objects initialized when they are created?,by using constructors.,"objects are initialized by giving the object a type, name, and initial value",1.0,3,2.0,1.103531203705083,0.09724405387316784
11.3,How are objects initialized when they are created?,by using constructors.,they are initialized to 0,1.0,3,2.0,1.2704982944743506,0.0
11.3,How are objects initialized when they are created?,by using constructors.,"obj. are initialized by the variables that call them, when they are created within a class.   e.i. classname objectname etc.",1.0,3,2.0,1.1366759820864711,0.07065766955915928
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","name of the function, parameters it must receive in order to perform and a return type.",5.0,4,4.5,0.9472787751716315,0.31882585136247915
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",a function signature is the elements that make it unique such as the variables it calls for and also i suppose this includes the program it is in.,3.5,1,2.25,0.9974846724274625,0.11659604870842424
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","a function signature is the return type of a function, its name, and the number and type of its parameters.",5.0,2,3.5,0.8445324920309406,0.40773991872680787
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",function prototype that contains functions and data members.,1.0,2,1.5,1.0854736270122545,0.08591507351756651
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",a function signature is a declaration of the function that includes the parameter types and the number of parameters.,5.0,3,4.0,0.747511061409994,0.46657455332938214
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",the declaration of the function.,2.0,2,2.0,0.7733157715052075,0.33525669469280306
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","includes the name, accepted parameters, and return type.",5.0,0,2.5,0.9419321021101235,0.2880967289400202
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",its return type and its input parameters,5.0,5,5.0,1.1948401189808908,0.15224933200271226
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",contains the function name and its paramaters.  the return type is not included,5.0,2,3.5,0.7307970155947998,0.22871637990897264
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","return type, function name, and the parameter types",5.0,2,3.5,0.8547306534222084,0.3872247190770822
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",the function signature tells what the function parameters and includes all the function calls,2.5,3,2.75,0.7857367385569382,0.3133454890402394
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","the function's name, as well as what it returns and what it accepts.",5.0,3,4.0,1.073534951813504,0.14454609406999333
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",the body of the function that holds all the actual code,1.0,3,2.0,0.7342835649936316,0.21890959684895311
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",a function signature is the return type and accepted pass value type it takes,3.0,4,3.5,1.035148245254881,0.0909812142476579
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",a function signature specifies the name and input variables of a function.,5.0,2,3.5,0.8028072014218428,0.28882014672644946
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",a function signature is the function's parameters and their type and the name of the function.  the return type is not a part of the function signature.,5.0,1,3.0,0.6279016898562402,0.5109318922462507
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",the name of the function and what it accepts/ returns,5.0,3,4.0,0.5880561816869896,0.3099649512925518
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","the unique identifier of a function, which includes input variables along with the function name, but excludes the output type.",5.0,3,4.0,0.8797969570916784,0.21840160215412535
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","the order, number, and type of data items included inside the function parameters.",4.5,3,3.75,0.7504657437212156,0.30418596948631293
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","its the scope, type, and parameters of that function that give it it's properties and defines it against other functions.",5.0,0,2.5,0.9840363749629979,0.1889900918127777
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","is the name of the fuction, return type, and parameters that are being used",5.0,5,5.0,0.8360217643124144,0.32910353481671617
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","a function signature should include the name of the function, parameters, and a body.",2.5,1,1.75,0.5364175060747713,0.4074978563029253
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",the name of the function and the arguments passed to that function,5.0,2,3.5,0.563254592509811,0.41863122636934386
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","a function signature, used in a function's prototype, is the set of object types it take in as parameters, with or without names given for the objects.",5.0,2,3.5,0.9583418057666898,0.29134126455420883
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",function name and parameter are called function signature.,5.0,0,2.5,0.9533402644459857,0.2268687950642289
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.",fuction name and parameters,5.0,5,5.0,1.1121961169243457,0.3053717688229428
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","the parameters needed, the return type, and name of the function.",5.0,3,4.0,0.6049491540908761,0.5051724619935061
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","the signature of a function includes the name of the function, the number and types of parameters, and the return type",5.0,2,3.5,0.5487469106480471,0.6277501038551832
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","it is what uniquely separates overloaded functions. it includes the return type, and the parameter list of the function.",4.5,4,4.25,0.8554373768990841,0.21039116819915146
11.4,What is a function signature?,"the name of the function and the list of parameters, including their types.","function sig is, is what is the class recognizes as the main function, or rather its specification",0.0,1,0.5,0.9635676497274753,0.1090367327577236
11.5,What is a recursive function?,a function that calls itself.,a function that calls upon it self to solve a problem.  each time it calls upon it self it splits up a problem into a simplier form until it reaches a 'base case' which is the most simplest form of the problem.,5.0,4,4.5,1.0197327004094099,0.20272964415249808
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself to perform an opperation such as a factorial recursive function.,5.0,3,4.0,0.8690857776359917,0.47270873134911695
11.5,What is a recursive function?,a function that calls itself.,not answered,0.0,3,1.5,1.1512895466416566,0.0
11.5,What is a recursive function?,a function that calls itself.,a base case that calls upon itself until the problem becomes smaller and terminates.,2.5,5,3.75,1.0156069181055138,0.3833767197901202
11.5,What is a recursive function?,a function that calls itself.,it's a function that calls itself. it runs multiple times until the base case is reached.,5.0,4,4.5,0.9363033212446353,0.4409250751529408
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself untill it reaches a base case.,5.0,1,3.0,0.7548375667742646,0.5028778932421022
11.5,What is a recursive function?,a function that calls itself.,"a function that calls itself. each time it does, it must get smaller, and eventually must converge to a base case, otherwise you can start an infinite loop.",5.0,4,4.5,1.0301928010671246,0.29632150283411607
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself until a base case is met,5.0,4,4.5,0.8413818771856156,0.5744298596023848
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself. with each function call the problem is diminished.,5.0,1,3.0,0.6859803088475676,0.5758785697462425
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself to perform a certain task,5.0,3,4.0,0.6938539911430331,0.5621760412666597
11.5,What is a recursive function?,a function that calls itself.,a recursive function is a function that calls itself. usually called the base case. if the base case is not correct it causes a infinite loop.,5.0,3,4.0,0.9237127341050932,0.3638754804990365
11.5,What is a recursive function?,a function that calls itself.,"a function that calls itself, in order to solve a problem.",5.0,2,3.5,0.6362809097440978,0.6607995028479667
11.5,What is a recursive function?,a function that calls itself.,"a function that calls itself over and over until it finds the simplest form of solution, or the base case.",5.0,4,4.5,0.9557682584862143,0.3471785021284267
11.5,What is a recursive function?,a function that calls itself.,"a recursive function is a function that calls itself repeatedly until a base case is achieved. the fundamental idea is to break one large problem into a series of smaller, similar problems.",5.0,4,4.5,1.0210080455021553,0.3238623846069947
11.5,What is a recursive function?,a function that calls itself.,"a recursive function typically simplifies a problem by calling itself, until arriving at a base case, at which it recursively returns a solution.",5.0,4,4.5,1.1234245868064432,0.168182431067326
11.5,What is a recursive function?,a function that calls itself.,"a recursive function is a function that breaks down a large problem into two or more smaller problems and calls itself to solve those smaller problems until a base case or terminating point is reached.  at the base case, a definite answer is called and the function no longer recurses, but unwinds itself back through function calls to determine the answer to the original large problem.",5.0,1,3.0,1.059467937306529,0.3541121519931149
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself into a loop with a base case for a loop exit.,2.5,1,1.75,0.9283788580633899,0.42956843934983996
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself until the base cases are met.,5.0,1,3.0,0.816611718878314,0.5312117695733921
11.5,What is a recursive function?,a function that calls itself.,a recursive function only knows how to solve base cases  a recursive function calls itself directly or indirectly until a base case is reached.,5.0,2,3.5,1.0343271773088933,0.3008609769105517
11.5,What is a recursive function?,a function that calls itself.,a function that calls on itself and uses a base case to stop the recursion,5.0,4,4.5,0.8890355654052657,0.4891962695331858
11.5,What is a recursive function?,a function that calls itself.,"a function that calls itself, and which eaach calls get closer and close to the base case.",5.0,2,3.5,0.7407732530632986,0.4922301764824287
11.5,What is a recursive function?,a function that calls itself.,a function that divides and conquers a problem.  there is a base case that will eventually be reached.  the function calls itself over and over until the base case is satisfied.,5.0,5,5.0,0.9724916193730853,0.3311830856931335
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself in the definition code,5.0,2,3.5,0.7609567775323155,0.7207783126598801
11.5,What is a recursive function?,a function that calls itself.,a recursive function solves a problem by repeatedly calling itself. the initial problem is broken into successively smaller parts until a much simpler base case is reached. the solutions to each piece of the problem are then returned a step at a time.,5.0,2,3.5,1.2029850274482639,0.11336375971646129
11.5,What is a recursive function?,a function that calls itself.,"it invoke by itself again ana again, unless it reach bas case",4.0,5,4.5,1.1869573455262967,0.12256733093602552
11.5,What is a recursive function?,a function that calls itself.,"a function that solves a problem by dividing the problem into smaller problems, by calling its self again and again, until a base case is reached.",5.0,5,5.0,1.1012914525902462,0.0793412111499068
11.5,What is a recursive function?,a function that calls itself.,"a function that calls itself over and over again till a base case is reached, then it returns back to the original function.",5.0,1,3.0,1.0129724773653719,0.3769813970166615
11.5,What is a recursive function?,a function that calls itself.,"a recursive function is a function that during execution, calls itself over and over until a base case is reached",5.0,2,3.5,0.9224176201431762,0.3952813888334179
11.5,What is a recursive function?,a function that calls itself.,a function that calls itself. usually used to split a problem into several smaller problems of the same type.,5.0,4,4.5,0.9624405047672816,0.4195256577850544
11.5,What is a recursive function?,a function that calls itself.,function that calls it self till the base case is met,5.0,2,3.5,0.867943749931167,0.31488732834862365
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"iteration, performers  a series of checks and loops.",5.0,5,5.0,1.3456975182480315,0.25260977396637335
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,the alternative method is to use loops in the program instead of a function which calls itself.,5.0,0,2.5,1.2831824995265582,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,an alternative to solving a problem using recursive functions is to solve the problem using iteration.,5.0,3,4.0,1.3304819621065407,0.19786543103458964
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"iteration, this would be more efficient and has repetition structure.",5.0,5,5.0,1.3090146435877656,0.25783115116819477
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,one can use iteration or by using a simple while/for loop.,5.0,5,5.0,1.2776841824389344,0.25699802385962756
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iteration,5.0,2,3.5,1.3484423482391037,0.7185429314238826
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"iteration. a while loop or a for loop will be able to accomplish the same desired outcome... it may be faster than recursion, but could also be harder to understand.",5.0,2,3.5,1.2700264377492854,0.13037680310100194
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,you can also solve the problem iteratively,5.0,1,3.0,1.3064699302652167,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iterative,5.0,3,4.0,1.3322938141246492,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,using iteration loops.,5.0,2,3.5,1.3146668112895599,0.41568171978072066
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,another alternative way to solve a problem instead of using recursive functions is by using iteration.,5.0,5,5.0,1.2910124552629219,0.20229377594020762
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"a recursive function can often be solved using an iterative function, which runs faster, but is often more complicated.",5.0,1,3.0,1.2987615652803068,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iteration,5.0,5,5.0,1.3484423482391037,0.7185429314238826
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,any recursive function can be solved using an iterative method.,5.0,4,4.5,1.3187451739054554,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"many recursive solutions may also be solved with looping control statements, such as while, for, do-while, etc.",5.0,2,3.5,1.2885419398598208,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"using an iterative function, which repeats a specified operation or set of operations until a terminating point or base case is reached.",5.0,1,3.0,1.3178576360045937,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iteratively,5.0,5,5.0,1.290630503391552,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,using an iterative calls,5.0,2,3.5,1.3354715757640734,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iteration.,5.0,2,3.5,inf,0.7185429314238826
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iteration is the alternative way to solve a problem,5.0,3,4.0,1.3026556893242218,0.2921780597250511
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,using an iterative solution instead,5.0,3,4.0,1.3159753189416588,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"using an iterative solution.  for, while, or do while loop.",5.0,4,4.5,1.2909929104251363,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,the alternative way to solve a problem that could be solved using recursion is iteration.,5.0,5,5.0,1.2981366345130498,0.2156309215132956
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"any problem solved recursively could be solved with an iterative function. iterative replacements for recursive functions may be more difficult to program, but often lead to more efficient solutions to a problem.",5.0,5,5.0,1.3061740978353726,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,by iteration,5.0,4,4.5,1.2616749461297845,0.607191526052592
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"itteration, like a for loop, a while loop, or a do while loop",5.0,3,4.0,1.2310705953990801,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iteration by using loops,5.0,4,4.5,1.2729104702891918,0.3903495320441294
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iterative functions,5.0,5,5.0,1.3486858113044315,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,iteration,5.0,5,5.0,1.3484423482391037,0.7185429314238826
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,through iteration.,"the alt, way is to use a functions parameter in a call ""to"" function.",2.5,0,1.25,1.283878471758353,0.0
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,the array that is declared static retains its modified elements so once it is called upon again the latest elements are modified again.  an array that is not declared static will keep its original elements.,5.0,5,5.0,0.8468249189618096,0.26808560710113066
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,a static array only has a specific size and it cannot grow. also static arrays cannot be accessed outside the program which created it.,2.0,0,1.0,0.8819945926139268,0.24914651790281933
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,arrays declared as static are not created and initialized when a function is called and destroyed when the function terminates.,5.0,1,3.0,0.5831384527154531,0.464481102403266
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,static can be initialized and non-static cannot in c++.,1.0,0,0.5,1.0178276801524266,0.20738070685190543
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,an array declared static remains the same throughout the execution of the program.,0.5,4,2.25,0.8463763542241516,0.17167549505737978
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,a static array will be called only once. once it has been declared the complier will ignore the static line if it comes to it again.,3.5,0,1.75,0.8322162912617126,0.347249227667119
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"the static array will be available to the whole of the program, whereas an array that is not static is only available within the scope in which it is declared.   //pass-by-reference???",3.5,1,2.25,0.7167344724621737,0.2627240441853823
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,a static array has a predetermined size and that size cannot be altered,2.0,2,2.0,1.039845871884649,0.08444390172031985
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,arrays declared static can not be changed.  one not declared static can be altered.,0.5,3,1.75,0.9198634462466819,0.20208221409321217
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"an array that is declared as static will retain the values stored in it's elements between function calls, and will not reinitialize them to default values.",5.0,4,4.5,0.9436537655865199,0.12153832526047417
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,an array that is declared static causes anything that is not initialized to be set to 0.,1.0,1,1.0,0.9285474213412672,0.1391616979268723
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,a static array will have a null character at the end of the array.,2.5,2,2.25,0.8188027584494224,0.16629060185288239
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,static arrays cannot be changed while normal arrays can be changed,0.5,3,1.75,0.9477051262351208,0.2007204286731397
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,an array they is declared as static can be accessed outside of the method it was declared without passing it as an argument to other functions in the same class.,3.0,2,2.5,0.961438297072936,0.1100876412274207
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"a static array has class scope, allowing it to remain where other arrays might be recycled.",5.0,4,4.5,0.9428961299175266,0.1372788413269004
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,an array that is static does not change or uninitialize if called later unless explicitly acted upon.  it does not terminate or change across objects.  an automatic local array will be cleared and uninitialized if called later outside of it's specific scope.,5.0,1,3.0,1.0739552996906054,0.11880581923009492
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"one declared as static is one that is already defined. the program knows the length and the array from the start, whereas non-static arrays are declared or assigned later.",2.0,2,2.0,0.7306095819611726,0.2858358843371177
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"a non static array must reinitialize itself every function call, while a static array will only initialize itself once, unless otherwise forced.",5.0,4,4.5,0.8811058317874906,0.23915853367326134
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,a static array retains any modified values after a function call. automatic arrays reset to their initial values when the function ends.,5.0,5,5.0,0.7920648962936193,0.22221963510389603
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"a static array is one that keeps its values and is not initialized every time a class function is called, it's data is not lost at function end.",5.0,3,4.0,0.8612625700425147,0.25556102202990544
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,an array that is declared as static can only be used in the function that its being called in. its a constant array. static is another way of say const.,0.5,2,1.25,0.8264748856456208,0.2985647668232386
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,values in an array that is not delcared as static will remain constant.  when an array is declared const values within the array can be manipulated.,0.5,1,0.75,0.9027730932678655,0.1490750683702079
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,the data of a static array cannot be changed,0.5,2,1.25,0.9110366974126374,0.16276807226260293
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"standard arrays terminate when the functions that call them finish. a static array is not removed from memory when it's parent function terminates, leaving it available for other functions (or new instances of the original function).",5.0,1,3.0,0.8340669433367837,0.2555081262929818
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,by defining static array it doese not lose scope in locala function. static array makes programm more scalable. non static array lose scope inside the local function.,4.0,3,3.5,0.9984057938822218,0.17042613848277952
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,static arrays can be called from anywhere,3.0,0,1.5,0.9277358054089563,0.3765501904496954
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,a static array cannot be changed. a regular array can be changed when it is passed to a function or manually.,0.5,2,1.25,0.8411873749317721,0.1594087085253407
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"a static array can be can be edited throughout the program, while a non-static array can only be edited within a given function",3.0,0,1.5,0.8985156086874481,0.18026444615294931
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,"an array that is declared static is allocated when the program begins to run, and is not freed until the program exits, but has limited scope. a non-static array is allocated and freed every time that it comes in and out of scope.",5.0,2,3.5,0.8907164935177507,0.18754955627140357
11.7,What is the difference between an array that is declared as static and one that is not?,the static arrays are intialized only once when the function is called.,static has a predetermined size that cannot be passed while vis versa.,2.0,2,2.0,1.0481424982416618,0.07765177898909902
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,the type char[] has a  null ('\n' ) element at the very end.,5.0,1,3.0,0.6871133924333206,0.4875355107664025
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,a variable char is basically any non command key on the keyboard that you can press. a string is a collection of letters or numbers that is stored together to be used later. comonly strings are used for words. chars can be used for less but can have opperations performed on them in a useful way.,0.0,4,2.0,1.148249010776805,0.10828796402588363
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,the programmer must provide the null terminating character in a string of characters using type char[] and must also ensure that the array is large enough to contain the input string of characters and the null terminating character.,5.0,0,2.5,0.8204521186919062,0.4262545443653635
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,string of characters are followed by a null statement.  type string is for example   string s;,5.0,5,5.0,1.0899134134041988,0.32435830034988067
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,string contains a word where as char can contain phrases or a string of characters.,0.0,2,1.0,1.1944860955800112,0.2802258736146438
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,a string is a variable with a single entinty of letters combined into one while in a char[] each letter is assigned a memory value and each has its own variable assigned i.e. char[0] char[1].,0.0,1,0.5,1.1906200003245344,0.23594055024769542
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"a string contains a null character at the end of the string, which makes it easily possible to get the string length. a char array can have a virtually unlimited length, therefore, its size must be declared/limited.",5.0,0,2.5,0.8428717511687589,0.4426561972549681
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,an array of characters stores a null character at the end,5.0,5,5.0,0.6269328292599996,0.4807352639745014
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"when you read a string of characters, you also read in the white space.  when you read characters declared char you only read the characters, no white space.",1.5,1,1.25,1.0846249249875655,0.11599493258645753
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"character arrays will terminate at any whitespace, including spaces. strings terminate when they encounter the new line character.",1.5,1,1.25,0.8744644813097848,0.22563462888682245
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,the difference is that a string that is declared a variable of type char[] is each char is included in the array versus the string of characters that is read into a variable.,0.0,5,2.5,1.0236210596011346,0.31555611308777703
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"an array of strings reads the string literals, meaning anything within ""quotes"". a char array reads a string as each individual character.",0.0,0,0.0,1.1781557564604124,0.26873652059433834
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,character arrays can call on individual letters were a string array can only call words.,0.0,3,1.5,1.0956415250596898,0.16567525924790738
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,the character array has an end of line character at the end of it.,4.5,3,3.75,0.697992316630985,0.4718221324344836
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"type char[] may contain a null value as the last element, whereas type string will not.",5.0,4,4.5,0.9122002029148983,0.36380547879028935
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,the variable of type string has a terminating character \0 at the end of it.,2.5,4,3.25,0.6890001632912389,0.47422131785338817
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,the one that is type string has an extra string member. the /0 at the end.,2.5,5,3.75,0.8498958815181547,0.4107353241938041
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"a string has variable size and function calls available, while an character array usually has a static size.",2.5,2,2.25,1.1486896343821105,0.1719143853976874
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,a string char[] adds a null value to the end of the string.,5.0,3,4.0,0.6320718097386647,0.5863516301084813
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"char array needs an end character signature and is made up of characters each separate from each other, a string is an object in itself, with a value that the user enters.",5.0,2,3.5,1.016000078627452,0.2793978371112855
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"the variable of type char[], each character is stored into a different memory address and can be accessed easly, where as in a string of character, its not easy to be able to access each character in the string.",0.0,2,1.0,0.9924742154617833,0.3898778070129716
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"when the string is passed into the array char, individual characters are stored and can be manipulated.  although when a word is stored into a string variable, it is stored as one word and not as individual characters.",0.0,0,0.0,1.0959764990755225,0.1712226940049462
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"a string variable can change in size and is passed to functions by value, whereas a type char[] cannot change in size and is passed to functions by reference only",0.0,0,0.0,1.1749514487535857,0.12954628544779612
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"a string type string acts as a single object, with individual char entities accessible only through specific string class functions. a char array is less robust, but allows direct access to specific char entities.",1.5,4,2.75,1.234175678818605,0.2853099514423466
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"in arrays strings are stored as a characters (char[]), each character of string will be stored in each memory location of the array, while string of characters is only one memory location.",0.0,0,0.0,1.014858138970166,0.3347810117984953
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"an array of characters has one more element, its last element,the terminating element, or null, which doesnt exist in a variable of type string",5.0,5,5.0,1.1459613091820937,0.1832313088487216
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,a string of characters is a specific variable type that has no extra data at the end. a string of type char[] is all the characters and a null ('\0'),5.0,2,3.5,0.9015137105846325,0.43706339197742894
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,a string of characters will have a null character or value at the end of the string,5.0,5,5.0,0.5729329584704421,0.6588963787157553
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"when the characters are put in a char array, there is also a null terminating character added to the end, '\0'",5.0,3,4.0,0.8350464608648673,0.3967549490591952
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char[]?,the char[] will automatically add a null \0 character at the end of the string.,"string of characters that is read into a variable of type string includes,",0.0,0,0.0,1.161300285879758,0.2316362562601999
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","for example we have an array on n elements, the divide and conquer splits up the array into equal halves and repeats this process until each element is by itself",3.0,4,3.5,0.9554782303197061,0.16683489153485076
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",divide and coquer means dividing a problem into 2+ problems which are solved and then merged  back together for a final solution to the whole problem.,5.0,5,5.0,0.6655162268478297,0.3665671328875291
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",the divide and conquer paradigm divides a problem into smaller and smaller portions that are easier to solve.,4.0,2,3.0,0.7732932194509156,0.42128717061935395
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","divide elements,recur then conquer, which works in merge sort and quicksort.",3.0,0,1.5,0.9898457172440437,0.12648478406513558
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","to divide and conquer, you divide the program in half once or multiple times to the extent that the program as a whole is easier to work in groups to solve the problem.",4.0,4,4.0,0.8941390762845322,0.2400400015039225
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",to divide one larger string/line of values and sepereate them into smallers lines to easily manipulate them and then replace them in the order in which they should be.,2.0,4,3.0,0.8481723863356598,0.22792905115884152
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","split the problem into smaller, more manageable parts, and proceed to address the smaller problems.",4.0,1,2.5,0.7372716522848912,0.30066242855797964
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",dived and conquer is the breaking up of a large complex program into small easy to solve components.,4.0,5,4.5,0.9338762786296408,0.1395477653356616
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",dividing a larger problem into the smallest incident of the problem and solving the smallest incident.,4.0,1,2.5,0.7734416519221142,0.23152090808038348
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","break up very large data structures into smaller sub-units, that are easier to manipulate.",4.0,2,3.0,1.017510664401617,0.11747421416011311
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",the divide-and-conquer technique is where it takes the sorting algorithm and breaks up the array into smaller elements of the array to tackle the problem and run the algorithm.,4.0,0,2.0,0.874761599820975,0.29474209011414987
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","the divide-and-conquer paradigm divides the problem into two pieces and works on each piece separately, allowing for a faster approach to 2 separate smaller problems.",4.0,3,3.5,0.8001396677026338,0.2661898464460366
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","take a problem and divide it into a smaller problem and solve that smaller problem, or divide it into a smaller problem and solve it, thus solving the whole problem in the process.",4.5,4,4.25,0.6422893324462601,0.592928760062685
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",the idea is to split the problem into half and solve for the smaller split-problems.,4.0,2,3.0,0.6077180431232705,0.33613226094084797
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","the divide and conquer paradigm, splits a large problem into simpler problems, at which point it solves the simpler problems and merges the simple solutions together to answer the large problem.",5.0,1,3.0,0.7660542030542532,0.2899691948220468
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","divide-and-conquer refers to abstraction, the act of separating large, complex problems into smaller, easier problems that can be solved by a relatively simple algorithm.",4.0,0,2.0,0.9738134966366905,0.160149695668202
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","it takes a large problem and splits it into two or more easier or faster solutions, and  makes for better readability.",4.0,2,3.0,0.9526170891060043,0.24900506911713616
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",it is the taking of a larger problem and splitting it into simpler smaller problems.,4.0,3,3.5,0.8058071859764983,0.2687463845350116
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",it divides the problem into singular units and works on the problem piece by piece until the problem is solved.,4.0,1,2.5,0.858579312983552,0.29326329337464047
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","smaller parts are easier to compare than comparing the whole, so it divides the problem down in halves until it can easily compare, then works backwards putting it back together to give the solution.",5.0,0,2.5,0.906958174259205,0.17687629308715708
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","a divide-and-conquer paradigm. takes some data, divides it into two parts, and works on each part indiviually until the item is found.",4.0,1,2.5,0.9988984916991721,0.14105330902349664
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","the idea of divide and conquer is to take a large problem, split it into n smaller problems, making the program easier to read and modify.",4.0,5,4.5,0.85074450348476,0.2873893082008549
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",the divide and conquer paradigm is a recursive solution that keeps dividing the problem into halves until a base case is reached.,4.0,1,2.5,0.7999858173298424,0.2929933371037745
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","dividing and conquering means breaking a problem into two smaller problems, solving both of those, and putting the two solutions together.",5.0,1,3.0,0.7462056672014377,0.26988567997604407
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","divide the big problem into small problem, solve small problem and join small solved elements of the problem. if there is two ore more elements in the array, divide the array into parts and compare the elements, after comperison, conquer the elements. if array have n element, first half have n/2 elements",5.0,2,3.5,0.796530892611773,0.34567564758383096
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","divide the array in half, sort each half, then sort them back in one array",3.0,1,2.0,0.8494670996777435,0.15738134658786568
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",you take a class and break down everything it is supposed to do into easily managed functions.,1.0,1,1.0,1.101046246391601,0.07516979459070072
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","this is shown by the use of .cpp and header files.  by splitting the program up into smaller subsections of individual code, it becomes easier to write and keep up with as opposed to having all of your code in one file",1.0,1,1.0,1.0333397533373108,0.09971172483032102
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.","when a problem is too big, split it into smaller problems of the same type, and solve those, then from the solutions of the smaller problem, give the solution to the larger original problem.",5.0,4,4.5,0.5698350421295035,0.5578443319992739
11.9,Briefly describe the divide-and-conquer paradigm.,"divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",it is the separating of large program into smaller classes then until target is reached.,1.5,4,2.75,0.8653653766253815,0.18131528470476282
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","it uses the divide and conqure technique recursively and then when merging back together it compares each element together in a sorted list, this is done by reversing the divide and conquer technique",5.0,1,3.0,0.8417355921075345,0.16058882215401335
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",a merge sort works by removing all items to sepperate memory locations and merging them back together in order.,2.0,2,2.0,1.122747197264587,0.011574807109106256
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","it divides the array into two halves, sorts each half, then merges the two halves together.",5.0,2,3.5,0.3205219028391593,0.6921681469038169
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","divide into two sublists and then those sublists break into length 1, then merges the sublists sorted.",5.0,5,5.0,0.7268512609287969,0.26785067410371993
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort uses the ""divide and conquer"" idea where it divides the array in half multiple times and then joins each element of the array back into one sorted array. this is one of the best sorting algorithms besides quicksort.",5.0,4,4.5,0.6997465354320639,0.251174828023396
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",divides the line in half coninuously until you get to only a single value then recombine the values to form a sorted line.,5.0,3,4.0,0.8745084227592337,0.09995780121321585
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","continually split array in half, sort each side of the halves, then put them back together once organized.",5.0,3,4.0,0.7681743457460346,0.2020674061079444
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",merge sort splits the array of elements into smaller arrays until the arrays reach size 1 and then the merge sort merges the smaller arrays into arrays of size 2 then it moves to the next step and merges the next arrays.,5.0,4,4.5,0.6822460631866175,0.4429850459470824
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",by divide and conquer.,1.5,5,3.25,1.2277195647849306,0.028169665204872525
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","break a single array down into many arrays with individual elements, then sort the elements as you reconstruct them back into a single array.",5.0,5,5.0,0.8944489964654007,0.18695595448251764
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort breaks the array in half, and continues to do so until it has 2 elements to compare and sorts them, after doing so it ""merges"" back as it keeps on sorting the algorithm as it does so.",5.0,4,4.5,0.9154431216127271,0.21672871148027054
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort divides the problem in half, organizes each half, then brings the two halves together again.",5.0,1,3.0,0.7462637715277284,0.2506007515562801
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","take an array and split it into two, then solve these simpler problems and merge the two answers in correct order.",5.0,5,5.0,0.7232581505468269,0.312876481578193
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","a merge sort recursively divides the array into half until only one element remains, then it sorts the data on its way out of the recursive call by merging the cells.",5.0,2,3.5,0.7334372062657264,0.23314795754719397
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort recursively divides an array into two arrays until all arrays have 1 element, at which point it merges the 1 element arrays into larger sorted arrays, the final returned array being the sorted version of the initial array.",5.0,0,2.5,0.7267400511124471,0.42919067363501173
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",merge sort continuously breaks an array in half then sorts the arrays as it concatenates them back together into one sorted array.,5.0,2,3.5,0.7182104233935269,0.29682075266209823
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","it takes an array, splits itself in half, sorts the two halves (either by recursion or iteration) and compares them together giving a third array a full sorted list with both halves rejoined.",5.0,2,3.5,0.8303761318605352,0.39693841334611024
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","it splits a large array into small arrays and recurs until the array is a size of 1, and then merges all of the arrays back together until the source array is completely sourted.",5.0,4,4.5,0.7448494668746175,0.3766563515231323
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",mergesort divides the array into smaller halves and then combines the sorted subarrays into one sorted array.,5.0,2,3.5,0.6054101929845729,0.35367147577563285
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort breaks the array down in halves until it is comparing two values, sorts those two values, then merges that back with the other broken down parts that it sorted, each level merging more sets together till you return back to your whole array in order.",5.0,3,4.0,0.7884637842439066,0.3748493308016904
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","divides the data into twor separate arrays, sorts the two arrays and merges them back to back together recursively.",5.0,1,3.0,0.6357391970989695,0.3919159821049133
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","take the initial array and split it into two, temporary, smaller arrays, sort the two smaller arrays, and merge them back into a single array.",5.0,5,5.0,0.6773335765902572,0.3876136570001907
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",merge sort divides the data into halves until data of one element is reached and then merges each element together according to its placement in comparison to the rest of the data,5.0,1,3.0,0.8499551443087687,0.2761868429085614
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort uses the divide and conquer strategy, sorting an array in parts, then merging the sorted parts back together.",5.0,1,3.0,0.7643403844805539,0.13487406806040417
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","divide recursuivly big array into two arrays, sort two array and merge them togather recuruivly.",5.0,3,4.0,0.8816525341991331,0.30567570684489387
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","divides an array in half and sorts each half by calling its self, thus dividing each half again and again and sorting it until the array is sorted. then putting the elements back in the original array sorted.",5.0,3,4.0,0.7157079498959726,0.3149925243585516
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",merge sort takes an array and splits it in half and sends each half back to itself recursively and merges and sorts the two halves when it starts going back up.,5.0,1,3.0,0.7203078749531591,0.4139371837213947
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","merge sort splits an array into two halves and then sorts the two smaller arrays, and then merges them back together to form a sorted array",5.0,0,2.5,0.5730107997006911,0.702042640438879
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.","the merge sort continually divides the array (or set of containers) into halves, until it reaches the point where there is just one element left, then merges each of the sets of two sorted arrays (containers).",5.0,5,5.0,0.6229496005213072,0.40806604910665883
11.11,Briefly describe in one sentence how does merge sort work?,"it splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",merge sort splits an array of elements into smaller and smaller array's till the value of 1 is reached.,2.5,1,1.75,0.8187161493771212,0.23485545356114076
12.1,What is a pointer?,the address of a location in memory.,a variable in memory that hold the address of another memory location to which it points too,5.0,3,4.0,0.8715452108763413,0.5506920090230731
12.1,What is a pointer?,the address of a location in memory.,a pointer is a variable that contains the memory address of a given value.,4.5,1,2.75,0.9784907558057503,0.3678742181879665
12.1,What is a pointer?,the address of a location in memory.,a pointer is a variable that stores the address of another variable.,5.0,5,5.0,0.913055545506978,0.22577633073199246
12.1,What is a pointer?,the address of a location in memory.,a pointer is a variable that holds a memory address or location of another variable.,5.0,2,3.5,0.9654392702376138,0.4503263643268214
12.1,What is a pointer?,the address of a location in memory.,a data type that points to an address in memory which contains certain information. used for pass-by-reference to save memory.,5.0,5,5.0,1.0343516495474052,0.28716996058542743
12.1,What is a pointer?,the address of a location in memory.,a pointer points to a location in memory of a certain data type,4.5,0,2.25,0.9529054015724072,0.437314596864303
12.1,What is a pointer?,the address of a location in memory.,a pointer is a variable that points to the address location of another variable.  represented by (*).,5.0,2,3.5,0.8875660427799431,0.34413745759822445
12.1,What is a pointer?,the address of a location in memory.,a pointer is a variable that holds the address of a given variable (and of a given data type),5.0,4,4.5,1.019907925121405,0.20016445322450546
12.1,What is a pointer?,the address of a location in memory.,pointer is a programming data type whose value points to another value stored in computer memory by its address.,5.0,3,4.0,1.1626273440796677,0.2346416822397188
12.1,What is a pointer?,the address of a location in memory.,a data type that points to a specific memory address.,5.0,4,4.5,1.2141041846387015,0.3262407419777661
12.1,What is a pointer?,the address of a location in memory.,its like a variable except it only holds the address in memory of the variable not the physical information.,5.0,1,3.0,0.8648863709877049,0.3152748947542806
12.1,What is a pointer?,the address of a location in memory.,a pointer is a reference to a memory location.,5.0,1,3.0,1.2820291247337159,0.4593396211447125
12.1,What is a pointer?,the address of a location in memory.,a pointer is an alias to an object in memory.,3.5,1,2.25,1.063341083173905,0.1956237071649764
12.1,What is a pointer?,the address of a location in memory.,"a pointer is a variable that contains a memory address for something that you can use, such as a value, array, or even a function.",5.0,1,3.0,1.141858678039809,0.19188265430098023
12.1,What is a pointer?,the address of a location in memory.,its a data type with a memory address and a value,1.5,4,2.75,1.0350527438970065,0.35838545563306967
12.1,What is a pointer?,the address of a location in memory.,a form of storing data that keeps the location in memory of an data type or object.,5.0,3,4.0,0.9477870394714717,0.38006297848375403
12.1,What is a pointer?,the address of a location in memory.,it contains a object's memory address,5.0,3,4.0,0.9372855496240313,0.4106549890453871
12.1,What is a pointer?,the address of a location in memory.,variable that contains the memory address of a data object.,5.0,4,4.5,0.8884201834231829,0.42557238425509153
12.1,What is a pointer?,the address of a location in memory.,a pointer is an element that references a memory location.,5.0,3,4.0,1.235054855876535,0.3562504102003301
12.1,What is a pointer?,the address of a location in memory.,"an object that points to a specific place in memory, where a variable or value is stored.",5.0,2,3.5,1.0902898308801388,0.15079224884143272
12.1,What is a pointer?,the address of a location in memory.,a variable that stores the address of a memory location,5.0,5,5.0,0.7158500707861347,0.6765915690414935
12.1,What is a pointer?,the address of a location in memory.,"a pointer is a variable that points to an address in memory, which contains some data. the pointer does not contain or point to any data, only a memory address.",5.0,3,4.0,1.0576157701416529,0.3644117037956428
12.1,What is a pointer?,the address of a location in memory.,pointer is a variable which have a memory address of a variable.,5.0,1,3.0,1.0590565810351535,0.3343550531994236
12.1,What is a pointer?,the address of a location in memory.,a pointer points to a location in memory where data is stored,5.0,3,4.0,0.9544869057066292,0.4135183806619553
12.1,What is a pointer?,the address of a location in memory.,a variable that holds the address of another variable and can access the contents of the variable.,5.0,2,3.5,0.8421112074724519,0.2181606709788809
12.1,What is a pointer?,the address of a location in memory.,a pointer is a memory address that points to a data member,5.0,5,5.0,1.0930938732971074,0.33416381905331766
12.1,What is a pointer?,the address of a location in memory.,a data type that stores the memory address of another variable.,5.0,4,4.5,0.9101923429122798,0.3831088473234486
12.1,What is a pointer?,the address of a location in memory.,its like a variable but only holds an address in meomrry not the physical address.,1.0,2,1.5,0.928088833824305,0.28933205522456035
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"try several sets of data on an algorithm that includes worst case, best case, and random cases.  also try and run the same program on a different computer with the same specs",5.0,2,3.5,1.0822820807699236,0.10305754731092084
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,not answered,0.0,5,2.5,1.30408201016656,0.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,time complexity using big o  logarthmic o(log n) linear o(n) exponential o(n^2) quadratic o(n^k) k&gt;=1 polynomial o(a^n) n&gt;1,1.5,4,2.75,1.2314968115628768,0.051405406078267914
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,using some sort of counting principle of the number of operations performed in an algorithm.,5.0,1,3.0,1.1286471668564315,0.1172620836792616
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,experimental means you would actually write a prototype of the algorithm and measure the time it takes to run given certain parameters.,5.0,2,3.5,0.9346593756770303,0.29020503050319246
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,measuring the relationship of running an algorithm with different input sizes.,5.0,2,3.5,0.8182167841779365,0.2400184192426891
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"oposite of a theoretical assessment of the algorithm to determine runtime, but to run the code first to determine the the runtime.  this is not recommended because it is a limited test.  it does not include all possibilities of the data, nor the hardware used to process the data.",5.0,2,3.5,0.9560701166620305,0.10803493693233406
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,not answered,0.0,3,1.5,1.30408201016656,0.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,the experimental approach for measuring the running time is by using the big o equation which tells you the running time.,1.5,2,1.75,0.8242297190715728,0.35423672036842835
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"you create and run  the algorithm multiple times, while measuring the amount of time it takes, you then average the results.",5.0,2,3.5,0.9080541045033469,0.19965389917653392
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,keep a value of how many operations it takes and add to this value each time a function is called.,3.0,3,3.0,1.231806367550953,0.09070210468713946
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,big-oh,1.5,3,2.25,inf,0.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,running the program with various input data and measuring the running time with system time.,5.0,4,4.5,0.7927920135120607,0.3845331381683284
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"you run a program with different data sizes, like 10^x.  as you increase x and measure the completion speeds for the program, you can find patterns and attempt the measure the running time.  it's very important to keep the same software and hardware however, which makes experimental testing inferior to theoretical in the eyes of most.",5.0,4,4.5,0.9479109996054348,0.2842308957871515
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,to run the program through and see how many times each thing is called and the runtime of each function is based on that.,5.0,1,3.0,1.1127149139383437,0.06613347077745557
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,the number of times a specific segments get called per unit work.,3.0,1,2.0,1.1534118861605023,0.021780045534979423
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"for every call into memory, add/ multiply it into an equation of type o(n)",1.5,3,2.25,1.2481535931210315,0.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"adding a time marker at the before the algorithm is called and another time marker immediately after so that you have the change in time, then you can calculate the efficiency by the speed of the computers cpu.",3.0,3,3.0,0.9965495709468623,0.23664911698110547
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,big o(h) notation,1.5,2,1.75,1.3008900405132242,0.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,the experimental approach measures actual running time in t.  t= seconds.,5.0,4,4.5,0.866308320361709,0.22293410787531692
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,running an algorithm on a specific set of data,5.0,2,3.5,0.9225332114916865,0.3250418546502318
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"in experimental terms, the running time of an algorithm is measured by the number of operations required to complete the function. this number can usually be expressed in big-o notation.",2.5,1,1.75,0.9621259857701108,0.23198818935789284
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"run the code for n-times and get average values, drop the constant and lowest number. for example if             f(x) = 3n +1 the running time will bef  f(x) = o(n)",2.5,1,1.75,1.002437552088031,0.21053391538003682
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,to measure the actual time of the program to run. and calculate the running time using the input and operations done,5.0,3,4.0,0.7816220417311334,0.45259576754662667
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,adding up the number of operations performed based on the worst case possible.,2.0,3,2.5,1.0735604416185005,0.04459019009673796
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,the experimental approach would be to run through the algorithm and see how long it takes,5.0,3,4.0,0.9654842453323962,0.13966305978610366
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,"trying it with different sets of inputs, and measuring the amount of time that the algorithm actually takes.",5.0,3,4.0,0.9472669166474239,0.18980281255710493
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement the algorithm and measure the physical running time.,running the input with various inputs measuring the running time with  system time,5.0,1,3.0,0.8863785599651548,0.35799537242488466
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","it scans the list and selects the smallest(largest) element and places it in the front, increment the curptr by one, scan the list again for the next smallest(largest) element and place it in with respect with the other sorted elements.",5.0,5,5.0,0.7260618212546683,0.33404539569732933
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort searches the array for the lowest value and swaps it with the first value in the array. then searches for the next lowest value and swaps it with the second item in the array, and so on.",5.0,4,4.5,0.6879221215692237,0.33447746195019035
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",compare the largest element to the front element and swap data according to value if needed.,4.0,0,2.0,1.017046987681979,0.07335567274232552
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort is a sorting algorithm that divides a list in half and has two lists. it then compares the first elements in both these lists and puts these elements in another list, having the smaller element before the bigger one.",1.0,3,2.0,0.9416711308921912,0.1334561928481871
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","iterate through the list (assume list of integers), find the smallest one, and put it in a separate ""sorted"" list... then traverse again and find the next smallest, and move it to the sorted section... and repeat until you run out of elements to sort.",5.0,1,3.0,0.8875115053213348,0.18628914640026684
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort selects the smallest element out of the list then the second smallest ....and sorts them acordingly.,5.0,0,2.5,0.7680944853806234,0.2520669904413208
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",you select the smallest element and place it on the left.  you select the smallest element and sort it with respect the the item already on the left.  you continue this till the end of the collection of items.,5.0,3,4.0,0.7522159129910301,0.25311462107463584
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","a selection sort scrolls through the data structure looking for the lowest (or highest) unsorted piece of data, moves it to the held spot, increments that spot by one, and starts the process over.",5.0,0,2.5,0.9312250453898105,0.1126114433799269
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort works by finding the smallest element and then compares it with the largest and sorts the elements.,0.0,4,2.0,0.8513139570361095,0.1927143188084634
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort is usually a recursive sorting method where you divide the elements to be sorted in half repeatedly. you then sort the smallest case, then work your way up, sorting each until they are all sorted.",1.0,1,1.0,1.043550247032008,0.05938096223014475
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","goes to the middle of the list, checks to see if it is greater or less then the value given and moves through the list accordingly to add the value into the proper place.",0.0,4,2.0,0.850882463437522,0.17466366238502534
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort finds the lowest element in the data set and places it behind the pivot point.,5.0,4,4.5,0.7868796934673697,0.24947533447029835
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort iterates through the array one element at a time, seeking the least value from the right and replacing the current value with it.",5.0,4,4.5,0.8622843109204827,0.20773139618127445
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort traverses an unsorted array looking for the smallest value, when it's found it is put at the beginning of the unsorted array.  performed several times, this will output a sorted array.",5.0,4,4.5,0.9139989823143251,0.1975497945002204
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",it runs through the list and finds the smallest (or largest) value and puts it at the appropriate position,5.0,1,3.0,0.8018450195480689,0.2965735764870154
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","pick a number, and set all values less than that number to the left, while all numbers on the right of that number is larger.",1.0,4,2.5,0.945045806638925,0.09730373341780432
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",it takes the largest item in the unsorted array and swaps it with last item in the unsorted array.,5.0,5,5.0,0.7724738538994899,0.23333949620307426
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","by selecting the first object and comparing it with the next objects to find one that is smaller, if it does it switches the two.  then it comes back the other way and sees if the objects previous to the last one is greater, if it does it switches them.  it does this while decreasing the range it looks at until it finishes in the middle.",1.0,2,1.5,0.7788215462651008,0.30191392919582327
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sorts works by going through a certain list. goes through the unsorted list and selecting the largest item in the list and placing it in a sorted array. there are two arrays, unsorted and sorted. complete these steps until the list is sorted.",5.0,1,3.0,0.9828742154511253,0.13209513137236806
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort works by pulling all of the values off to the side, leaving one value in the list.  it will then insert a value into the list.  if the value is bigger it will go to the right, if smaller if will go to the left.",1.0,4,2.5,0.8452158691680209,0.1673204079982201
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort searches for the smallest element of the remaining data organization and places it at the largest point of the new data organization,5.0,1,3.0,0.8663574187976363,0.21736671978181832
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort sorts an array one element at at time. it first finds the element with the smallest key and puts it into the first location within its array or list, then finds the next smallest and puts it in the second location, and so on.",5.0,3,4.0,0.7017673234344697,0.33432015182079455
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","select an element compare it with 2nd element if it is greater, swap it",1.0,1,1.0,0.9417179839793824,0.17665902532559333
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","it selects the smallest element in a list and switches it with the element in its correct position, then it selects the next smallest and does the same...",5.0,4,4.5,0.6968892804773513,0.4468514063726031
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",it starts at the first element and replaces it with the smallest element found to the right. it then repeats with the next element in the list.,5.0,2,3.5,0.7037126988676602,0.27978049272231675
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","selection sort is when you pick a data member and put it in a new array, then you pick another data member and put it in order with the new array, then pick another and insert it in the correct place in the new array, etc etc",1.0,3,2.0,0.9307826433337674,0.19711656963550145
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.","it searches through the entire data set for the best element to go in the current position, then it moves up a position and searches through the remainder of the set for the best element for the new position.",5.0,5,5.0,0.831977931809084,0.3022694008330943
12.4,"Briefly, how does selection sort work?","it selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",selection sort  iterates through the array one element @ a time searching for the right and replacing current value with it.,5.0,5,5.0,1.0041715939428701,0.15555540286807215
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",a link list can grow to a infinite size as a array has a fixes size.,5.0,2,3.5,1.1210711854597568,0.017922635132239774
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",the advantage of linked lists is that they are not limited in size like arrays.,5.0,4,4.5,0.8917280464467774,0.19850960739343448
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",link lists dont have a fixed size,5.0,4,4.5,1.0768248603526627,0.0977606775245359
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists can be of variable size, where arrays have fixed size.",5.0,4,4.5,0.753334073596857,0.27845762631936355
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists do not have a definite size. they can be as big or as small as needed, and they don't have to allocate extra memory for elements you don't need. arrays size must be defined.",5.0,1,3.0,0.9487634186591519,0.15574483203024198
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","a linked list has a dynamic size , but an array only has a fixed size and takes allot of extra operations to increase its size.",5.0,2,3.5,1.0414979428036406,0.14437097988258157
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",you do not have to predetermine your list size as you do with arrays. linked list have the ability to be as large as you want them adding memory as needed.,5.0,2,3.5,1.0534681537701085,0.0690507501274363
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",the main advantage to a linked list is that it can have it's size adjusted during runtime.,5.0,4,4.5,1.0232959490322504,0.06503537741280173
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",linked lists are able to grow in size. so elements can be added to the list.,5.0,2,3.5,0.6807263194989132,0.30542851800952364
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists are not confined to a specific size, and can have elements added and removed far easier. they are also easier to traverse.",4.5,5,4.75,0.8519279087078049,0.2047008939445288
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",there is no predetermined length,5.0,4,4.5,1.2252418523828468,0.0
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","inserts into a linked list are far cheaper than an insert into an array. with an array, all items after the one being inserted must me shifted, with a linked list, only the pointers are replaced.",4.0,4,4.0,1.01057018490154,0.10173384069416336
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",linked lists may be dynamically grown.,5.0,2,3.5,0.8434586685199209,0.22387246268701877
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists are very dynamic in that they can change and be added/subtracted to very easily because they are not linear in memory.   arrays are pre-specified in size to be cast over a certain amount of disk space.  this makes insertion into arrays difficult because all elements must be shifted, and if you reach the end of the array, you are done even if you have more data to input.  linked lists do not run into these problems.",5.0,3,4.0,0.9259308151439737,0.26521117464516336
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists have an indefinite size, whereas arrays are a specific size.",5.0,4,4.5,0.8711910190589168,0.1749236021580918
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists have no predefined length, and thus you can have virtually unlimited items in that list.",5.0,4,4.5,0.9834425972212524,0.10778277096879599
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","they grow dynamically, unlike the fixed size array",5.0,1,3.0,1.1926928660211746,0.0
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","you can add as many nodes as you like without having to specify a list size, if an array gets too big you have to copy its entire contents to another larger array to get more room",5.0,4,4.5,1.1776301835630567,0.039063203441398395
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",linkded list does not have a fixed size. arrays have a fixed size.,5.0,4,4.5,1.1347383717465653,0.0
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists have a dynamic size, where as arrays have a static size.",5.0,3,4.0,0.8305976839405993,0.26089537920661104
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",linked lists do not have a memory constraint other than total memory,5.0,1,3.0,0.9672349527922786,0.12948055930255953
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","the primary advantage of linked lists over arrays is their ability to become larger or smaller as data is added and removed from the list, whereas arrays may waste memory for small data sets, and run out of space for large data sets.",5.0,1,3.0,1.0599136631655497,0.1267637665023536
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","array have fixed size, in link list are flexible for adding or deleting an element.",5.0,3,4.0,0.9327306042648246,0.07136213094702465
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",they are resizeable,5.0,3,4.0,1.1078799034063893,0.07358861935271994
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",linked lists can be dynamically allocated and their size can change as needed.,5.0,2,3.5,0.8395775132738209,0.17394377945794554
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","linked lists do not have to have a specified size, they are easier to add to and remove from",5.0,1,3.0,0.9170525870470967,0.20637821083375207
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.","they dont have a fixed size, no shiftnig needs to be done for insertion/deletion.",5.0,5,5.0,1.009520928213478,0.08009243959103624
12.5,What is the advantage of linked lists over arrays?,"linked lists are dynamic structures, which allow for a variable number of elements to be stored.",linked list many be dynamically grown. it has not limit,5.0,1,3.0,0.8807934862104212,0.09825147508100464
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a data structure in c++ where the the first element in the queue is the first element taken out of the queue.,5.0,4,4.5,0.49340996219228,0.4917555498893507
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a queue is an abstract data type that performs operations on both ends of the list and exhibits first-in first-out behavior.,5.0,3,4.0,0.8549095162287332,0.35422651728667576
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,first in first out.,4.0,3,3.5,0.9610565134134581,0.48597688393230376
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a queue is an abstract data type that involves putting an element at the back of the list. queues use the fifo, first in first out, idea where the first element in the list is the first that comes out.",5.0,2,3.5,0.6622448793658425,0.3794493488859817
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a data structure that implements first in, first out. the element that has been there the longest is the first to get served.",5.0,0,2.5,0.6907657402377863,0.3835300206384057
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a data structure that inserts elements at the end of it and removes elements from the front.,5.0,3,4.0,0.7813190896011917,0.25604010682835
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a queue is a collection of elements with the characteristics of first in first out (fifo).  the first item in is the first item out.  all additional items are added to the end of the list.,5.0,3,4.0,0.6471492999860081,0.40705603485001013
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a queue is a data structure that inserts data into a fifo configuration, that is, data input to the structure is always at it's end, and data taken is always from the beginning.",5.0,0,2.5,0.8273797199884779,0.2426458251696006
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,it is a particular set of entities that are put in to a certain order by the enqueue and the dequeue functions.,1.5,3,2.25,0.8662410004735265,0.25076474171381324
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a queue is a data type that operates under a filo (first in last out) method. this means that the first element inserted into the queue is the first element removed.,5.0,2,3.5,0.6797880328984021,0.35327535685057926
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,like a linked list except it is first in last out,0.0,4,2.0,0.8751774244388507,0.23184248100751
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a queue is like a stack except it follows fifo (first in first out) .,5.0,5,5.0,0.8428607526798454,0.313953535976695
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a queue is a data structure where the first node in is the first node out.,5.0,4,4.5,0.606267870276442,0.4792066206134312
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a queue is a first in first out data structure much like a line for a movie theatre.  the first object in line is the first object to be handled or enacted upon.,5.0,4,4.5,0.6923686372384178,0.335801972340643
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"its a lot like a stack, except that the first item put into the list is the first item to be taken from the list.",5.0,0,2.5,0.8627000538010627,0.18156705310855428
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a first in first out list of items, like if you put 5, 4, 3, 2, and 1 in the queue it will when you dequeue items remove the items in the same order as put in, so thus it will put out, 5, 4, 3, 2, and 1 in that exact order.",5.0,2,3.5,0.8118584435843857,0.30051768175114846
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a linked list with a first in, out structure dequeue at the head of the list enqueue at the end of the list",5.0,5,5.0,0.8376325307626037,0.37671516991033344
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a list of objects that follow the rule first in first out, essentially a linked list that goes in order of the first object in the list is the first to be taken off.",5.0,3,4.0,0.7231436640239919,0.33731237591026386
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a queue is an abstract data type that is based off of the priniple of first in first out. fifo. the first item inserted into the list will the first item taken out.,5.0,4,4.5,0.7180836558252282,0.36884931154781087
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"it is a ""first in first out"" data structure.  it can be implemented with either a linked list or an array.",5.0,2,3.5,0.9479450266969993,0.33039056472721573
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,an ordered list that performs task in the order of first in first out. adding items to the queue places items behind the rest of them. taking items off the queue takes the one that has waited the longest.,5.0,5,5.0,0.783357751641552,0.27160695850088756
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a queue is a linear, first-in first-out data structure. data must be accessed in the same order it was put into the queue, so only the oldest item in the queue is accessible at any time. main functions defined are enqueue and dequeue.",5.0,5,5.0,0.7545285406792676,0.4983180483625985
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"queue is a buffer, it follows the rule of first in and first out. queue is very useful in computer science for scheduleing .",5.0,3,4.0,0.7411069606797885,0.2851108810183059
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,a queue is a set of elements where the first element inserted is the first element to be removed,5.0,2,3.5,0.7745940202274607,0.27501969831652745
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,is a list of items where the the user only has access to the first element and each new element is added at the end.,5.0,0,2.5,0.9352851448727006,0.1335206016039705
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a queue is a list of data that follows the fifo principle, an example of this would be when you get into a line at a movie theater...the first one there gets to buy a ticket first",5.0,4,4.5,0.8931221720045255,0.22920406141073596
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,"a queue is a data structure that holds a set of objects, which has a fifo (first in first out) priority.",5.0,5,5.0,0.7002992224407646,0.3939036401751355
12.6,What is a queue?,a data structure that stores elements following the first in first out principle. the main operations in a queue are enqueue and dequeue.,like a linked list expect first in last out,0.0,2,1.0,0.8797300373001641,0.21632226580980027
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,3,4.0,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,"pop, which removes the head, or least recently inserted node from the stack. push, which inserts a new node at the head of the stack.",5.0,5,5.0,1.3193822539776219,0.21512597104333053
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,5,5.0,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,the push function and the pop function.,5.0,4,4.5,0.7832993392789842,0.6948826958929035
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,4,4.5,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,push - puts an element on the stack pop- takes an element off the stack,5.0,1,3.0,1.206539256527834,0.2930713874296893
12.7,What are the main operations associated with a stack?,push and pop,push  and pop.,5.0,4,4.5,0.6915363141202018,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,1,3.0,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,push and pop.,5.0,2,3.5,0.6915363141202018,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,"push and pop. push adds an element to the stack, while pop removes the top element from a stack.",5.0,1,3.0,1.0412639656915528,0.5535717422726376
12.7,What are the main operations associated with a stack?,push and pop,pop and push,5.0,1,3.0,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,"push,pop,search,isempty",4.0,5,4.5,inf,0.5088219845470037
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,2,3.5,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,"push, pop, isempty, isfull  maybe list to show all elements or an operation to count how many elements in the stack.",4.5,5,4.75,1.309224108224475,0.2277023818857779
12.7,What are the main operations associated with a stack?,push and pop,"pop, push",5.0,2,3.5,0.6382778582893153,0.9326656140927992
12.7,What are the main operations associated with a stack?,push and pop,"isempty, push and pop, along with usually,",5.0,1,3.0,0.8998032110861758,0.44743419348712166
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,0,2.5,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,push and pop. push puts objects into the stack and pop takes them out following the first in last out rule.,5.0,1,3.0,1.0975251606987875,0.539579543862029
12.7,What are the main operations associated with a stack?,push and pop,"the main operations in a stack are push and pop. push adds an item to the top of the stack, pop removes the top item from the stack.",5.0,3,4.0,1.1401721304325083,0.43025824031989757
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,2,3.5,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,"push, which adds an item to the top of the stack, and pop, which takes the first item off the top to the stack",5.0,3,4.0,1.3130945949974542,0.256904911084643
12.7,What are the main operations associated with a stack?,push and pop,"the main functions defined for a stack are push, which puts an element on the top of the stack, and pop, which removes an item from the top.",5.0,3,4.0,1.3161097264474937,0.256197901267511
12.7,What are the main operations associated with a stack?,push and pop,push() pop() full() isempty(),4.5,1,2.75,inf,0.4591967294832673
12.7,What are the main operations associated with a stack?,push and pop,pop and push to remove an element and to insert an element,5.0,4,4.5,0.97250499989771,0.457996421511461
12.7,What are the main operations associated with a stack?,push and pop,"push, pop",5.0,1,3.0,0.6382778582893153,0.9326656140927992
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,3,4.0,0.0,1.0000000000000002
12.7,What are the main operations associated with a stack?,push and pop,push - add an element to the top of the stack pop - remove the top element from the stack,5.0,2,3.5,1.1285961578353985,0.2769890452794089
12.7,What are the main operations associated with a stack?,push and pop,push and pop,5.0,0,2.5,0.0,1.0000000000000002
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",when you traverse a tree of any size you will visit each node three times.  its on the order of 3n or o(n) running time.,5.0,1,3.0,0.960874075985992,0.2318919698124075
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","the euler tour traversal of a tree begins at the root and visits each node in the tree from the left, then bottom, then right sides.",5.0,4,4.5,0.7629988603132829,0.33612093256290004
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",where you visit the in order according to its data value.,2.5,0,1.25,0.9858770294408813,0.07572840607658499
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","it is a tree that shows how it functions. it contains parents, children, siblings, ancestors and descendents. the use of tree type algorithm is also an alternative sorting algorithm.",0.0,0,0.0,1.0787940892035586,0.0792837840640351
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","start from the root, circle around the _whole_ ""tree"", naming each node as you see it.",5.0,3,4.0,0.7078921447731504,0.31561025281763894
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",it is where you visit the parent then you vistit the children,0.0,3,1.5,0.8765036753545434,0.109741964216956
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","to start from the root , traveling left and visiting ever child along the way till you return to the root from the right.",4.0,0,2.0,0.8232723924384059,0.333661398826718
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","traversing a tree down to it's terminal child and then all of it's siblings, then it traverses up the terminal child's parent and all of it's siblings (repeating the first step if those siblings have children) until the root node has been visited.",4.0,1,2.5,1.0449249557828264,0.08193339655829315
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",the euler tour traversal of a tree the function that iteratively keeps track of the pointer on each node.,1.5,4,2.75,0.906756380337677,0.16760602690872622
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","you travel the outside edge of the tree, clockwise, while naming each node.",4.5,4,4.25,0.8636208448612576,0.145296191950206
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",children to root,0.0,4,2.0,1.3129052323445762,0.12487286580547755
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",go to the bottom of the left sub tree and visit the parent and then its children,2.0,3,2.5,0.9522896942552981,0.1495121428025381
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",the euler tour traverses through the tree in a rubber-band style shape.,3.5,3,3.25,0.926507085022961,0.07223769419279708
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","the euler tour traversal of a tree is a specific way of navigating a tree that involves following the tree starting at the very top and moving along the left side of the tree first, cupping in to visit the parents of children nodes.  it allows for each node to be visited from the left, the right and the bottom.  the euler tour first progresses to a left child if there is one, then progresses to it's parent, then it's next child, then it's parent's parent.",5.0,5,5.0,0.8799418582442722,0.26538044500989655
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",it runs through the parents and the children in order,2.5,2,2.25,0.9382098461191841,0.0672931578390486
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","it starts node on the left of the root and then proceeds to visits each node in a left to right order, visits the root, and then proceeds to repeat the previous step on the right side of the tree.",2.5,4,3.25,0.8295678541823083,0.2776173016078232
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","travel from the root to the farthest left child backup, travel the leftmost children in the right side repeat until reaching the rightmost child.",3.5,2,2.75,0.8810205141778755,0.2078213871343851
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","has preorder, in order, and postorder of a tree.  preorder = puts the parent node in front of the child node(s).  in order = puts the parent node between the left child and right child node(s).  postorder = puts the parent node after the child node(s).",2.5,5,3.75,0.9229589038387778,0.17315126900587244
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","the euler traveral is when you go through a tree looking for nodes to put in the order of left, root, right. like inorder traversal.",2.5,4,3.25,0.9171166133891593,0.17560412455486976
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","an euler traversal is a traversal that begins with the root, and travels around the outside of the tree.  each element in the tree is visited 3 times.  from the left, from the bottom and from the right.",5.0,1,3.0,0.5814628529481423,0.532387792256367
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",euler tour traversal of a tree traverses down each branch straight to one leaf then starts again at the root and repeats until all elements have been traversed.,4.0,2,3.0,1.0673769201985737,0.09411985640290652
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","the euler tour visits every node in a tree, starting with the root and working around the tree counterclockwise. in-order, post-order, and pre-order traversals can be seen as variations of the euler tour traversal.",4.0,3,3.5,0.6822255731063671,0.24913051778410458
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",not answered,0.0,0,0.0,1.2720712705824966,0.0
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",to traverse going down to the left then go to the right of last children and back to the top.. kind of like going around the tree,5.0,4,4.5,0.86259112489227,0.1931694652007729
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","you recursively visit every node on the list. you visit the node from the left, the bottom, and from the right.",5.0,4,4.5,0.7036775750766028,0.34524909792203307
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.","the euler tour is a way to traverse a tree where you come into contact with each node three times, from the left, from the right, and from the bottom",5.0,1,3.0,0.5023122903336522,0.5497379941911078
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",traversing a tree level by level,0.0,1,0.5,1.259669446661352,0.038378862973363785
12.8,What is the Euler tour traversal of a tree?,"a walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",the euler traversal through the tree in a rubber band style shape.,3.5,5,4.25,0.9607480221520937,0.07907115536376236
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if root, set root to null else if deleting right leaf, set rightptr of parent node to null else if deleting left leaf, set leftptr of parent node to null else if deleting a left or right subtree child node, set the max leaf child in the left subtree as the new child node.",4.5,5,4.75,0.9150994301902047,0.28587428946205845
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","traverse the tree and find the node, if the node has no children, simply delete it; otherwise set the node's data equal to the data of one of its children then set the pointer for that child to null.",3.0,2,2.5,0.8260246657749891,0.3489045847614548
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",first attaching the elements from the node to be deleting to alternate nodes and then deleting that node.    delete node;,3.0,1,2.0,0.7949663912073719,0.31489390852560933
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if you delete a node from a tree, you have to link that nodes parents to the children of that node.",2.5,3,2.75,0.8885402743693762,0.24594298746463275
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","must delete the information that the node contains (to free up memory/ ""garbage collect"") and also delete the pointer (in that node's ""parent"") that points to the node you wish to delete.",0.5,3,1.75,0.8789398866766109,0.20452910907312177
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",you replace the node with the largest element of its left subtree or replace it with the smallest element of the right subtree.,5.0,4,4.5,0.5553704523619043,0.613366111651674
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","you traverse the tree till you find the node you are wanting to delete.  if the node has no children you delete it.  if the node has children, before you delete, you find the left-most of its children and attach it to the root then you can delete the node.",3.5,5,4.25,0.7752617858544265,0.2887515076786053
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",link the to-be-deleted's left child to the to-be-deleted's parent's left child pointer.,3.5,1,2.25,0.9490097485819454,0.0861529135810418
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",the way you delete a node from a binary search tree is first you have take the root and then see the nodes that are coming from the root. and delete the nodes and set the root to null.,0.0,1,0.5,0.7861010995488094,0.203091719583836
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",you remove the element from the tree and move the next highest element from the left into its place.,5.0,3,4.0,0.7264120929304032,0.25876211513541664
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",delete node;,0.0,4,2.0,1.3139469688297702,0.26114457909275685
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","the deletion of a node depends upon if it has children and if it is an avl binary search tree. assuming it is not an avl tree, and the node being deleted has no children, you just set its pointer to null. if it has a left child or a right child exclusively, that child replaces the deleted node, if it has two children, the left most child of the right sub tree (or right most child of the left subtree)will replace it",5.0,4,4.5,0.819542615528547,0.3145466995776864
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if the node is a leaf, just set it's parent's pointer to null and delete it, if it has a single child, set the parent's pointer to the child and delete; if it has two children, set the node to one of the middle children and remove that child from its previous position as a leaf (rightmost child of the left subtree or leftmost child of the right subtree).",5.0,3,4.0,0.7905684153952045,0.36570077345450974
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","in a binary search tree, you must first establish a proper replacement for the node you are about to delete, usually a child from the soon to be deleted node.  once that replacement node has been found, you simply reassign it to where the node that is going to be deleted is.  after the deleted node has been usurped, you remove the deleted node from memory so it may be used again.",4.0,0,2.0,0.877580188217345,0.26535341799842843
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",it all depends on where the node is located. if its a child it can just be deleted but for a node inside the tree it must be replaced with another node that works in its place.,3.0,2,2.5,0.8017343186668935,0.34691560223503787
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if the node has no children, delete it right away, otherwise, put either the furthest right node on the left side or the furthest left node on the right side in that place and perform a the above on that node to guarantee that it's children get handled properly.",5.0,1,3.0,0.7427394442872672,0.3211454864911346
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",create a temp node  set temp's values to the node after head  or null in the case of only head node in the list.   set head equal to temp. delete temp,0.0,2,1.0,0.9234395436133239,0.1723322243739127
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","by searching down the tree until you find the node, and replacing the link to that node with the greatest child node on the left subtree or the least child node on the right subtree.",5.0,5,5.0,0.6842027124077538,0.5328670553811586
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","set the nodes to null, where that it doesn't point to anything, and the use the delete opertator to clear space from memory.",0.0,3,1.5,0.815836754984214,0.10437915643151464
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","you must first traverse the tree to find the appropriate value.  then you must make sure that the node is a leaf node.  if it is, then you can delete the pointer to that specific node.",1.5,1,1.25,0.8615369630320898,0.30287853886525073
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if the node is a leaf, you set it's parent's pointer to null. if the node is in the tree you must replace the node with one in the tree: either the largest in the left of the tree or the smallest in the right of the tree. this can be done recursively if needed.",5.0,5,5.0,0.7715587440963791,0.3349390021399008
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if the node is a leaf it can simply be deallocated/deleted from memory, and its parent's reference to it changed to null. if the node has a single child, the pointer to it should be made to point to its child before deleting the node. should the node have two children, the easiest solution may be to copy the node's entire subtree to a new array or tree, delete the node and all descendants, then add the elements taken from the subtree back into the main tree.",4.0,4,4.0,0.763675077859422,0.47033205324827754
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",not answered,0.0,1,0.5,1.2698908684383656,0.0
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",you cannot delete a node because that can cause a node to have more than 2 children,0.0,2,1.0,1.064845234875856,0.2024722853204831
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","you search the tree for the node using recursion. when you find the node, you determine whether it is a leaf or a internal node. if it is a leaf, you just delete it and set the parent pointer to that node to null. if it is a  node, you replace the node with either of the children nodes.",3.5,4,3.75,0.7944680291543078,0.3946812038985339
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","to delete the node, you would have to link the children nodes that are connected to the node to be deleted to the remaining nodes of the tree in such a way that nodes on the right of the parent node are larger than the parent and nodes on the left of the parent node are smaller",3.0,4,3.5,0.8218336738915734,0.2766803081364514
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).","if it has no children, you just delete it. if it only has one child, just replace the node with whichever child it has. if it has both children, replace it with one of its children, and send the other child down along the other side of the new node.",3.5,3,3.25,0.8203681692351056,0.26283640539030106
12.9,How do you delete a node from a binary search tree?,"find the node, then replace it with the leftmost node from its right subtree (or the rightmost node from its left subtree).",pointer to the child and delete it has 2 children set the node to the child and delete it. the node to th middle will then take its place,2.0,1,1.5,0.7849988311648981,0.27244967876178217
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,log(n) where n is the number of nodes.,4.5,2,3.25,0.9950007204840183,0.1425291337677821
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,log(n) steps,4.5,5,4.75,1.2773990341359465,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,the number of levels and the height of the tree,5.0,4,4.5,0.5434965871899794,0.7175847368047871
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,it is the same as the height of the tree.,5.0,2,3.5,0.5998540481174627,0.7339960271567079
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,"given n elements, it would take n/2 steps to find the search criteria.",0.0,3,1.5,1.1180181147504051,0.04376318957352677
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,log n,4.5,5,4.75,1.339295266577358,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,depends on the location of the node you are looking for. if it is the root it is one step.  else if it is smaller than the current you are on node you go to the left.  if it is larger than the current node you are on go to the right.,0.0,3,1.5,1.0302828588354866,0.13308914789060702
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,2^n where n is the # of levels the binary tree has,0.0,3,1.5,1.0151384675678385,0.34945132758040875
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,the number of steps to search a node is the function n-1.,2.5,3,2.75,0.9610289765608413,0.17851563597049303
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,"it would take n/2 elements, given n.",0.0,1,0.5,1.2211771741202062,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,log(n),4.5,3,3.75,inf,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,o(log n),4.5,2,3.25,inf,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,o( log (n) ),4.5,4,4.25,1.3214481393249793,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,"if the binary search tree is constructed efficiently, best case scenario is o(log n) time.  where n is the number of items in the tree.  if the binary search tree is constructed poorly, with for instance the root of the tree being 1, and progressing downwards and to the right its children are each more than the last: you have a one-way linear linked list.  that worse case scenario would be a full traversal at o(n) time. where n is the number of items in the tree.",5.0,3,4.0,1.059340994151342,0.3534025097529596
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,"n, n being the number of nodes.",2.5,1,1.75,0.9602940247840042,0.15411989182311492
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,"depending on the way that the tree is ordered, it could be anywhere between log(n) and n steps.",5.0,4,4.5,1.0280162352360611,0.17560365720834614
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,log(n),4.5,3,3.75,inf,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,"worst case scenario = the number of levels of the tree, ie: the node at the farthest position from the root node.  best case = 1 step if its the root node.",5.0,3,4.0,0.9622519936043068,0.26116270743180403
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,3 steps at most.  there are 3 cases.,0.0,4,2.0,1.2573880957975785,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,log(n)    where n equals the total number of nodes in the tree.,4.5,1,2.75,0.9517428691819024,0.27153839824707665
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,the same number of steps as the number of levels or generations in the tree,5.0,1,3.0,0.9314640670709105,0.2985997738562495
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,to find a node in a binary search tree takes at most the same number of steps as there are levels of the tree.,5.0,4,4.5,1.0952364026245534,0.3134945939059831
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,"three steps visit the root node, then go to right subtree, after visiting right subtree visit left subtree",0.0,4,2.0,1.1472898241068479,0.026734519804256104
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,log n,4.5,1,2.75,1.339295266577358,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,( n(n-1) ) / 2,0.0,2,1.0,1.323410090135408,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,2n-1,0.0,2,1.0,inf,0.0
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,"it takes at most h steps, where h is the height of the tree.",5.0,2,3.5,0.8822346000587802,0.5075781161631224
12.11,How many steps does it take to search a node in a binary search tree?,the height of the tree.,it depends on the install search tree then from there for whatever the case is the it repeats it back along the case of the primary node,0.0,0,0.0,0.9946857785095463,0.23410243154469784
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,we can join two strings using the + operator in python or strcat() in c.,5.0,2,3.5,0.5781222730221978,0.4593984456205807
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,concatenation means joining two strings using functions like strcat() or +.,4.0,4,4.0,0.7752182714702115,0.4382951696671342
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,we use + in python and strcat() in c to merge two strings.,5.0,0,2.5,0.7946617971850692,0.36182600452288605
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,"strings can be joined using strcat() in c, and + in javascript.",4.0,3,3.5,0.816539839966298,0.4663153149627983
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,adding two strings together is called concatenation.,4.0,5,4.5,1.1756841122140567,0.08353985100457618
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,"in c, strcat() joins two strings, while python uses +.",4.0,3,3.5,1.0065389692165732,0.3119305013353597
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,"to concatenate, we use the + operator in python.",5.0,3,4.0,0.8769528891650172,0.21599753483447098
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,"strcat() is used in c, and + in javascript for joining strings.",5.0,0,2.5,0.9638044893811413,0.4207092773828667
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,string concatenation means putting two strings together.,4.0,1,2.5,1.1654383454811104,0.07505844755857087
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,#name?,4.5,4,4.25,inf,0.0
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,we use strcat() in c and + in python to append strings.,5.0,3,4.0,0.7836926760924767,0.35579557129965245
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,concatenation means merging two text values into one.,4.0,3,3.5,1.2224796140287872,0.0
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,"in c++, we can use + or append() for string joining.",4.0,5,4.5,0.8728324306831552,0.06728415947299404
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,strcat() in c is used for appending two character arrays.,5.0,5,5.0,0.9692641826444761,0.1648662589945854
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,strings can be joined with + or strcat().,4.0,5,4.5,0.9661643282043699,0.2658515855496651
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,string merging is done using + in java and python.,5.0,1,3.0,0.8989140639473787,0.19883851227324809
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,the join() method in python helps with concatenation too.,4.5,3,3.75,0.9891988848539668,0.10503605466580945
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,string addition is commonly done using +.,5.0,1,3.0,1.1640802563706314,0.05688359123329617
13.1,How do you concatenate two strings?,strings are concatenated using functions like strcat() in c or + operator in languages like python and javascript.,"in java, concat() is used to append strings.",4.0,5,4.5,1.0478733146863182,0.1203235884109059
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",accessing an invalid index causes an error or undefined behavior.,5.0,3,4.0,0.5385232368670879,0.7329356730066918
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","if you try to access an out-of-range index, the program may crash.",5.0,2,3.5,0.9663629123681989,0.13863855692354735
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","some languages throw an error, while others may return garbage values.",5.0,1,3.0,1.1144610400782728,0.13266905620623481
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",out-of-bound access can lead to segmentation faults in c/c++.,5.0,1,3.0,1.1121632770099104,0.017257441395244957
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",python raises an indexerror when accessing an invalid index.,5.0,3,4.0,0.8957382749967828,0.39794428660043674
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","in c, accessing an invalid index may return garbage values or crash the program.",5.0,0,2.5,0.6179037273730674,0.38024284886971027
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",it can cause runtime errors in some programming languages.,5.0,0,2.5,1.011714006713237,0.10521122567596757
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",accessing an out-of-range index can lead to memory corruption.,4.0,4,4.0,0.9049209612795949,0.24332778022949159
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",java throws an arrayindexoutofboundsexception if an index is out of range.,5.0,0,2.5,0.9717261820876854,0.18213108977579773
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","if an array index is accessed incorrectly, the output is unpredictable.",5.0,2,3.5,0.9107392990263122,0.1508577384913467
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","in languages like c, accessing an invalid index might not give an error immediately.",5.0,0,2.5,0.6132951948086649,0.4352064487229114
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",python does not allow accessing elements beyond the array size and throws an error.,4.5,2,3.25,0.9844529770516827,0.25024394006915357
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","if you access an out-of-bound index, the result depends on the programming language.",4.5,4,4.25,0.768785269503304,0.3413000442086454
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","some languages check bounds and prevent invalid access, while others do not.",4.5,2,3.25,1.1648597994152923,0.09380128489033825
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",out-of-bounds access can lead to security vulnerabilities in c/c++.,5.0,4,4.5,1.1273990730818877,0.017393755386890187
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",trying to access an index outside the range results in undefined behavior in c.,4.0,0,2.0,0.692420155410639,0.4425314685156898
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",some programming languages allow silent memory access errors.,4.0,4,4.0,1.170591464616949,0.08653122395911156
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","if the index is too high, it leads to an array access violation.",4.5,3,3.75,0.917814261858315,0.13350484259628745
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.",index out of bounds errors help catch programming mistakes early.,4.5,0,2.25,1.0555782294197127,0.14068428116542608
13.2,What happens if you access an index outside the array’s range?,"accessing an invalid index results in an error or undefined behavior, depending on the programming language.","if the index is negative or too large, the program might fail.",4.0,2,3.0,0.9514013436418746,0.11114824137447632
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays provide fast access to elements using indexing.,5.0,2,3.5,0.805622541838428,0.34368478268954217
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.","they store elements in contiguous memory, which improves cache performance.",5.0,0,2.5,1.119063905137851,0.2048024317799607
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays make it easy to iterate through elements using loops.,4.5,1,2.75,1.0592885436233404,0.11785374655301825
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",they allow storing multiple values of the same type in an organized way.,4.0,1,2.5,1.1442800477885202,0.07894182375904814
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",using arrays reduces the overhead of managing multiple variables.,5.0,1,3.0,1.0312366604101046,0.1968568928082547
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays support efficient searching and sorting algorithms.,5.0,0,2.5,1.01119404886878,0.20288186112581919
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",the memory allocation of arrays is predictable and sequential.,4.5,0,2.25,0.9989857052956268,0.13155885072264847
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",they allow random access to elements in o(1) time.,5.0,2,3.5,1.0103869690441036,0.2756483083070086
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays provide a simple way to store and retrieve large amounts of data.,4.0,5,4.5,1.0977333417509751,0.08549352189244418
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",they are easy to implement and use compared to linked lists.,5.0,4,4.5,1.1008529290746065,0.13183343563070266
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays help in implementing data structures like stacks and queues.,4.0,2,3.0,1.0970209354391267,0.07192173081889916
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",the use of arrays minimizes the need for dynamic memory allocation.,4.5,0,2.25,0.7096537380758238,0.2109453986082657
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays have less memory overhead compared to linked lists.,4.0,1,2.5,1.0101120558623709,0.2685303395693284
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",they allow efficient traversal using loops or recursion.,5.0,5,5.0,0.9381412478795245,0.3301827963619386
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays use less memory per element compared to linked lists.,4.0,1,2.5,0.8980576662320295,0.20682760065195066
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",they enable easy implementation of mathematical operations on datasets.,5.0,1,3.0,1.1844651148269578,0.0
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays are useful for implementing matrices and 2d data structures.,5.0,2,3.5,1.007252008609477,0.09968530599670625
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",the indexing system makes accessing elements straightforward.,5.0,5,5.0,1.2105552844847867,0.041572473732469466
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays can be used to efficiently store and process large datasets.,5.0,2,3.5,1.0401739203995308,0.10235699060166523
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",sorting algorithms like quicksort and mergesort work efficiently with arrays.,4.0,5,4.5,1.2049019947396185,0.06858904654581315
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays enable efficient memory management in embedded systems.,5.0,4,4.5,0.8053317155462876,0.2023672426969599
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",they help optimize performance in computational tasks.,5.0,4,4.5,1.165446312524204,0.0
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",arrays reduce the complexity of handling multiple related variables.,5.0,1,3.0,1.0070107980982368,0.18761007773828386
13.3,What are the advantages of using an array?,"arrays allow efficient access to elements, reduce overhead, and use contiguous memory for fast traversal.",they make it easy to apply batch processing on data.,4.0,0,2.0,1.213962403484092,0.01509179253590482
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram is when two words have the same letters but in different orders. you can check by sorting them and comparing.,5.0,3,4.0,0.5033844213301545,0.5409183787648526
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,two strings are anagrams if they contain the same letters but arranged differently. sorting helps verify this.,5.0,1,3.0,0.7485631203806355,0.3660031226103131
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram means two words have identical letters but shuffled. sort them and compare to check.,4.0,3,3.5,0.8687957272336929,0.17227390920512314
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,"if two words use the same letters but in different ways, they are anagrams. we sort and compare them.",5.0,0,2.5,0.818629505802052,0.2822802423910995
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram has the same letters in a different order. sorting is one way to check.,5.0,5,5.0,0.6894170590356876,0.3365165629356372
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram is when letters of one word are rearranged to form another. we can check using sorting or counting.,5.0,4,4.5,0.8454214464636461,0.18216152086062562
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,two strings are anagrams if their letter counts match. sorting or using frequency arrays helps confirm this.,4.5,4,4.25,0.9595260627673048,0.24513114489079108
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram consists of words with the same characters. sorting and comparing them determines if they are anagrams.,5.0,2,3.5,0.731359249576506,0.4643771493044943
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,"if a word’s letters can be rearranged to form another word, it’s an anagram. we check by sorting and comparing.",5.0,3,4.0,1.0400913765796789,0.19879180933196705
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram is a word formed by rearranging another word’s letters. sorting helps verify it.,0.0,4,2.0,0.9784015459545026,0.14189840384989172
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,two words are anagrams if they have identical characters in different orders. sorting and comparing works.,0.0,5,2.5,0.7489741523001778,0.47279463159090546
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram occurs when two strings share the same letters. checking character counts or sorting confirms this.,0.0,1,0.5,0.6465690616269504,0.3429733825143913
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram is when two words can be formed from the same letters. we can sort or use frequency counts to check.,0.0,3,1.5,0.7698586501291136,0.2033835697008678
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram is a word that can be rearranged to form another. sorting them both and checking works.,0.0,2,1.0,0.8068192996395931,0.2744478876789242
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,two words are anagrams if rearranging one results in the other. sorting and comparing helps.,0.0,2,1.0,0.8391358118425271,0.29954807125036526
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,a word is an anagram if another word has its same letters. we can check by sorting both words.,0.0,2,1.0,0.7962312311433234,0.22272086000946473
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram means two words contain the same letters. checking frequency of letters or sorting confirms it.,0.0,3,1.5,0.754690197076379,0.269831008915336
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram has identical characters but in different orders. sorting and comparing proves it.,3.0,1,2.0,0.7430065017628906,0.46383605759606344
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,an anagram consists of words made from the same letters. sorting them both makes checking easy.,2.0,4,3.0,0.7279059888346745,0.28685791894087154
13.4,What is an anagram? How do you check if two strings are anagrams?,an anagram is when two strings contain the same characters in different orders. sorting both strings and comparing them checks for anagrams.,"if the letters in two words can be rearranged to match each other, they are anagrams. sorting can confirm.",1.0,2,1.5,0.9082160120802907,0.17881495710723813
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using a hashmap (unordered_map in c++ or dictionary in python) to store character counts.,3.5,1,2.25,1.0028502640722992,0.18541994568354853
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using an array of size 256 (for ascii characters) and updating counts.,0.0,3,1.5,0.8621417034154608,0.13719200282961794
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,"using a set (which only stores unique elements, losing frequency data).",3.0,1,2.0,1.1224912972728258,0.062028138432106535
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using a counter from python's collections module.,4.0,3,3.5,1.1641037891693502,0.06985853339129171
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using an array of size 26 but input string contains non-alphabetic characters.,1.0,3,2.0,0.8417875117192893,0.13560020250104204
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using a counter from python's collections module,2.0,3,2.5,1.155379787203775,0.06985853339129171
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,"counting frequency without storing results, just printing while iterating.",1.0,4,2.5,1.1970065036182704,0.0
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,sorting the string and then counting consecutive occurrences.,4.0,1,2.5,1.1944760955517864,0.16217271139239522
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,sorting the string and assuming adjacent duplicates represent correct counts without checking.,1.0,1,1.0,1.175383350680175,0.0
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using stl map in c++ to store frequencies in a sorted manner.,5.0,2,3.5,0.9959215178538837,0.20819188461637367
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,"using recursion without memoization, leading to redundant computations.",1.0,1,1.0,1.127974102148091,0.08010223535825468
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using multiset in c++ and iterating over unique characters.,3.0,3,3.0,1.133084095564787,0.06252145434702663
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,"using a stack instead of a hashmap, losing count when popping elements.",2.0,2,2.0,0.9808381072904716,0.20368626189905528
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,"using a list of tuples (char, count) and updating when a character repeats.",1.0,4,2.5,1.138855795203464,0.29295802093177237
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using a queue that removes elements and loses track of frequency.,4.0,0,2.0,1.1489264863117052,0.08120652292678852
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using bitwise operations (for lowercase a-z only) and maintaining a count array.,0.0,1,0.5,1.0105052372401253,0.22705387092441723
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using a trie (useful for frequency-based prefix queries too).,4.0,4,4.0,1.1381896529845645,0.053671871394744546
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using sql queries with group by (if dealing with stored data).,4.0,4,4.0,1.1436534842202084,0.0543537397853326
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using floating-point numbers to store frequency counts (not meaningful).,0.0,1,0.5,1.0840131047621948,0.0732980322592401
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,using a hash map or an array to count occurrences of each character.,0.0,2,1.0,0.0,1.0
13.5,How do you count the frequency of each character in a string? ,using a hash map or an array to count occurrences of each character.,counting frequency by manually checking each character one-by-one without storing results.,2.0,5,3.5,1.0659070227103666,0.12549772238507967
13.6,What is the time complexity of quicksort in the average case?,o(n log n),expected o(n log n),0.0,4,2.0,0.7112923811702876,0.4926495052659866
13.6,What is the time complexity of quicksort in the average case?,o(n log n),theta(n log n),1.0,2,1.5,0.0,0.5049747892580183
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n) comparisons,3.0,1,2.0,0.6995339843052383,0.547805226018825
13.6,What is the time complexity of quicksort in the average case?,o(n log n),expected o(n log n),4.0,3,3.5,0.7112923811702876,0.4926495052659866
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n) in randomized quicksort,4.0,2,3.0,0.8835090850932826,0.37642225760927517
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n) in randomized quicksort,2.0,3,2.5,0.8835090850932826,0.37642225760927517
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n) for distinct elements,2.0,5,3.5,1.0289827676785228,0.4406745877723008
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n) for most practical cases,2.0,4,3.0,1.107411393651964,0.3462829023396173
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n²),0.0,0,0.0,inf,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n),4.0,4,4.0,0.0,1.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n),3.0,3,3.0,inf,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(1),1.0,3,2.0,inf,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n³),1.0,0,0.5,inf,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n!),2.0,4,3.0,inf,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),requires o(n²) comparisons in the worst case,0.0,4,2.0,1.3530008603741006,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),binary search performs worse than linear search,1.0,4,2.5,1.3474826831274056,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),works only on unsorted data,2.0,4,3.0,1.295359418211588,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),the worst-case time complexity is o(√n),4.0,1,2.5,1.3360831691340724,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n),3.0,2,2.5,inf,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),linear time complexity: o(n),1.0,0,0.5,1.313652526543254,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),best-case scenario: o(n),4.0,3,3.5,inf,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),"if the list is already sorted, bubble sort takes o(n)",1.0,4,2.5,1.324886630034641,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),the optimal case for bubble sort is o(n),2.0,2,2.0,1.3380262589257204,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),"when no swaps are required, bubble sort runs in o(n)",0.0,4,2.0,1.3465675296187236,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),sorted input ensures o(n) complexity,2.0,1,1.5,1.3469361214477544,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),bubble sort stops early in o(n) when data is pre-sorted,4.0,0,2.0,1.3410667852848823,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),the best-case performance is linear in time: o(n),2.0,1,1.5,1.3498026118306317,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),a nearly sorted list makes bubble sort run in o(n),1.0,1,1.0,1.3307203783386043,0.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n),4.0,3,3.5,0.0,1.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n),4.0,3,3.5,0.0,1.0
13.6,What is the time complexity of quicksort in the average case?,o(n log n),o(n log n),2.0,3,2.5,0.0,1.0
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),o(log n),3.0,2,2.5,inf,1.0
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),theta(log n),4.0,1,2.5,inf,0.5049747892580183
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),big-o notation: o(log n),3.0,4,3.5,inf,0.43524401690554654
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),logarithmic time: o(log n),0.0,4,2.0,inf,0.4720399975325628
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),balanced bst search runs in o(log n) time,1.0,4,2.5,inf,0.31582286495354894
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),time complexity is logarithmic: o(log n),1.0,1,1.0,inf,0.3886438097106463
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),search operation takes o(log n) in the worst case,3.0,4,3.5,inf,0.34381189637574294
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),computational complexity: o(log n),1.0,2,1.5,inf,0.4232827516766186
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),binary search tree search requires o(log n) operations,0.0,4,2.0,inf,0.32109416890171616
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),"for n elements, search time is o(log n)",0.0,3,1.5,inf,0.4847400767638903
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),balanced bst ensures o(log n) lookup time,0.0,2,1.0,inf,0.29448523655740316
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),"using a height-balanced tree, search runs in o(log n)",2.0,3,2.5,inf,0.33152441664678606
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),recursive depth in search follows o(log n),4.0,3,3.5,inf,0.35535704494223197
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),"searching follows a divide-and-conquer pattern, giving o(log n)",4.0,1,2.5,inf,0.26328981387958145
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),a logarithmic bound of o(log n),1.0,3,2.0,inf,0.38411878320399145
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),each step halves the search space: o(log n),1.0,2,1.5,inf,0.3694335348197293
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),mathematically derived as o(log n),2.0,0,1.0,inf,0.34847642404157086
13.7,What is the worst-case time complexity of searching in a balanced binary search tree (BST)?,o(log n),a perfect bst search takes o(log n),3.0,0,1.5,inf,0.32368589614528415
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,to manage cpu execution order for processes efficiently.,1.0,2,1.5,0.0,1.0000000000000002
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,scheduling decides which process gets cpu time.,5.0,3,4.0,1.0295423504255445,0.1521244985457595
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,it optimally allocates cpu time to processes.,4.0,1,2.5,1.0317960190616131,0.31744659868444647
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,a scheduler prioritizes and assigns cpu execution.,3.0,3,3.0,1.0825184872292377,0.24496029483821052
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,manages process execution through scheduling policies.,4.0,4,4.0,0.9388745512581191,0.09933463192565503
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,it ensures fair process execution by controlling cpu access.,5.0,3,4.0,0.8827738349989883,0.22765166239570406
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,determines the sequence of process execution.,3.0,5,4.0,1.1813425746888893,0.13722481500167502
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,handles task allocation to the cpu.,5.0,3,4.0,1.223951890884901,0.2079049011056668
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,maximizes cpu utilization via scheduling algorithms.,3.0,5,4.0,1.0435677424854692,0.13562904058905711
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,optimizes task execution by scheduling processes.,5.0,1,3.0,1.0364462628066418,0.2501057624320818
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,determines the sequence of process execution.,0.0,4,2.0,1.1813425746888893,0.13722481500167502
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,handles task allocation to the cpu.,3.0,2,2.5,1.223951890884901,0.2079049011056668
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,maximizes cpu utilization via scheduling algorithms.,1.0,2,1.5,1.0435677424854692,0.13562904058905711
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,optimizes task execution by scheduling processes.,2.0,4,3.0,1.0364462628066418,0.2501057624320818
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,ensures efficiency in process execution order.,5.0,1,3.0,0.9539059250725532,0.24225489720178173
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,cpu scheduling ensures smooth multitasking.,3.0,0,1.5,1.0589733598965798,0.1462268207802935
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,regulates process access to the cpu.,3.0,2,2.5,1.1852844567763838,0.21686999658051714
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,controls which process runs at a given time.,2.0,1,1.5,1.207557915840019,0.0
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,implements process prioritization for execution.,1.0,5,3.0,0.9860428901929548,0.1681366099484978
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,it selects ready processes for cpu execution.,1.0,0,0.5,0.6476172586058324,0.4675095569717481
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,ensures efficient cpu sharing among processes.,1.0,1,1.0,1.0516232578915214,0.2828287181758409
13.8,What is the main purpose of a scheduler in an operating system?,to manage cpu execution order for processes efficiently.,handles task execution sequencing in os.,3.0,1,2.0,0.9934438104267849,0.10234960904541704
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,4 bytes,4.0,3,3.5,0.0,1.0
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,an int in c takes 4 bytes of memory,0.0,2,1.0,0.9430477816398918,0.45433462646890543
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,the size of an int is 4 bytes,3.0,2,2.5,0.9169581347416255,0.49800087789309017
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,memory allocated for an int is 4 bytes,1.0,5,3.0,0.9580041792270254,0.4478134358601618
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,an int variable in c occupies 4 bytes,0.0,3,1.5,0.9415314778798654,0.39696076613986914
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,4 bytes (32 bits) is the standard size for an int,5.0,2,3.5,1.0052344152190846,0.29868833221592433
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,"in a 32-bit system, an int is stored in 4 bytes",1.0,0,0.5,0.9496969217581911,0.30140462495453163
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,a single int in c uses 4 bytes of storage,4.0,2,3.0,0.9346997714367679,0.3777693014953971
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,"typically, an int requires 4 bytes in memory",2.0,1,1.5,0.8993023590489243,0.3859101613675787
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,4 bytes is the typical size of an integer in c,1.0,1,1.0,1.0038401045634977,0.37768630194122627
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,an integer’s memory footprint is 4 bytes,3.0,0,1.5,0.8657628508584959,0.3878914756509346
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,a standard integer takes 4 bytes in c,2.0,3,2.5,0.8782857128664497,0.40801050258909677
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,the most common size of an int is 4 bytes,4.0,1,2.5,1.0115116005878884,0.37590900050578363
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,a signed or unsigned int in c occupies 4 bytes,4.0,1,2.5,1.0003063459557247,0.3017607506298888
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,c allocates 4 bytes for int variables,0.0,1,0.5,0.8888916531841071,0.40926008121906665
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,a fixed-size integer in c uses 4 bytes of memory,5.0,4,4.5,0.8637943705284253,0.3765935641702812
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,size of int depends on system architecture but is often 4 bytes,5.0,0,2.5,1.07300766793766,0.28316101062864907
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,a 32-bit integer is 4 bytes long,2.0,2,2.0,0.7386079094966068,0.33586478687641996
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,integer type storage size in c is 4 bytes,4.0,1,2.5,0.9657629026318415,0.40164340901270407
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,standard integer size in a 32-bit environment is 4 bytes,2.0,1,1.5,0.9528945951247701,0.2764860408600263
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,"on most platforms, an int variable takes up 4 bytes",1.0,5,3.0,1.0024576219452168,0.3042643428030525
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,4,5.0,1,3.0,0.6761887175368473,0.0
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,2 bytes,3.0,1,2.0,0.1800178250530858,1.0
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,8 bytes,5.0,0,2.5,0.21127143156092876,1.0
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,16 bytes,1.0,2,1.5,0.6761887175368473,0.5047274768011415
13.9,What is the size of an int data type in C (assuming a 32-bit system)?,4 bytes,depends on the compiler,4.0,2,3.0,1.264044005826692,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),o(n²),4.0,3,3.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),o(n log n),3.0,2,2.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),o(log n),3.0,4,3.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),o(1),3.0,2,2.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),o(n),2.0,2,2.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),best-case time complexity is o(n),3.0,4,3.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"when the list is already sorted, bubble sort takes o(n) time",3.0,5,4.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),bubble sort is o(n) when the input is sorted,3.0,2,2.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"for an already sorted list, bubble sort performs in o(n) time",3.0,5,4.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),best-case scenario results in linear time: o(n),2.0,0,1.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"if no swaps are needed, bubble sort runs in o(n) time",1.0,4,2.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),linear time complexity applies when bubble sort detects sorted data,3.0,0,1.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),bubble sort completes in o(n) if the array is initially sorted,1.0,3,2.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"for sorted input, bubble sort takes o(n) steps",3.0,3,3.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),bubble sort’s optimized case gives o(n) complexity,4.0,1,2.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"when swaps are not required, bubble sort operates in o(n) time",1.0,5,3.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"bubble sort terminates early in the best case, achieving o(n)",3.0,4,3.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"if the array is sorted, only one pass is required, making it o(n)",1.0,1,1.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"with an early exit condition, bubble sort becomes o(n)",5.0,3,4.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),sorted input ensures bubble sort finishes in o(n),0.0,3,1.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),o(n) complexity occurs when no swapping is required,3.0,2,2.5,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),bubble sort is efficient in the best case with o(n) complexity,2.0,2,2.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),"bubble sort detects a sorted array and runs in linear time, o(n)",5.0,3,4.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),a single pass without swaps results in o(n) complexity,5.0,3,4.0,inf,0.0
14.1,What is the best-case time complexity of Bubble Sort?,o(n),o(n) occurs if the array is sorted and the algorithm stops early,4.0,1,2.5,inf,0.0
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a process that runs indefinitely without stopping,3.0,1,2.0,1.1326247551071198,0.1026053078994715
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a system crash due to memory overflow,0.0,1,0.5,1.281386379306996,0.0
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a scheduling algorithm for managing processes,4.0,3,3.5,1.0922537032706805,0.15145502889530435
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",an error in process synchronization,3.0,5,4.0,1.1205760113505914,0.12899313454943875
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a deadlock occurs when processes are stuck waiting for each other,3.0,4,3.5,0.776845072030553,0.4398577809348513
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",two or more processes are blocked due to circular waiting,1.0,5,3.0,0.7399027955436194,0.3976282555431708
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a state where processes hold resources and wait for others indefinitely,1.0,4,2.5,0.8927407609415513,0.14407111319038074
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",deadlock happens when no process can proceed because of resource dependencies,2.0,4,3.0,1.0220698666419485,0.17602427266005452
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a set of blocked processes waiting for unavailable resources,3.0,0,1.5,0.9535402832572138,0.23513836953934097
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",deadlock is when processes wait indefinitely due to resource allocation conflicts,1.0,1,1.0,1.0081240816694264,0.1679652407611575
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",circular wait among processes leads to deadlock,4.0,0,2.0,1.1181936814439797,0.09332465594975971
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a scenario where processes are unable to progress due to mutual waiting,5.0,4,4.5,0.8827628604389367,0.2331727235008473
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",no process can continue as they are all waiting for each other’s resources,5.0,2,3.5,0.7573405110873066,0.31195090036761497
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a deadlock is when resource allocation results in a permanent hold-up,3.0,2,2.5,1.1255275491298031,0.10613712622493982
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",processes in deadlock cannot proceed because of a cyclic dependency,5.0,2,3.5,1.1289507796718345,0.08026796818046122
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",deadlock is a situation where processes can't access needed resources,4.0,1,2.5,0.9349620598421919,0.2380098544492749
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",an impasse where processes hold some resources while waiting for others,1.0,1,1.0,0.7944047476379555,0.24234460914849604
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a circular chain of resource requests causes deadlock,5.0,2,3.5,1.2062767750348207,0.11254248718427694
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",a system state where process execution is halted due to resource contention,4.0,1,2.5,0.981248335386202,0.20913086014668417
14.2,What is a deadlock in an operating system?,"a situation where two or more processes are stuck, each waiting for a resource held by another process",deadlock occurs when processes are in an unresolvable waiting state,5.0,5,5.0,0.9408076843825738,0.21929444028993822
14.3,What is the output of 5 / 2 in Python ,2.5,0,1.0,4,2.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,floating-point division gives 2.5,5.0,4,4.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,python 3 division always results in a float: 2.5,3.0,4,3.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,true division ensures 5 / 2 is 2.5,4.0,4,4.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,the result of 5 / 2 in python 3 is a float: 2.5,0.0,2,1.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,python 3 does not truncate integer division: 5 / 2 = 2.5,2.0,2,2.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,the division operator / produces 2.5 in python 3,1.0,3,2.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,"python 3 treats / as floating-point division, yielding 2.5",1.0,0,0.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,"integer division in python 3 is done using //, so 5 / 2 remains 2.5",3.0,2,2.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,"unlike python 2, python 3 division outputs 2.5",2.0,0,1.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2,2.0,5,3.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,3,1.0,4,2.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,1.5,4.0,2,3.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,5,1.0,1,1.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,0,2.0,1,1.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,python 3 rounds down to 2,2.0,5,3.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,integer division in python 3 defaults to whole numbers,4.0,1,2.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,the correct output is 5.0,2.0,0,1.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,python 3 returns none for integer division,4.0,2,3.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,5 / 2 raises an error in python 3,3.0,5,4.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,2.0,3,2.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,4.0,0,2.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,1.0,0,0.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,5.0,2,3.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,4.0,5,4.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,1.0,2,1.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,1.0,5,3.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,3.0,5,4.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,2.5,2.0,4,3.0,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,0,1.0,4,2.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,0,1.0,4,2.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,0,2.0,3,2.5,inf,0.0
14.3,What is the output of 5 / 2 in Python ,2.5,0,1.0,2,1.5,inf,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,stack,2.0,4,3.0,0.0,1.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,a stack follows lifo,2.0,1,1.5,0.696054524350329,0.39815045496029433
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,lifo structure: stack,0.0,4,2.0,0.0,0.44988570006256884
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,the last inserted item is removed first in a stack,5.0,2,3.5,1.2267045568676938,0.34114660601440927
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,a stack operates on a lifo principle,1.0,4,2.5,1.0390728854977558,0.3198566827765513
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,stacks are used in function call management,2.0,0,1.0,1.2551071490524375,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,stack supports push and pop operations,3.0,4,3.5,1.0610166805288896,0.3921551623836285
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,the topmost element is accessed first in a stack,3.0,1,2.0,1.214018445838317,0.33476726120883415
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,a stack retrieves elements in reverse order of insertion,4.0,4,4.0,1.1490498443891357,0.28589312306875314
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,common stack implementation: array or linked list,2.0,3,2.5,1.0909228276201082,0.3619877014912003
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,queue,4.0,3,3.5,1.2050624753551005,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,hash table,4.0,1,2.5,1.1923481275093692,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,heap,1.0,3,2.0,1.071987759797318,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,linked list,1.0,1,1.0,1.314118352928359,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,priority queue,3.0,1,2.0,1.2876671622316291,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,binary tree,1.0,4,2.5,1.2370814967037216,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,array,4.0,1,2.5,1.1866888951091403,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,graph,3.0,1,2.0,1.2546246869335298,0.0
14.4,Which data structure follows the Last-In-First-Out (LIFO) principle?,stack,trie,3.0,5,4.0,1.3294860025203676,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,terminates a process,2.0,3,2.5,1.300378804317269,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,creates multiple processes simultaneously,1.0,4,2.5,1.2748057011910088,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,only works in windows os,0.0,0,0.0,1.275425842056131,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,always returns -1,0.0,0,0.0,1.2953554838026484,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,kills the parent process,3.0,4,3.5,1.3127178076423687,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,allocates memory but doesn’t create a process,3.0,3,3.0,1.2741290829443304,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,runs the child process before the parent,0.0,2,1.0,1.308702633952904,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used for inter-process communication,5.0,1,3.0,0.9820721495329989,0.11934316291530539
14.5,What is the purpose of the static keyword in C?,used to declare static variables,modifies kernel memory directly,0.0,2,1.0,1.303362706482004,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,deletes the child process after execution,3.0,4,3.5,1.304287759600084,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,1.0,1,1.0,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,0.0,5,2.5,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,3.0,1,2.0,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,1.0,0,0.5,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,4.0,5,4.5,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,4.0,4,4.0,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,4.0,4,4.0,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,3.0,3,3.0,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used to declare static variables,4.0,4,4.0,0.0,1.0000000000000002
14.5,What is the purpose of the static keyword in C?,used to declare static variables,preserves variable value across function calls,2.0,4,3.0,1.2508874781431378,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,limits variable scope to the file (if used in global scope),2.0,2,2.0,1.0961814420225344,0.13353116436312404
14.5,What is the purpose of the static keyword in C?,used to declare static variables,retains variable value between function executions,4.0,3,3.5,1.2649989661903,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,default initialization to zero (if uninitialized),2.0,5,3.5,1.265488401372762,0.03876696782017677
14.5,What is the purpose of the static keyword in C?,used to declare static variables,prevents modification of a global variable outside its file,1.0,2,1.5,1.261213821803671,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,helps in memory efficiency by preventing frequent allocation,4.0,3,3.5,1.2984164051359608,0.0
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used in class members in c++ to share among all objects,1.0,2,1.5,1.1803265106659944,0.148865782084478
14.5,What is the purpose of the static keyword in C?,used to declare static variables,restricts function scope to a single file,2.0,0,1.0,1.2539239423260808,0.04334432101941259
14.5,What is the purpose of the static keyword in C?,used to declare static variables,used for defining constant class members in c++,5.0,2,3.5,1.097076297815532,0.13934920721237942
14.5,What is the purpose of the static keyword in C?,used to declare static variables,prevents modification of a global variable outside its file,2.0,1,1.5,1.261213821803671,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,donald knuth,3.0,4,3.5,0.0,1.0000000000000002
14.6,"Who is known as the ""father of algorithms""?",donald knuth,considered the father of modern algorithms,3.0,5,4.0,1.4067009636822267,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,the author of the art of computer programming,1.0,5,3.0,1.409745930093459,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,introduced asymptotic notation (big o),1.0,4,2.5,1.3642218103097212,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,developed many foundational algorithms,4.0,5,4.5,1.411520767874082,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,worked extensively on computational complexity,0.0,3,1.5,1.4013889687803052,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,introduced the analysis of algorithms,5.0,4,4.5,1.4074671985796985,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,defined many sorting and searching techniques,0.0,5,2.5,1.4039537304510736,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,popularized divide-and-conquer strategies,4.0,3,3.5,1.3964443312882167,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,developed the knuth-morris-pratt string search algorithm,3.0,3,3.0,1.4110745087657373,0.23854549991755206
14.6,"Who is known as the ""father of algorithms""?",donald knuth,created one of the first systematic algorithmic analysis,3.0,3,3.0,1.420884032879312,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,his work influences algorithm design today,4.0,4,4.0,1.3728629712021143,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,his books are used worldwide in cs education,2.0,4,3.0,1.366186473192997,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,known for rigorous algorithm efficiency analysis,1.0,4,2.5,1.3989012801222396,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,one of the most cited cs authors,2.0,3,2.5,1.3722253659560968,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,developed tex for typesetting algorithms,0.0,4,2.0,1.3283910080348749,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,his work shaped computational theory,4.0,0,2.0,1.3548438795487978,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,his book series is essential for understanding algorithms,1.0,4,2.5,1.4166592933685083,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,introduced structured programming principles,0.0,4,2.0,1.4166160965027748,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,alan turing,3.0,3,3.0,1.0416210460337436,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,tim berners-lee,4.0,1,2.5,0.9895892464890054,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,james gosling,4.0,2,3.0,1.1229627150375836,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,linus torvalds,1.0,3,2.0,1.1118131142058385,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,dennis ritchie,3.0,4,3.5,0.9087863482635876,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,bill gates,0.0,3,1.5,1.4035477895532666,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,steve jobs,3.0,2,2.5,1.1313101458675985,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,ada lovelace,3.0,5,4.0,1.1224495539417998,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,bjarne stroustrup,0.0,3,1.5,inf,0.0
14.6,"Who is known as the ""father of algorithms""?",donald knuth,jeff bezos,4.0,2,3.0,0.8949464537730965,0.0
14.7,Which language is primarily used for building Android applications?,java,java programming language,3.0,1,2.0,0.850388392004355,0.5844060061371773
14.7,Which language is primarily used for building Android applications?,java,java (jvm-based),2.0,4,3.0,0.0,0.4978430501015967
14.7,Which language is primarily used for building Android applications?,java,java (object-oriented),5.0,0,2.5,0.0,0.5531132526984669
14.7,Which language is primarily used for building Android applications?,java,java (developed by sun microsystems),4.0,4,4.0,0.8944537324706218,0.34526289908338487
14.7,Which language is primarily used for building Android applications?,java,java (used in android studio),1.0,5,3.0,0.852930547365821,0.3921230190050407
14.7,Which language is primarily used for building Android applications?,java,java (popular for mobile development),1.0,4,2.5,0.8698992388380224,0.36086522296655366
14.7,Which language is primarily used for building Android applications?,java,java (works with kotlin),1.0,4,2.5,0.6969030698852793,0.46842409709871713
14.7,Which language is primarily used for building Android applications?,java,java (platform-independent),4.0,2,3.0,0.0,0.4165992180712905
14.7,Which language is primarily used for building Android applications?,java,java (runs on dalvik vm),2.0,5,3.5,0.6834650805449537,0.3590132356069901
14.7,Which language is primarily used for building Android applications?,java,java (preferred by many android devs),1.0,3,2.0,1.0002810873776764,0.3206298087491686
14.7,Which language is primarily used for building Android applications?,java,java,1.0,3,2.0,0.0,1.0
14.7,Which language is primarily used for building Android applications?,java,none,5.0,2,3.5,1.4055052557368517,0.0
14.7,Which language is primarily used for building Android applications?,java,none,0.0,1,0.5,1.4055052557368517,0.0
14.7,Which language is primarily used for building Android applications?,java,python,4.0,3,3.5,1.3225802609612365,0.0
14.7,Which language is primarily used for building Android applications?,java,c++,1.0,0,0.5,inf,0.0
14.7,Which language is primarily used for building Android applications?,java,swift,0.0,4,2.0,1.398899415416771,0.0
14.7,Which language is primarily used for building Android applications?,java,c,4.0,4,4.0,1.3404666523674225,0.0
14.7,Which language is primarily used for building Android applications?,java,kotlin,2.0,5,3.5,inf,0.0
14.7,Which language is primarily used for building Android applications?,java,javascript,0.0,3,1.5,1.1538002937782585,0.0
14.7,Which language is primarily used for building Android applications?,java,typescript,5.0,2,3.5,1.3735360162986714,0.0
14.7,Which language is primarily used for building Android applications?,java,php,4.0,1,2.5,1.1325224356128047,0.0
14.7,Which language is primarily used for building Android applications?,java,ruby,3.0,2,2.5,1.2636636169398696,0.0
14.7,Which language is primarily used for building Android applications?,java,go,1.0,2,1.5,1.3766840257492705,0.0
14.7,Which language is primarily used for building Android applications?,java,perl,4.0,4,4.0,1.066622228095093,0.0
14.7,Which language is primarily used for building Android applications?,java,rust,0.0,3,1.5,1.3630226277402984,0.0
14.7,Which language is primarily used for building Android applications?,java,scala,1.0,0,0.5,1.2191451930057637,0.0
14.7,Which language is primarily used for building Android applications?,java,objective-c,3.0,3,3.0,inf,0.0
14.7,Which language is primarily used for building Android applications?,java,shell,1.0,4,2.5,1.3736217366416252,0.0
14.7,Which language is primarily used for building Android applications?,java,dart,4.0,0,2.0,1.3365636305414468,0.0
14.7,Which language is primarily used for building Android applications?,java,lua,4.0,5,4.5,1.1869550562942845,0.0
14.7,Which language is primarily used for building Android applications?,java,sql,1.0,1,1.0,1.1690881802717987,0.0
14.7,Which language is primarily used for building Android applications?,java,assembly,4.0,3,3.5,1.4052645540943132,0.0
14.8,What does SQL stand for?,structured query language,sql (database language),4.0,5,4.5,1.2584224085547278,0.2576069446869448
14.8,What does SQL stand for?,structured query language,sql (used for queries),3.0,4,3.5,1.3173902205281698,0.0
14.8,What does SQL stand for?,structured query language,sql (relational databases),2.0,0,1.0,1.2584224085547278,0.0
14.8,What does SQL stand for?,structured query language,sql (for crud operations),2.0,2,2.0,1.3159590527003437,0.0
14.8,What does SQL stand for?,structured query language,sql (standardized by ansi),1.0,0,0.5,1.3053102138449688,0.0
14.8,What does SQL stand for?,structured query language,sql (powerful for transactions),5.0,2,3.5,1.3173902205281698,0.0
14.8,What does SQL stand for?,structured query language,sql (used with mysql),1.0,3,2.0,1.304769592863178,0.0
14.8,What does SQL stand for?,structured query language,sql (includes select statements),5.0,5,5.0,1.2610454418694628,0.0
14.8,What does SQL stand for?,structured query language,sql (works with relational models),4.0,5,4.5,1.2509515086278193,0.0
14.8,What does SQL stand for?,structured query language,sql (common in data analysis),3.0,1,2.0,1.2941114223338126,0.0
14.8,What does SQL stand for?,structured query language,structured query language,1.0,0,0.5,0.0,1.0000000000000002
14.8,What does SQL stand for?,structured query language,structured query language,1.0,3,2.0,0.0,1.0000000000000002
14.8,What does SQL stand for?,structured query language,structured query language,1.0,3,2.0,0.0,1.0000000000000002
14.8,What does SQL stand for?,structured query language,sequential query language,5.0,0,2.5,0.43602107718725047,0.5756364382427943
14.8,What does SQL stand for?,structured query language,system query language,5.0,3,4.0,0.43254639135889594,0.6039592439097166
14.8,What does SQL stand for?,structured query language,server query language,2.0,2,2.0,0.45358977671370054,0.5386171182458883
14.8,What does SQL stand for?,structured query language,script query language,2.0,3,2.5,0.43833403544293464,0.5386171182458883
14.8,What does SQL stand for?,structured query language,super query language,2.0,0,1.0,0.44963298573445143,0.5793127725664373
14.8,What does SQL stand for?,structured query language,standard query logic,2.0,0,1.0,0.8515819207048516,0.27345503542089794
14.8,What does SQL stand for?,structured query language,smart query logic,1.0,1,1.0,0.8328789999487434,0.2574187997548019
14.8,What does SQL stand for?,structured query language,server query logic,4.0,1,2.5,0.8689024528280774,0.2574187997548019
14.8,What does SQL stand for?,structured query language,simple query language,2.0,5,3.5,0.39806243912610884,0.5826555275524494
14.8,What does SQL stand for?,structured query language,secure query language,2.0,4,3.0,0.41412114542648,0.5256149310392604
14.8,What does SQL stand for?,structured query language,syntax query language,1.0,5,3.0,0.41780429670414426,0.5616845960227876
14.8,What does SQL stand for?,structured query language,semantic query logic,1.0,0,0.5,0.8305896118611544,0.252169884871178
14.8,What does SQL stand for?,structured query language,static query language,0.0,1,0.5,0.4205922088331101,0.6843853450903061
14.8,What does SQL stand for?,structured query language,strong query language,2.0,3,2.5,0.43897650521200837,0.5256149310392604
14.8,What does SQL stand for?,structured query language,software query logic,4.0,3,3.5,0.8422301279390078,0.2947689639132505
14.8,What does SQL stand for?,structured query language,simple query logic,5.0,2,3.5,0.8133751152404858,0.27474568448315206
14.8,What does SQL stand for?,structured query language,symbolic query language,4.0,2,3.0,0.43537768471918864,0.5256149310392604
14.8,What does SQL stand for?,structured query language,solution query logic,2.0,2,2.0,0.8564361915065805,0.30126644614350145
14.8,What does SQL stand for?,structured query language,syntax query logic,1.0,4,2.5,0.7766742546719401,0.26658188646147685
14.9,Which of the following is a dynamically typed programming language?,python,python (interpreted language),3.0,3,3.0,0.0,0.4558208937240235
14.9,Which of the following is a dynamically typed programming language?,python,python (no need to declare types),1.0,3,2.0,0.9524031646569875,0.41564647427781826
14.9,Which of the following is a dynamically typed programming language?,python,python (dynamically typed),2.0,4,3.0,0.0,0.4366262711993463
14.9,Which of the following is a dynamically typed programming language?,python,python (used in ai),3.0,1,2.0,0.7062042679580339,0.46789361480590363
14.9,Which of the following is a dynamically typed programming language?,python,python (popular in data science),2.0,2,2.0,0.9336269390419032,0.37931996264537565
14.9,Which of the following is a dynamically typed programming language?,python,python (whitespace-sensitive),1.0,5,3.0,0.0,0.3802510814979356
14.9,Which of the following is a dynamically typed programming language?,python,python (uses indentation),1.0,2,1.5,0.0,0.42469039002630915
14.9,Which of the following is a dynamically typed programming language?,python,python (supports oop),1.0,5,3.0,0.0,0.4530423378323336
14.9,Which of the following is a dynamically typed programming language?,python,python (has an interactive shell),3.0,5,4.0,0.9131523908921252,0.36733025991182133
14.9,Which of the following is a dynamically typed programming language?,python,python (common for scripting),1.0,0,0.5,0.720788023506576,0.39963387798850775
14.9,Which of the following is a dynamically typed programming language?,python,python,5.0,5,5.0,0.0,1.0
14.9,Which of the following is a dynamically typed programming language?,python,python,1.0,5,3.0,0.0,1.0
14.9,Which of the following is a dynamically typed programming language?,python,python,4.0,0,2.0,0.0,1.0
14.9,Which of the following is a dynamically typed programming language?,python,java,5.0,4,4.5,1.3225802609612365,0.0
14.9,Which of the following is a dynamically typed programming language?,python,c,1.0,3,2.0,1.4155984928830234,0.0
14.9,Which of the following is a dynamically typed programming language?,python,c++,3.0,4,3.5,inf,0.0
14.9,Which of the following is a dynamically typed programming language?,python,rust,4.0,4,4.0,1.3780944012097571,0.0
14.9,Which of the following is a dynamically typed programming language?,python,swift,3.0,1,2.0,1.3922087236542542,0.0
14.9,Which of the following is a dynamically typed programming language?,python,go,4.0,5,4.5,1.4345047064366654,0.0
14.9,Which of the following is a dynamically typed programming language?,python,kotlin,2.0,4,3.0,inf,0.0
14.9,Which of the following is a dynamically typed programming language?,python,pascal,4.0,3,3.5,1.3341588115145935,0.0
14.9,Which of the following is a dynamically typed programming language?,python,typescript,1.0,3,2.0,1.362913069875445,0.0
14.9,Which of the following is a dynamically typed programming language?,python,c#,1.0,4,2.5,inf,0.0
14.9,Which of the following is a dynamically typed programming language?,python,assembly,2.0,3,2.5,1.3823384700084902,0.0
14.9,Which of the following is a dynamically typed programming language?,python,perl,0.0,3,1.5,1.2262403562327007,0.0
14.9,Which of the following is a dynamically typed programming language?,python,r,1.0,5,3.0,1.371697965384491,0.0
14.9,Which of the following is a dynamically typed programming language?,python,scala,0.0,0,0.0,1.3715129347752197,0.0
14.9,Which of the following is a dynamically typed programming language?,python,lisp,1.0,0,0.5,1.3190496504718692,0.0
14.9,Which of the following is a dynamically typed programming language?,python,php,4.0,1,2.5,1.2805942317920747,0.0
14.9,Which of the following is a dynamically typed programming language?,python,fortran,0.0,3,1.5,inf,0.0
14.9,Which of the following is a dynamically typed programming language?,python,cobol,4.0,0,2.0,inf,0.0
14.9,Which of the following is a dynamically typed programming language?,python,ruby,2.0,2,2.0,1.215182120742764,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,bubble sort (worst-case o(n²)),1.0,4,2.5,0.0,0.5248128954719569
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,simple sorting algorithm,2.0,2,2.0,1.2676166637202213,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,quadratic time complexity,3.0,4,3.5,1.298821071018184,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,inefficient for large datasets,1.0,3,2.0,1.3292041098095586,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,pairwise swapping sort,4.0,4,4.0,0.8990683537273587,0.2097380073663626
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,used for teaching purposes,5.0,2,3.5,1.3087003667275603,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,stable sorting algorithm,2.0,4,3.0,1.2849221549477763,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,uses nested loops,1.0,1,1.0,1.3215197201927167,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,easy to implement,2.0,3,2.5,1.3541834589395667,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,sorting with adjacent swaps,2.0,2,2.0,1.2610666383075686,0.0
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,bubble sort,3.0,1,2.0,0.0,1.0000000000000002
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,bubble sort,2.0,1,1.5,0.0,1.0000000000000002
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,bubble sort,2.0,1,1.5,0.0,1.0000000000000002
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,merge sort,1.0,4,2.5,0.7012128584862776,0.3520672542842105
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,quick sort,0.0,0,0.0,0.6686756519051992,0.30212979915442045
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,heap sort,1.0,4,2.5,0.6474318710173245,0.32061106037990966
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,radix sort,3.0,1,2.0,0.6542503891382146,0.30212979915442045
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,counting sort,3.0,5,4.0,0.6892259154863247,0.3125564609741897
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,bucket sort,1.0,4,2.5,0.65148880582691,0.2795845660401584
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,tim sort,1.0,1,1.0,0.6657644342056174,0.28690715113235954
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,shell sort,4.0,2,3.0,0.6189267545148903,0.29281737016832715
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,selection sort,2.0,3,2.5,0.6559601239414414,0.3461794256110965
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,insertion sort,5.0,2,3.5,0.6832910476774127,0.39501048334951605
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,bogo sort,4.0,5,4.5,0.6379251254823134,0.2795845660401584
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,pancake sort,1.0,2,1.5,0.6705189616956273,0.2698008772474686
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,lsd radix sort,0.0,5,2.5,0.8849393758333584,0.21308190178236658
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,msd radix sort,3.0,0,1.5,0.6542503891382146,0.21308190178236658
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,cycle sort,4.0,1,2.5,0.6142423119020942,0.36443638371073356
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,gnome sort,0.0,1,0.5,0.6566267948248234,0.2698008772474686
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,tree sort,2.0,4,3.0,0.6881734213384343,0.45431098397731834
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,cocktail sort,4.0,0,2.0,0.6689636853892582,0.2795845660401584
15.1,Which sorting algorithm has the worst-case time complexity of O(n²)?,bubble sort,comb sort,4.0,1,2.5,0.6753080072454177,0.2795845660401584
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,data hiding mechanism,1.0,0,0.5,1.0424571226037476,0.07345579940913256
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,protecting internal object state,3.0,1,2.0,1.3108809996172266,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,restricting direct access,1.0,1,1.0,1.2984048393403707,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,using private attributes,4.0,4,4.0,1.2857943038587973,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,combining variables and methods,0.0,2,1.0,1.068160669714935,0.2310084368955391
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,encapsulation in oop,1.0,1,1.0,1.2779748361855139,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,bundling data and behavior,2.0,3,2.5,1.0473009044558492,0.11591785332009372
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,preventing unintended modifications,3.0,2,2.5,1.3240313083689983,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,core principle of oop,4.0,2,3.0,1.30989436484978,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,keeping implementation details hidden,5.0,1,3.0,1.3074629190576268,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,wrapping data and methods into a single unit,2.0,5,3.5,0.0,1.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,wrapping data and methods into a single unit,2.0,5,3.5,0.0,1.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,wrapping data and methods into a single unit,0.0,3,1.5,0.0,1.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,wrapping data and methods into a single unit,0.0,4,2.0,0.0,1.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,wrapping data and methods into a single unit,0.0,4,2.0,0.0,1.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,abstraction,3.0,4,3.5,1.3553156051618092,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,overloading,1.0,0,0.5,1.3700667448705033,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,overriding,0.0,1,0.5,1.3761756601242159,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,composition,1.0,4,2.5,1.3604460340719693,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,aggregation,4.0,1,2.5,1.3075575957206174,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,cohesion,2.0,3,2.5,1.3566684044678536,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,coupling,3.0,2,2.5,1.3495785414712007,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,serialization,4.0,2,3.0,1.3625093225065878,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,delegation,3.0,1,2.0,1.407842096440581,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,reflection,2.0,1,1.5,1.372480370037922,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,mutability,0.0,2,1.0,1.3700957682112447,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,functional programming,2.0,4,3.0,1.3385323569195662,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,method chaining,3.0,4,3.5,1.212856227269579,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,garbage collection,2.0,3,2.5,1.3250289075855173,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,dependency injection,3.0,3,3.0,1.333947081354759,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,procedural programming,1.0,3,2.0,1.344422946047826,0.0
15.2,"In object-oriented programming, what is encapsulation?",wrapping data and methods into a single unit,algorithm optimization,1.0,1,1.0,1.273627505213645,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,zero,5.0,4,4.5,0.0,1.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,integer default value,3.0,4,3.5,1.3038586956001945,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,default primitive value,1.0,4,2.5,1.337414252705848,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,initial integer state,0.0,2,1.0,1.3231740076055656,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,predefined java value,0.0,2,1.0,1.3437810848962948,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,memory allocation default,3.0,3,3.0,1.337534023091917,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,uninitialized int behavior,5.0,4,4.5,1.3276201416124578,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,jvm default,4.0,3,3.5,1.2999492306709577,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,default for class members,4.0,4,4.0,1.3448384988055266,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,default field value,0.0,0,0.0,1.3003542868513316,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,zero,1.0,4,2.5,0.0,1.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,zero,0.0,3,1.5,0.0,1.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,zero,1.0,2,1.5,0.0,1.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,zero,1.0,2,1.5,0.0,1.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,zero,1.0,2,1.5,0.0,1.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,,3.0,2,2.5,inf,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,undefined,2.0,5,3.5,1.3068172533441884,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,random value,3.0,3,3.0,1.3262138133302477,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,max_int,2.0,3,2.5,inf,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,min_int,3.0,4,3.5,inf,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,none,1.0,4,2.5,1.2353213164307004,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,none,5.0,2,3.5,1.2353213164307004,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,none,4.0,1,2.5,1.2353213164307004,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,none,3.0,5,4.0,1.2353213164307004,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,zero,4.0,3,3.5,0.0,1.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,uninitialized,5.0,2,3.5,1.2491237128228438,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,infinity,4.0,2,3.0,1.2516558224575436,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,,3.0,3,3.0,inf,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,"""int""",2.0,1,1.5,inf,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,empty,1.0,1,1.0,1.2991171612354506,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,system-dependent,3.0,1,2.0,inf,0.0
15.3,What is the default value of an uninitialized int variable in Java?,zero,compiler error,2.0,4,3.0,1.3174191373461588,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",ensures execution,1.0,1,1.0,1.220290028987963,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",cleanup code execution,5.0,4,4.5,1.2714270765912306,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",executes after try and catch,3.0,4,3.5,0.7670409740352327,0.7303703858429516
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",handles resource management,4.0,1,2.5,1.2922044935968107,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception","always runs, exception or not",4.0,4,4.0,0.7476117539963454,0.3558630606826001
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",used in exception handling,1.0,3,2.0,0.9870521745418801,0.20582665314070708
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",common with try-catch,1.0,3,2.0,1.2882760908454314,0.40612656744314357
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",ensures file closing,5.0,0,2.5,1.2688765853168973,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",executes after an exception occurs,2.0,2,2.0,0.529799017506509,0.4877701509794228
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",executes even without exceptions,0.0,5,2.5,0.8397725716759811,0.16918421225133484
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception","always executes after try-catch, regardless of exception",2.0,4,3.0,0.0,1.0000000000000002
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception","always executes after try-catch, regardless of exception",1.0,0,0.5,0.0,1.0000000000000002
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception","always executes after try-catch, regardless of exception",1.0,3,2.0,0.0,1.0000000000000002
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception","always executes after try-catch, regardless of exception",1.0,3,2.0,0.0,1.0000000000000002
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception","always executes after try-catch, regardless of exception",1.0,3,2.0,0.0,1.0000000000000002
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",handles the exception,1.0,4,2.5,0.9562833379752552,0.2294726406511877
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",logs errors,3.0,3,3.0,1.3374776421816614,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",replaces catch block,1.0,3,2.0,1.3094316788839253,0.211484824748164
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",is mandatory in try-catch,4.0,4,4.0,1.2280038561634972,0.3688582803906807
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",only executes when needed,4.0,5,4.5,0.9280040258403801,0.21372451047355304
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",does nothing,0.0,4,2.0,1.2229905188154135,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",ends the program,1.0,3,2.0,1.2765491713098633,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",throws a new exception,1.0,2,1.5,1.0100908564243192,0.18820756451056553
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",halts execution,4.0,0,2.0,1.2469990639941528,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",modifies stack trace,3.0,1,2.0,1.284542357050062,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",used for debugging,2.0,1,1.5,1.2726176503855384,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",only used in multithreading,3.0,1,2.0,1.220555764789129,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",requires return statement,0.0,1,0.5,1.2692972974574666,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",only for database connections,1.0,4,2.5,1.2377636251242765,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",replaces try block,5.0,4,4.5,1.2839649374829334,0.20890123590277887
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",compiles without execution,4.0,2,3.0,1.2058113294636446,0.0
15.4,What does the finally block do in Java?,"always executes after try-catch, regardless of exception",not used in java,2.0,5,3.5,1.210712063741168,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,refers to the calling object,3.0,4,3.5,0.5184303824021722,0.5896549610941484
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,used in instance methods,2.0,2,2.0,0.9499772195850279,0.24583680742111907
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,resolves instance variable conflicts,4.0,4,4.0,1.008754459447405,0.15488978384451765
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,common in constructors,1.0,4,2.5,1.2383274411689353,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,self-referencing object,4.0,4,4.0,1.0547743067337376,0.14898685268821707
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,allows method chaining,0.0,2,1.0,1.2645255510478182,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,helps in setter methods,4.0,4,4.0,1.2437213363077662,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,used in inner classes,1.0,0,0.5,1.216304099931405,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,refers to current class object,5.0,1,3.0,0.5103630642066138,0.8100391591208492
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,helps in constructor overloading,2.0,1,1.5,1.2102278607999637,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,refers to the current object instance,5.0,3,4.0,0.0,0.9999999999999999
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,refers to the current object instance,4.0,3,3.5,0.0,0.9999999999999999
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,refers to the current object instance,2.0,4,3.0,0.0,0.9999999999999999
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,refers to the current object instance,4.0,5,4.5,0.0,0.9999999999999999
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,calls a superclass method,2.0,5,3.5,1.2545837283659926,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,declares a new object,3.0,1,2.0,0.9326920325105164,0.18522012744238545
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,refers to static methods,1.0,4,2.5,1.037730524547421,0.3633963302083889
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,calls an external class,3.0,2,2.5,1.2392408090045546,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,creates a new object,2.0,1,1.5,0.9359244014785267,0.17511756498736863
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,converts objects,4.0,1,2.5,1.2169001436255062,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,returns the object type,4.0,5,4.5,0.7441741177274256,0.25942667156640464
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,required in all methods,5.0,4,4.5,1.2268021266554523,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,used for memory allocation,4.0,1,2.5,1.2264394890793142,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,only used in inheritance,1.0,4,2.5,1.179941931796182,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,executes a method,1.0,2,1.5,1.2841036556871055,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,always mandatory,3.0,1,2.0,1.3011953919067234,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,replaces super,1.0,2,1.5,1.2978922545643008,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,calls an overridden method,2.0,4,3.0,1.2250676487108816,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,references an interface,4.0,4,4.0,1.229055640467334,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,only used in static methods,1.0,2,1.5,1.1880395540006663,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,accesses private methods,0.0,3,1.5,1.2962822179165805,0.0
15.5,What is the primary use of the this keyword in Java?,refers to the current object instance,defines a new class,3.0,3,3.0,1.150855965204964,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,memory management,3.0,1,2.0,0.9928847759683204,0.15011106168248237
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,prevents memory leaks,2.0,5,3.5,0.9722430644317965,0.10543672609133796
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,frees unreferenced objects,4.0,4,4.0,1.266976996896422,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,automatic deallocation,1.0,1,1.0,1.2407140220014172,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,managed by jvm,1.0,1,1.0,1.3054591029964435,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,runs in the background,3.0,4,3.5,1.3117642893025712,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,helps prevent outofmemoryerror,0.0,4,2.0,1.2828795562559288,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,improves application efficiency,1.0,1,1.0,1.2556674647638777,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,works with heap memory,0.0,1,0.5,0.9841375874236968,0.11927990403712212
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,uses reference counting,1.0,5,3.0,1.2627128515346402,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,automatically reclaims unused memory,4.0,1,2.5,0.0,1.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,automatically reclaims unused memory,1.0,3,2.0,0.0,1.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,automatically reclaims unused memory,5.0,5,5.0,0.0,1.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,automatically reclaims unused memory,3.0,1,2.0,0.0,1.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,automatically reclaims unused memory,4.0,2,3.0,0.0,1.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,automatically reclaims unused memory,3.0,1,2.0,0.0,1.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,optimizes runtime speed,4.0,3,3.5,1.2585112841633925,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,required for manual memory management,2.0,2,2.0,1.0073632981230503,0.09247047215601288
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,only works with arrays,2.0,3,2.5,1.2728863111181004,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,frees used memory,5.0,2,3.5,0.9229727775892537,0.12299915833732496
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,clears all memory,3.0,1,2.0,0.9247213342075442,0.11709838347461728
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,stops program execution,3.0,5,4.0,1.289388090035465,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,saves data to disk,2.0,4,3.0,1.2342988248337212,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,used for debugging,5.0,3,4.0,1.2579992762664933,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,helps with multi-threading,2.0,3,2.5,1.292942700688204,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,requires developer intervention,4.0,3,3.5,1.3295793154166722,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,compiles java code,3.0,4,3.5,1.2766796519194377,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,handles disk storage,1.0,1,1.0,1.2007057276863158,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,runs before code execution,1.0,1,1.0,1.299237719879936,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,replaces new operator,1.0,4,2.5,1.2727832059158972,0.0
15.6,What is the main purpose of garbage collection in Java?,automatically reclaims unused memory,reallocates stack memory,0.0,2,1.0,0.9163943933833036,0.11793796895792405
15.7,What is recursion in programming?,a function calling itself,function invoking itself,3.0,3,3.0,0.40740030611233463,0.39858819585793814
15.7,What is recursion in programming?,a function calling itself,repeated self-invocation,5.0,1,3.0,1.3499334152568243,0.0
15.7,What is recursion in programming?,a function calling itself,used for solving complex problems,1.0,0,0.5,1.2735143947096095,0.0
15.7,What is recursion in programming?,a function calling itself,common in tree traversal,2.0,1,1.5,1.3466505359304162,0.0
15.7,What is recursion in programming?,a function calling itself,requires a base case,4.0,3,3.5,1.3192452522560894,0.0
15.7,What is recursion in programming?,a function calling itself,used in depth-first search,3.0,2,2.5,1.2922829249874477,0.0
15.7,What is recursion in programming?,a function calling itself,implemented with a call stack,1.0,4,2.5,1.230789034133522,0.0
15.7,What is recursion in programming?,a function calling itself,alternative to loops,3.0,3,3.0,1.3288344435677804,0.0
15.7,What is recursion in programming?,a function calling itself,used in factorial calculations,3.0,0,1.5,1.2976674761390206,0.0
15.7,What is recursion in programming?,a function calling itself,used in fibonacci sequence,4.0,1,2.5,1.2986148838496603,0.0
15.7,What is recursion in programming?,a function calling itself,a function calling itself,3.0,4,3.5,0.0,1.0000000000000002
15.7,What is recursion in programming?,a function calling itself,a function calling itself,4.0,4,4.0,0.0,1.0000000000000002
15.7,What is recursion in programming?,a function calling itself,a function calling itself,2.0,4,3.0,0.0,1.0000000000000002
15.7,What is recursion in programming?,a function calling itself,a function calling itself,0.0,1,0.5,0.0,1.0000000000000002
15.7,What is recursion in programming?,a function calling itself,a function calling itself,1.0,0,0.5,0.0,1.0000000000000002
15.7,What is recursion in programming?,a function calling itself,a function calling itself,0.0,2,1.0,0.0,1.0000000000000002
15.7,What is recursion in programming?,a function calling itself,a memory allocation technique,5.0,4,4.5,1.323066093804469,0.0
15.7,What is recursion in programming?,a function calling itself,a sorting method,3.0,5,4.0,1.283736084629747,0.0
15.7,What is recursion in programming?,a function calling itself,a linear data structure,1.0,4,2.5,1.2683000233770678,0.0
15.7,What is recursion in programming?,a function calling itself,used only in java,0.0,4,2.0,1.301147492122392,0.0
15.7,What is recursion in programming?,a function calling itself,cannot be implemented in c++,2.0,3,2.5,1.2956916287831908,0.0
15.7,What is recursion in programming?,a function calling itself,does not require a base case,4.0,1,2.5,1.3011113231442126,0.0
15.7,What is recursion in programming?,a function calling itself,replaces all loops,4.0,4,4.0,1.3292418779032786,0.0
15.7,What is recursion in programming?,a function calling itself,requires multiple function calls,3.0,5,4.0,0.9019188983454315,0.10461727721209987
15.7,What is recursion in programming?,a function calling itself,cannot be used in python,2.0,0,1.0,1.2978355535760602,0.0
15.7,What is recursion in programming?,a function calling itself,slower than iteration,3.0,3,3.0,1.30494563645358,0.0
15.7,What is recursion in programming?,a function calling itself,only works with trees,5.0,5,5.0,1.3011276981529443,0.0
15.7,What is recursion in programming?,a function calling itself,always leads to infinite loops,4.0,0,2.0,1.3333837888207007,0.0
15.7,What is recursion in programming?,a function calling itself,uses heap memory,1.0,1,1.0,1.3027928208297135,0.0
15.7,What is recursion in programming?,a function calling itself,a type of garbage collection,4.0,2,3.0,1.3236899056340015,0.0
15.7,What is recursion in programming?,a function calling itself,not used in programming,0.0,2,1.0,1.2953393051126485,0.0
15.7,What is recursion in programming?,a function calling itself,runs in constant time,0.0,1,0.5,1.3247857466899169,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,factorial calculation,4.0,1,2.5,1.208925128715467,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,merge sort,1.0,1,1.0,1.3439432816978374,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,quick sort,1.0,4,2.5,1.280044984405618,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,tower of hanoi,4.0,2,3.0,1.347389922299469,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,depth-first search,4.0,5,4.5,1.3633506369736461,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,tree traversal,2.0,3,2.5,1.2773940763913216,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,backtracking algorithms,2.0,2,2.0,1.2628103753320479,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,binary search (recursive implementation),0.0,4,2.0,1.2282667025572584,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,n-queens problem,5.0,4,4.5,1.3941651062489284,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,finding the greatest common divisor (gcd),4.0,3,3.5,1.3125123287761067,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,fibonacci sequence,5.0,5,5.0,0.0,1.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,fibonacci sequence,1.0,4,2.5,0.0,1.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,fibonacci sequence,3.0,3,3.0,0.0,1.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,fibonacci sequence,4.0,1,2.5,0.0,1.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,selection sort,4.0,2,3.0,1.2982781502803384,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,breadth-first search,0.0,1,0.5,1.3633506369736461,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,hashing,5.0,1,3.0,1.3774231119520928,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,queue operations,1.0,5,3.0,1.3581754188887516,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,stack operations,0.0,3,1.5,1.3603918930015855,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,linked list traversal,1.0,1,1.0,1.3113813193561343,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,radix sort,0.0,0,0.0,1.2111342858339365,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,counting sort,1.0,3,2.0,1.301286490339406,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,iterative factorial,5.0,2,3.5,1.140029777087192,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,iterative fibonacci,1.0,1,1.0,0.5830462471186634,0.500495821236712
15.8,What is an example of a recursive algorithm?,fibonacci sequence,shortest path in dijkstra’s algorithm,1.0,1,1.0,1.2906767744192014,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,dynamic programming (memoization),1.0,0,0.5,1.2837211827278234,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,database indexing,0.0,4,2.0,1.2913613020873036,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,matrix multiplication,3.0,1,2.0,1.2225988492389188,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,sql query optimization,5.0,5,5.0,1.2526761722093196,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,cache invalidation,1.0,5,3.0,1.3025409186760566,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,load balancing,0.0,2,1.0,1.3452557094865365,0.0
15.8,What is an example of a recursive algorithm?,fibonacci sequence,file compression,1.0,4,2.5,1.2846314339822524,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,"same interface, different implementation",4.0,1,2.5,1.007149998460166,0.32164793341675624
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,method overloading,1.0,2,1.5,1.3232572416883437,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,method overriding,5.0,1,3.0,1.2878305679946667,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,oop flexibility,2.0,2,2.0,1.3339435576442407,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,implemented using inheritance,2.0,2,2.0,1.3028593932220032,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,used in abstraction,0.0,4,2.0,1.1946408022554755,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,reduces code duplication,1.0,2,1.5,1.328580431757496,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,allows dynamic method calls,2.0,0,1.0,1.2717593810639354,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,helps in designing extensible systems,4.0,2,3.0,1.229406190777151,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,supports late binding,4.0,1,2.5,1.3024307970877478,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,the ability of different classes to be treated as the same type,3.0,2,2.5,0.0,1.0000000000000002
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,the ability of different classes to be treated as the same type,4.0,4,4.0,0.0,1.0000000000000002
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,the ability of different classes to be treated as the same type,5.0,4,4.5,0.0,1.0000000000000002
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,the ability of different classes to be treated as the same type,1.0,1,1.0,0.0,1.0000000000000002
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,the ability of different classes to be treated as the same type,3.0,5,4.0,0.0,1.0000000000000002
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,static method calls,1.0,3,2.0,1.2986792832994607,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,compilation process,3.0,3,3.0,1.3415153804811801,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,only used in java,1.0,2,1.5,1.1850800816531952,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,increases code redundancy,5.0,1,3.0,1.335231715232349,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,a type of data structure,3.0,5,4.0,1.1581399213121188,0.20465898629734292
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,memory allocation technique,0.0,1,0.5,1.3096166293289453,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,a sorting algorithm,0.0,2,1.0,1.350340492274859,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,thread synchronization,2.0,1,1.5,1.357483004627523,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,exception handling,3.0,3,3.0,1.3033781221966325,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,object cloning,4.0,4,4.0,1.3298562129962377,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,only for compile-time execution,1.0,2,1.5,1.2096627927283645,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,prevents code reuse,5.0,1,3.0,1.3290896201875775,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,used for garbage collection,0.0,1,0.5,1.2397379963626238,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,a type of recursion,2.0,1,1.5,1.158833517158138,0.22597495733694772
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,similar to stack memory,4.0,2,3.0,1.2444094267411927,0.04096368243843929
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,only applicable to static functions,2.0,3,2.5,1.203906113988837,0.035172549807694894
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,defined using final keyword,2.0,4,3.0,1.245587875308312,0.0
15.9,What is polymorphism in OOP?,the ability of different classes to be treated as the same type,defined using final keyword,5.0,2,3.5,1.245587875308312,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,prevents infinite recursion,4.0,3,3.5,1.0296829864000765,0.2211338682215894
16.1,What is the base case in recursion?,a condition that stops the recursion,a termination condition,4.0,3,3.5,1.072222672365353,0.3833025797619116
16.1,What is the base case in recursion?,a condition that stops the recursion,stops recursive calls,3.0,2,2.5,0.9688565996989262,0.37044958931395255
16.1,What is the base case in recursion?,a condition that stops the recursion,ensures function eventually returns,3.0,1,2.0,1.2398486230958283,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,essential for recursion to work,3.0,2,2.5,0.9852121666438705,0.18831373342751195
16.1,What is the base case in recursion?,a condition that stops the recursion,recursion stopping point,1.0,5,3.0,0.9640547935649375,0.2214687130815324
16.1,What is the base case in recursion?,a condition that stops the recursion,prevents stack overflow,4.0,2,3.0,1.2758488829418924,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,smallest subproblem in recursion,3.0,2,2.5,0.9925933099951116,0.19754776364019588
16.1,What is the base case in recursion?,a condition that stops the recursion,must be defined to avoid infinite loops,1.0,3,2.0,1.1998449837712668,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,a condition to return a result,2.0,2,2.0,1.038645349000631,0.31556838762916206
16.1,What is the base case in recursion?,a condition that stops the recursion,a condition that stops the recursion,1.0,2,1.5,0.0,1.0
16.1,What is the base case in recursion?,a condition that stops the recursion,a condition that stops the recursion,0.0,1,0.5,0.0,1.0
16.1,What is the base case in recursion?,a condition that stops the recursion,a condition that stops the recursion,1.0,4,2.5,0.0,1.0
16.1,What is the base case in recursion?,a condition that stops the recursion,the first function call,1.0,3,2.0,1.0017829589994536,0.04278188297272531
16.1,What is the base case in recursion?,a condition that stops the recursion,the last recursive call,2.0,3,2.5,0.9346389691878599,0.03358784477294372
16.1,What is the base case in recursion?,a condition that stops the recursion,the function return statement,2.0,4,3.0,0.983334985036462,0.03577044167881481
16.1,What is the base case in recursion?,a condition that stops the recursion,a loop inside a recursive function,4.0,0,2.0,1.1621372366550438,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,a global variable,1.0,1,1.0,1.3080849725746433,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,any if-condition in a function,5.0,2,3.5,1.1533901754605023,0.3281033125469912
16.1,What is the base case in recursion?,a condition that stops the recursion,a memory allocation condition,0.0,3,1.5,1.048869372836423,0.32165657284250987
16.1,What is the base case in recursion?,a condition that stops the recursion,a variable used in recursion,3.0,3,3.0,0.9817402974417737,0.293746232383328
16.1,What is the base case in recursion?,a condition that stops the recursion,a function call without parameters,4.0,3,3.5,1.2385462800042126,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,the initial input to the function,1.0,4,2.5,0.9715695123391314,0.053538862051389455
16.1,What is the base case in recursion?,a condition that stops the recursion,the midpoint in recursion,1.0,5,3.0,0.7623630344665521,0.253710184956128
16.1,What is the base case in recursion?,a condition that stops the recursion,always set to 0,1.0,0,0.5,1.264158058456971,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,always set to 1,0.0,4,2.0,1.2918839767562365,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,used in iteration,2.0,4,3.0,1.214297003263257,0.0
16.1,What is the base case in recursion?,a condition that stops the recursion,a condition that makes recursion faster,3.0,0,1.5,0.5164622088662988,0.5587462739620056
16.1,What is the base case in recursion?,a condition that stops the recursion,a function that executes once,4.0,1,2.5,0.9739667678202891,0.10738315274160469
16.1,What is the base case in recursion?,a condition that stops the recursion,a function that always returns null,3.0,4,3.5,0.994206801002629,0.09498237596358368
16.1,What is the base case in recursion?,a condition that stops the recursion,not required in tail recursion,2.0,2,2.0,0.891242923738905,0.22336861379847647
16.1,What is the base case in recursion?,a condition that stops the recursion,a condition that increases recursion depth,4.0,2,3.0,0.5230230081738063,0.48981986358210095
16.2,Which of the following data structures uses a heap?,priority queue,uses a binary heap,2.0,3,2.5,1.3514965561175847,0.0
16.2,Which of the following data structures uses a heap?,priority queue,supports efficient min/max retrieval,1.0,2,1.5,1.3042421291789683,0.0
16.2,Which of the following data structures uses a heap?,priority queue,implemented with heaps,2.0,4,3.0,1.3387304951384305,0.0
16.2,Which of the following data structures uses a heap?,priority queue,used in dijkstra's algorithm,1.0,1,1.0,1.3652842222085528,0.0
16.2,Which of the following data structures uses a heap?,priority queue,supports logarithmic insert/delete,1.0,5,3.0,1.3394076781999598,0.0
16.2,Which of the following data structures uses a heap?,priority queue,used in scheduling algorithms,2.0,1,1.5,1.3579627942953052,0.0
16.2,Which of the following data structures uses a heap?,priority queue,provides priority-based access,3.0,1,2.0,1.3500935791368671,0.43635649088452044
16.2,Which of the following data structures uses a heap?,priority queue,common in event-driven systems,0.0,1,0.5,1.3591828178996084,0.0
16.2,Which of the following data structures uses a heap?,priority queue,supports element priority ordering,0.0,4,2.0,0.9793967301225477,0.4086812261542932
16.2,Which of the following data structures uses a heap?,priority queue,used in huffman coding,3.0,0,1.5,1.3507465898297957,0.0
16.2,Which of the following data structures uses a heap?,priority queue,priority queue,1.0,2,1.5,0.0,1.0
16.2,Which of the following data structures uses a heap?,priority queue,priority queue,2.0,4,3.0,0.0,1.0
16.2,Which of the following data structures uses a heap?,priority queue,priority queue,1.0,1,1.0,0.0,1.0
16.2,Which of the following data structures uses a heap?,priority queue,priority queue,5.0,2,3.5,0.0,1.0
16.2,Which of the following data structures uses a heap?,priority queue,queue,4.0,1,2.5,0.659098031388046,0.609540158873414
16.2,Which of the following data structures uses a heap?,priority queue,hash table,3.0,4,3.5,1.333567809901365,0.0
16.2,Which of the following data structures uses a heap?,priority queue,graph,4.0,2,3.0,1.3704981362237536,0.0
16.2,Which of the following data structures uses a heap?,priority queue,linked list,0.0,3,1.5,1.2686223716718092,0.0
16.2,Which of the following data structures uses a heap?,priority queue,binary search tree,2.0,5,3.5,1.346731292316024,0.0
16.2,Which of the following data structures uses a heap?,priority queue,avl tree,4.0,2,3.0,1.337767191716599,0.0
16.2,Which of the following data structures uses a heap?,priority queue,red-black tree,2.0,5,3.5,1.337767191716599,0.0
16.2,Which of the following data structures uses a heap?,priority queue,trie,2.0,3,2.5,1.3853892287051788,0.0
16.2,Which of the following data structures uses a heap?,priority queue,b-tree,4.0,4,4.0,inf,0.0
16.2,Which of the following data structures uses a heap?,priority queue,bloom filter,2.0,4,3.0,1.367876557552082,0.0
16.2,Which of the following data structures uses a heap?,priority queue,doubly linked list,1.0,5,3.0,1.2959203631699718,0.0
16.2,Which of the following data structures uses a heap?,priority queue,skip list,5.0,5,5.0,1.213811015459128,0.0
16.2,Which of the following data structures uses a heap?,priority queue,circular queue,2.0,1,1.5,0.6897521355518437,0.3953589403656441
16.2,Which of the following data structures uses a heap?,priority queue,fibonacci heap,4.0,2,3.0,1.342946342162711,0.0
16.2,Which of the following data structures uses a heap?,priority queue,disjoint set,4.0,4,4.0,1.345109971975019,0.0
16.2,Which of the following data structures uses a heap?,priority queue,adjacency list,3.0,3,3.0,1.2403114299127935,0.0
16.2,Which of the following data structures uses a heap?,priority queue,hash map,4.0,1,2.5,1.3589374713439768,0.0
16.2,Which of the following data structures uses a heap?,priority queue,set,3.0,5,4.0,1.3567911477658767,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,last operation in the function,3.0,1,2.0,0.8863081136471943,0.10889948158014766
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,optimized by compilers,2.0,2,2.0,1.26786593862363,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,reduces stack usage,1.0,3,2.0,1.3035846562680602,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,can be converted to iteration,4.0,0,2.0,1.2642688209563548,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,no need to store previous states,2.0,1,1.5,1.2638315552535089,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,used in functional programming,4.0,3,3.5,1.187688351800756,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,more efficient than normal recursion,2.0,4,3.0,1.207219958743762,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,doesn't grow the call stack,1.0,0,0.5,0.833335284745864,0.2303357771437546
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,used in tail call optimization,1.0,5,3.0,0.9917561012685716,0.1913894038643429
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,"found in languages like lisp, scheme",4.0,3,3.5,1.2170802882961256,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a recursive call where the function returns the result of the recursive call directly,1.0,4,2.5,0.0,1.0000000000000002
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a recursive call where the function returns the result of the recursive call directly,1.0,4,2.5,0.0,1.0000000000000002
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a recursive call where the function returns the result of the recursive call directly,1.0,1,1.0,0.0,1.0000000000000002
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,any recursive function,3.0,1,2.0,0.9321725080625967,0.4666679763470332
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a recursion without a base case,1.0,1,1.0,1.1888627032665697,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a recursive function with loops,4.0,2,3.0,0.9583286909707571,0.36867744441835626
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,recursion using a helper function,0.0,2,1.0,1.134195424313366,0.04048049329927496
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a memory optimization technique,1.0,2,1.5,1.317222493526295,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a function that always returns 0,4.0,3,3.5,1.0114695660903292,0.20694325103877467
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a function that always returns 1,3.0,2,2.5,1.0118279011431197,0.20694325103877467
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,recursion that never terminates,0.0,3,1.5,1.1255092342211053,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,used only in java,3.0,4,3.5,1.1964970436364168,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,used only in python,0.0,2,1.0,1.2135283791104607,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a function that modifies its parameters,4.0,4,4.0,1.0967828484035393,0.04202986705440376
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,always slower than iteration,5.0,4,4.5,1.2828229760724004,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,only works with integer inputs,0.0,1,0.5,1.191275294628174,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a function that doesn't return anything,2.0,2,2.0,1.0714879706852651,0.03768941491540196
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,requires global variables,4.0,3,3.5,1.2946286352928995,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,always leads to stack overflow,5.0,3,4.0,1.2653945025409987,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,used for sorting algorithms,1.0,2,1.5,1.2273092362840161,0.0
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,the same as direct recursion,1.0,2,1.5,0.9106468124969583,0.04420522336729613
16.3,What is tail recursion?,a recursive call where the function returns the result of the recursive call directly,a function that modifies its stack size,2.0,4,3.0,1.1011039030737884,0.03915743995383095
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,constant time lookup,2.0,4,3.0,1.3610339446569326,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,o(1) average case,3.0,4,3.5,1.4011663345619656,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,used in hash tables,3.0,4,3.5,1.291941317430187,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,no need for sorted data,2.0,1,1.5,1.3159992740641488,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,hash functions used for indexing,4.0,4,4.0,1.2735566990262732,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,efficient for large datasets,0.0,1,0.5,1.3984907013923478,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,used in database indexing,0.0,2,1.0,1.3600334972586983,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,common in caching systems,1.0,3,2.0,1.3630623934407127,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,supports key-value pairs,2.0,5,3.5,1.3901723787145053,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,helps in detecting duplicates quickly,2.0,2,2.0,1.3658842830214346,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,hashing,5.0,4,4.5,0.0,1.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,hashing,3.0,4,3.5,0.0,1.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,hashing,4.0,4,4.0,0.0,1.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,binary search,3.0,2,2.5,1.297432696240613,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,linear search,2.0,2,2.0,1.358025455226756,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,jump search,5.0,1,3.0,1.3800604667846965,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,exponential search,1.0,2,1.5,1.359519549081131,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,interpolation search,4.0,4,4.0,1.3315742078502775,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,breadth-first search,1.0,2,1.5,1.3182497211604811,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,depth-first search,4.0,2,3.0,1.3182497211604811,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,b-tree search,2.0,2,2.0,1.3182497211604811,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,fibonacci search,3.0,1,2.0,1.353682605855432,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,avl tree search,1.0,2,1.5,1.371514640571215,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,trie search,2.0,4,3.0,1.3881196353272387,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,graph search,4.0,1,2.5,1.356030718744782,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,inorder tree traversal,0.0,2,1.0,1.3704311305920804,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,dfs with backtracking,1.0,1,1.0,1.3247121155695698,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,bst search,1.0,0,0.5,1.3484558444505996,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,segment tree search,3.0,3,3.0,1.3897889764084697,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,splay tree search,3.0,2,2.5,1.3825862807233595,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,skip list search,2.0,4,3.0,1.36657099866369,0.0
16.4,Which searching algorithm is best for an unstructured large dataset?,hashing,ternary search,4.0,0,2.0,1.3054360736250854,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,exponential time complexity,1.0,0,0.5,1.3145964121615323,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,hardest problems in np,3.0,4,3.5,1.170625209236888,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,no known polynomial solution,2.0,2,2.0,1.3010552536696314,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,requires brute force or heuristics,2.0,2,2.0,1.339788038235305,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,related to p vs np problem,1.0,1,1.0,1.109288988344288,0.14570637704931433
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,used in optimization problems,4.0,2,3.0,1.1568399242560887,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,np-hard but verifiable in polynomial time,0.0,1,0.5,1.3202044229595886,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,solved using backtracking,5.0,3,4.0,1.2552237100996257,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,related to hamiltonian cycle,0.0,0,0.0,1.3588570478809978,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,used in logistics and routing,4.0,3,3.5,1.312635823128577,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,traveling salesman problem,0.0,1,0.5,0.0,1.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,traveling salesman problem,1.0,0,0.5,0.0,1.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,traveling salesman problem,0.0,2,1.0,0.0,1.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,binary search,3.0,5,4.0,1.3676035363425143,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,bubble sort,4.0,4,4.0,1.3256789636068693,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,quick sort,2.0,3,2.5,1.3285954161740263,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,merge sort,1.0,1,1.0,1.3424650186369078,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,matrix multiplication,2.0,1,1.5,1.377354854139183,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,fibonacci sequence,2.0,4,3.0,1.4164057735178621,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,factorial calculation,2.0,0,1.0,1.3957193323641284,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,stack operations,0.0,0,0.0,1.3529844002122227,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,queue operations,4.0,1,2.5,1.3460654530045124,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,hashing,2.0,3,2.5,1.3898656570857613,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,graph traversal,2.0,3,2.5,1.4074771098009613,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,dijkstra’s algorithm,4.0,0,2.0,1.4143224440061934,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,breadth-first search,4.0,4,4.0,1.3593144371293786,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,depth-first search,4.0,4,4.0,1.3593144371293786,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,linked list traversal,3.0,3,3.0,1.3732103560895563,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,stack-based recursion,3.0,4,3.5,1.4044976704541021,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,constant-time algorithm,4.0,0,2.0,1.4143224440061934,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,hash map lookup,4.0,3,3.5,1.3209468747306436,0.0
16.5,Which of the following is an example of an NP-complete problem?,traveling salesman problem,o(1) operations,3.0,4,3.5,1.3696895514466192,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,tortoise and hare algorithm,0.0,5,2.5,0.9123843453545828,0.15520806949393812
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,detects loops in linked lists,4.0,1,2.5,1.2214927032623124,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,detects cycles in graphs,2.0,3,2.5,1.0435928846507228,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,uses slow and fast pointers,2.0,4,3.0,1.288435746122326,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,works in o(n) time,1.0,4,2.5,1.2820893141435432,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,space-efficient algorithm,1.0,2,1.5,0.8264131736497079,0.2201038427331243
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,used in dynamic programming,4.0,3,3.5,1.2899089834970026,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,finds repeated states,1.0,1,1.0,1.347883990968684,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,used in memory allocation checks,2.0,5,3.5,1.2913033907660252,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,works for directed and undirected graphs,2.0,3,2.5,1.3013464147571412,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,floyd’s cycle detection algorithm,4.0,5,4.5,0.0,1.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,floyd’s cycle detection algorithm,4.0,4,4.0,0.0,1.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,floyd’s cycle detection algorithm,0.0,3,1.5,0.0,1.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,dijkstra’s algorithm,3.0,3,3.0,0.8264131736497079,0.22589525771906635
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,prim’s algorithm,2.0,3,2.5,0.8264131736497079,0.2216120153567862
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,kruskal’s algorithm,1.0,2,1.5,0.8264131736497079,0.2216120153567862
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,a* algorithm,3.0,2,2.5,0.8264131736497079,0.4293208967638629
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,bellman-ford algorithm,2.0,1,1.5,0.8264131736497079,0.1636722196392011
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,breadth-first search,1.0,2,1.5,1.318544378851118,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,depth-first search,4.0,3,3.5,1.318544378851118,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,avl tree rotation,1.0,4,2.5,1.3290879488185927,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,hash map lookup,3.0,3,3.0,1.2876563767142533,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,stack-based recursion,3.0,2,2.5,1.1796028174814133,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,sorting algorithms,2.0,2,2.0,1.0333797462519527,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,convex hull algorithm,3.0,0,1.5,0.8766316719723456,0.1636722196392011
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,fibonacci heap,1.0,3,2.0,1.312984405472671,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,splay tree balancing,1.0,5,3.0,1.3233096615142754,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,trie construction,2.0,3,2.5,1.3080941300298607,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,disjoint set union,4.0,1,2.5,1.3020886420954263,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,bit manipulation techniques,3.0,3,3.0,1.2227677741306335,0.0
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,shortest path algorithm,3.0,5,4.0,0.8559175999410702,0.1948752867253746
16.6,Which algorithm is used for cycle detection in a graph?,floyd’s cycle detection algorithm,heuristic search,5.0,3,4.0,1.199436151127558,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,used for optimization problems,4.0,1,2.5,1.11098975613031,0.15828509279989603
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,uses memoization,1.0,2,1.5,1.3396067808809105,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,uses tabulation,4.0,3,3.5,1.3105650315516773,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,solves subproblems only once,2.0,5,3.5,1.2223938290684273,0.14739431751041324
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,avoids redundant calculations,1.0,1,1.0,1.2843775202092749,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,improves recursive solutions,0.0,0,0.0,1.2650521692357062,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,used in fibonacci sequence,2.0,4,3.0,1.26104832725926,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,used in shortest path algorithms,1.0,4,2.5,1.2393340355697882,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,efficient for combinatorial problems,4.0,3,3.5,1.1111787380046274,0.1365242072826709
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,works on overlapping subproblems,4.0,1,2.5,1.1462240451367744,0.3523888312690763
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,a technique to solve problems by breaking them into overlapping subproblems and storing results,3.0,3,3.0,0.0,1.0000000000000002
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,a technique to solve problems by breaking them into overlapping subproblems and storing results,2.0,3,2.5,0.0,1.0000000000000002
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,a technique to solve problems by breaking them into overlapping subproblems and storing results,5.0,4,4.5,0.0,1.0000000000000002
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,a type of sorting algorithm,4.0,2,3.0,1.253823948854432,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,a data structure,1.0,2,1.5,1.289742934908529,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,a recursion without a base case,5.0,1,3.0,1.269309481039713,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,a brute force approach,1.0,3,2.0,1.2936756549121426,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,a greedy algorithm,2.0,4,3.0,1.304715224779009,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,only used in java,1.0,4,2.5,1.2565569908395637,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,only works with trees,0.0,5,2.5,1.2672075339005326,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,an object-oriented concept,1.0,0,0.5,1.3204507906377847,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,requires iterative implementation,3.0,4,3.5,1.3004251349567255,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,slower than brute force,3.0,4,3.5,1.2901472910843488,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,used in binary search,3.0,2,2.5,1.2648739457626443,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,only applicable to matrices,4.0,2,3.0,1.2898202598433957,0.025167499812714298
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,can be implemented without recursion,5.0,4,4.5,1.2323740810976356,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,requires additional memory always,1.0,1,1.0,1.3040868291224406,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,works only for graph problems,5.0,4,4.5,1.12164718377222,0.14223586704653385
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,used for stack operations,0.0,5,2.5,1.268135964244871,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,an approach that does not optimize time,1.0,0,0.5,1.2460465489628874,0.0
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,only used in mathematical problems,3.0,4,3.5,1.0904921151845004,0.14646347321291697
16.7,What is dynamic programming?,a technique to solve problems by breaking them into overlapping subproblems and storing results,not applicable in real-world scenarios,2.0,1,1.5,1.248462217041729,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,fibonacci sequence,3.0,0,1.5,1.3730116355627673,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,longest common subsequence,2.0,1,1.5,1.3518715397468228,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,longest increasing subsequence,4.0,1,2.5,1.3494011225361833,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,matrix chain multiplication,2.0,4,3.0,1.3323262396152888,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,coin change problem,2.0,1,1.5,0.8679893208302464,0.23585818149096283
16.8,Which problem is best solved using dynamic programming?,knapsack problem,edit distance,3.0,2,2.5,1.35317972362567,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,subset sum problem,1.0,3,2.0,0.8900646939181538,0.21493880727331632
16.8,Which problem is best solved using dynamic programming?,knapsack problem,traveling salesman problem (dp approach),4.0,1,2.5,0.866923603916673,0.1905192749946005
16.8,Which problem is best solved using dynamic programming?,knapsack problem,shortest path in dag,2.0,0,1.0,1.339647220019013,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,partition problem,2.0,5,3.5,0.689357155098105,0.28169578995732075
16.8,Which problem is best solved using dynamic programming?,knapsack problem,knapsack problem,4.0,0,2.0,0.0,1.0000000000000002
16.8,Which problem is best solved using dynamic programming?,knapsack problem,knapsack problem,3.0,4,3.5,0.0,1.0000000000000002
16.8,Which problem is best solved using dynamic programming?,knapsack problem,knapsack problem,3.0,4,3.5,0.0,1.0000000000000002
16.8,Which problem is best solved using dynamic programming?,knapsack problem,knapsack problem,4.0,4,4.0,0.0,1.0000000000000002
16.8,Which problem is best solved using dynamic programming?,knapsack problem,depth-first search,3.0,3,3.0,1.3417802518737614,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,breadth-first search,1.0,3,2.0,1.3417802518737614,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,heap sort,3.0,0,1.5,1.2598280481695996,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,bubble sort,1.0,4,2.5,1.3042756202468393,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,selection sort,4.0,3,3.5,1.3360418301485368,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,merge sort,4.0,4,4.0,1.3461269247709828,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,quick sort,2.0,1,1.5,1.3000051041549976,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,radix sort,0.0,1,0.5,1.2874265199660253,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,avl tree insertion,0.0,4,2.0,1.3477016479999844,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,graph coloring,0.0,4,2.0,1.3288579651147243,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,prim’s algorithm,5.0,5,5.0,1.3697846867123278,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,kruskal’s algorithm,2.0,0,1.0,1.3697846867123278,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,red-black tree balancing,1.0,4,2.5,1.3016033293897284,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,convex hull algorithm,3.0,3,3.0,1.3364615075161617,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,floyd-warshall algorithm,2.0,2,2.0,1.3697846867123278,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,binary search tree traversal,5.0,3,4.0,1.3372854755985109,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,hash table lookup,4.0,5,4.5,1.3033419750967832,0.0
16.8,Which problem is best solved using dynamic programming?,knapsack problem,graph cycle detection,2.0,3,2.5,1.3578886467360973,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,consists of vertices and edges,3.0,4,3.5,1.0036881525558263,0.2602719184506744
16.9,What is a graph in data structures?,a collection of nodes connected by edges,can be directed or undirected,1.0,3,2.0,1.254335238396338,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,can have weighted edges,3.0,1,2.0,1.0430060886893826,0.26290713735331356
16.9,What is a graph in data structures?,a collection of nodes connected by edges,used in shortest path algorithms,3.0,4,3.5,1.2260633358679485,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,represented using adjacency list,3.0,2,2.5,1.2635161288978813,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,represented using adjacency matrix,3.0,4,3.5,1.2603154498834193,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,used in social networks,3.0,2,2.5,1.2309150180269042,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,used in computer networks,4.0,2,3.0,1.2286152719852632,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,used in recommendation systems,2.0,5,3.5,1.252179675286608,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,used in dependency resolution,4.0,3,3.5,1.2851005295146662,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a collection of nodes connected by edges,4.0,2,3.0,0.0,1.0000000000000002
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a collection of nodes connected by edges,3.0,0,1.5,0.0,1.0000000000000002
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a collection of nodes connected by edges,3.0,2,2.5,0.0,1.0000000000000002
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a linear data structure,5.0,3,4.0,1.2789132925081048,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a stack-based structure,4.0,4,4.0,1.336016012675219,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a queue implementation,1.0,4,2.5,1.3616766699011347,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a heap,2.0,3,2.5,1.358158116480829,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a priority queue,1.0,5,3.0,1.3448300322132083,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a binary search tree,2.0,0,1.0,1.301018905240072,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,only used in tree traversal,0.0,2,1.0,1.2492772608950569,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,always has cycles,4.0,3,3.5,1.280512517043092,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,cannot store weighted edges,1.0,2,1.5,1.0353615035762713,0.24628676698812899
16.9,What is a graph in data structures?,a collection of nodes connected by edges,uses only dfs for traversal,1.0,2,1.5,1.2775092566941693,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,implemented only using arrays,0.0,4,2.0,1.2429340168040575,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,cannot be used in databases,0.0,4,2.0,1.2148924162566814,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a structure without nodes,1.0,1,1.0,1.0328132476634497,0.21237866170542805
16.9,What is a graph in data structures?,a collection of nodes connected by edges,only applicable in ai,4.0,4,4.0,1.3088813413847449,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,used only in c++,4.0,5,4.5,1.2818772188645227,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,cannot be implemented using pointers,5.0,4,4.5,1.2635365913076213,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,does not support dynamic changes,3.0,2,2.5,1.3180423436808892,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,works only with linked lists,2.0,0,1.0,1.2031565208228368,0.0
16.9,What is a graph in data structures?,a collection of nodes connected by edges,a type of sorting algorithm,1.0,0,0.5,1.2542565718247933,0.04558840718254517
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),linear in terms of nodes and edges,3.0,4,3.5,1.3201670532642342,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),efficient for exploring graphs,3.0,3,3.0,1.3498261619995793,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),used in cycle detection,1.0,4,2.5,1.3606515626542977,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),used in topological sorting,1.0,1,1.0,1.3546320857750107,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),works with recursion,1.0,2,1.5,1.310824770010731,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),used in backtracking algorithms,4.0,5,4.5,1.3550856140221976,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),used in maze solving,2.0,5,3.5,1.380143438428501,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),uses a stack (explicit or implicit),2.0,2,2.0,1.3011439242548917,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),helps in finding strongly connected components,2.0,2,2.0,1.3626050381041814,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),can be implemented iteratively or recursively,4.0,3,3.5,1.3215680496500304,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(v + e),0.0,4,2.0,0.0,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(v + e),4.0,3,3.5,0.0,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(v + e),1.0,2,1.5,0.0,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(1),0.0,5,2.5,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(log n),2.0,4,3.0,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(n log n),2.0,2,2.0,1.3453312731615643,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(n²),4.0,0,2.0,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(n!),1.0,3,2.0,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(2^n),5.0,4,4.5,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(ve),0.0,5,2.5,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(v^2),1.0,1,1.0,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(e^2),2.0,2,2.0,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(v^3),1.0,5,3.0,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(n^3),3.0,3,3.0,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(n^4),3.0,4,3.5,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(2^v),4.0,2,3.0,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(e log v),5.0,4,4.5,1.3453312731615643,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(log log n),4.0,0,2.0,1.3453312731615643,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(n/2),2.0,5,3.5,inf,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(ve log v),3.0,2,2.5,1.3453312731615643,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(v+e log v),1.0,3,2.0,1.3453312731615643,0.0
17.1,What is the time complexity of Depth-First Search (DFS)?,o(v + e),o(n^(1/2)),4.0,1,2.5,inf,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),explores nodes level by level,4.0,4,4.0,1.3888067631959475,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),uses a queue,2.0,2,2.0,1.36463079361718,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),guarantees shortest path in unweighted graphs,2.0,4,3.0,1.3692448176245609,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),runs in o(v + e) time,2.0,0,1.0,1.38043668977731,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),used in maze solving,4.0,5,4.5,1.3446563697669196,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),works on trees and graphs,1.0,2,1.5,1.3773973062529616,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),does not use a priority queue,2.0,2,2.0,1.3594392424691397,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),best for unweighted shortest paths,1.0,2,1.5,1.3691884614899423,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),useful in network routing,2.0,1,1.5,1.3335269399581222,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),used in social media friend suggestions,2.0,5,3.5,1.3518784415756895,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),breadth-first search (bfs),4.0,2,3.0,0.0,1.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),breadth-first search (bfs),3.0,5,4.0,0.0,1.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),breadth-first search (bfs),2.0,2,2.0,0.0,1.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),breadth-first search (bfs),2.0,1,1.5,0.0,1.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),breadth-first search (bfs),4.0,1,2.5,0.0,1.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),bellman-ford algorithm,2.0,3,2.5,1.2790879665210808,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),a* algorithm,4.0,0,2.0,1.2790879665210808,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),prim’s algorithm,4.0,1,2.5,1.2790879665210808,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),kruskal’s algorithm,4.0,2,3.0,1.2790879665210808,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),depth-first search,2.0,5,3.5,0.0,0.3883251262409786
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),greedy algorithm,0.0,0,0.0,1.346583319858562,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),backtracking algorithm,4.0,4,4.0,1.3080915338630805,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),linear search,1.0,0,0.5,0.7029580274624408,0.2818289078778856
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),binary search,4.0,1,2.5,0.7042431739697148,0.32304027708976846
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),hashing,3.0,3,3.0,1.3182497211604811,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),exponential search,4.0,2,3.0,0.7076805808187918,0.24904782743535303
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),dfs with priority queue,1.0,0,0.5,1.3581965248398489,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),heap sort,2.0,4,3.0,1.3472660209649645,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),merge sort,2.0,3,2.5,1.3675159425551993,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),bubble sort,2.0,1,1.5,1.3460875555921876,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),selection sort,2.0,4,3.0,1.296930187350355,0.0
17.2,Which algorithm finds the shortest path in an unweighted graph?,breadth-first search (bfs),avl tree search,1.0,1,1.0,0.687991604625164,0.237891686022662
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,protects data from direct modification,2.0,4,3.0,1.2350586598719553,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,achieved using private/protected members,4.0,4,4.0,1.3069364236997272,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,increases security in software,0.0,1,0.5,1.2752311982691336,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,used with getter and setter methods,2.0,2,2.0,1.3417377117357239,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,helps in modular programming,1.0,3,2.0,1.3024307163884004,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,encapsulation = data hiding + abstraction,0.0,3,1.5,1.2607373700100102,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,prevents unintended modifications,0.0,2,1.0,1.2511658936573162,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,reduces system complexity,1.0,3,2.0,1.236950501036054,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,used in access control mechanisms,1.0,1,1.0,1.2820253447998087,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,a fundamental oop concept,2.0,2,2.0,1.2998094738868637,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,hides internal implementation details,2.0,4,3.0,0.0,1.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,hides internal implementation details,0.0,3,1.5,0.0,1.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,hides internal implementation details,1.0,1,1.0,0.0,1.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,opposite of abstraction,3.0,3,3.0,1.3538079853966047,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,always makes data public,1.0,1,1.0,1.253592905843561,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,allows direct data access,4.0,4,4.0,1.2431061038071383,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,only used in java,5.0,2,3.5,1.3477575181373593,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,irrelevant in python,1.0,5,3.0,1.3324007303315246,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,increases security risks,5.0,3,4.0,1.2668784336989558,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,used for increasing memory usage,1.0,3,2.0,1.294038271672357,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,similar to recursion,2.0,3,2.5,1.3086206567340506,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,a design pattern,3.0,2,2.5,1.3140088881961642,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,does not impact code maintainability,2.0,1,1.5,1.2491943280795483,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,only applicable to variables,1.0,0,0.5,1.2936866066263268,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,improves time complexity of algorithms,4.0,4,4.0,1.2853439733066812,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,a database indexing technique,3.0,0,1.5,1.3054751162642781,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,not related to object-oriented programming,4.0,4,4.0,1.2884257667663268,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,a method of encryption,3.0,4,3.5,1.3205071997436255,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,does not help in reducing bugs,1.0,5,3.0,1.285380679882141,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,same as inheritance,2.0,0,1.0,1.3485902664999467,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,always requires getters and setters,4.0,1,2.5,1.3437960438722965,0.0
17.3,Which principle does encapsulation follow in OOP?,hides internal implementation details,used only in functional programming,1.0,2,1.5,1.3176547928564182,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,allows dynamic function invocation,5.0,1,3.0,1.0704407011179298,0.059516688391272915
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,supports callback mechanisms,4.0,1,2.5,1.2572600808817531,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,enables runtime behavior changes,2.0,3,2.5,1.274060424295187,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,used in event-driven programming,1.0,5,3.0,1.2584477850780533,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,helps in implementing polymorphism,3.0,3,3.0,1.2501821860321554,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,can be passed as function parameters,4.0,3,3.5,1.0603845442636102,0.07330640165763029
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,used in function tables,3.0,1,2.0,1.0638834319323616,0.07259888673251538
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,helps in efficient system programming,2.0,4,3.0,1.2485533743766226,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,enables flexibility in execution flow,3.0,0,1.5,1.2279998521224953,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,used in low-level operations,1.0,3,2.0,1.2627724656485233,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,to store the address of a function and call it dynamically,3.0,2,2.5,0.0,1.0000000000000004
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,to store the address of a function and call it dynamically,1.0,2,1.5,0.0,1.0000000000000004
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,to store the address of a function and call it dynamically,4.0,0,2.0,0.0,1.0000000000000004
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,a pointer to a variable,1.0,4,2.5,1.3126129151076986,0.07636043396258976
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,always points to nullptr,3.0,5,4.0,1.3147372793876515,0.04285488422867718
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,only used in java,1.0,0,0.5,1.2304940549563592,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,increases memory allocation,3.0,1,2.0,1.3161559613377052,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,slows down program execution,5.0,0,2.5,1.291339192509691,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,cannot be used with classes,2.0,2,2.0,1.2623776542276974,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,only used for recursive functions,1.0,4,2.5,1.1371471151377333,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,a feature of functional programming,2.0,5,3.5,1.2733941035840926,0.034302175795832696
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,used only in embedded systems,0.0,2,1.0,1.2145266529135699,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,can point to multiple functions at once,3.0,3,3.0,1.163413707759323,0.043883225699215954
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,cannot be assigned dynamically,1.0,4,2.5,1.0915612689096719,0.24314249396519924
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,works only with global functions,3.0,0,1.5,1.1639845291375892,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,always requires a return type,2.0,1,1.5,1.2577038146971726,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,cannot be used with function templates,5.0,4,4.5,1.0483167417763057,0.0588321002770383
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,not compatible with arrays,1.0,3,2.0,1.2158704285542854,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,used only in network programming,2.0,2,2.0,1.2256192643691848,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,cannot be stored in a structure,5.0,1,3.0,1.1948877913022216,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,causes segmentation faults always,2.0,3,2.5,1.2633646177918516,0.0
17.4,What is the main purpose of a function pointer in C++?,to store the address of a function and call it dynamically,reduces security in c++,1.0,5,3.0,1.242139743046698,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,supports multiple inheritance,3.0,2,2.5,1.0315901137627645,0.2219893639325247
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,improves code modularity,4.0,0,2.0,1.2702719902531117,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,enables polymorphism,4.0,1,2.5,1.2506037669910977,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,defines behavior without implementation,4.0,0,2.0,1.1790255097303814,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,enhances code reusability,3.0,2,2.5,1.239882890575469,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,separates interface from implementation,0.0,1,0.5,1.1914359242238968,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,supports dependency injection,3.0,3,3.0,1.2631105872345403,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,used for designing apis,4.0,0,2.0,1.0802779113615062,0.06230451642752879
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,helps in maintaining abstraction,5.0,1,3.0,1.2231395752977954,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,provides loose coupling,1.0,5,3.0,1.093185336504147,0.16940898546666994
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,provides a contract for multiple classes to implement,0.0,2,1.0,0.0,1.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,provides a contract for multiple classes to implement,2.0,2,2.0,0.0,1.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,provides a contract for multiple classes to implement,3.0,3,3.0,0.0,1.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,a replacement for classes,0.0,1,0.5,0.8433908836450602,0.27337976306016043
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,increases code complexity,4.0,4,4.0,1.2987372432240232,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,does not support multiple inheritance,3.0,4,3.5,1.0551600037834334,0.18788265950109603
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,forces class instantiation,4.0,5,4.5,1.2419504838751254,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,slows down program execution,0.0,0,0.0,1.246530382504495,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,only used in gui development,3.0,4,3.5,1.2482043204403572,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,not applicable in large-scale systems,4.0,1,2.5,1.2372789166047002,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,cannot have static methods,4.0,3,3.5,1.2946788074596811,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,used only in java swing,5.0,3,4.0,1.2686155143321112,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,cannot be extended,3.0,5,4.0,1.290550758858221,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,requires constructor implementation,5.0,2,3.5,1.1767866441489196,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,implements all methods automatically,0.0,2,1.0,1.18563702352174,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,cannot be used with lambda expressions,1.0,1,1.0,1.2800081830507828,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,a subclass of abstract classes,3.0,4,3.5,1.1400173109342013,0.18001521236670653
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,needs to be instantiated directly,2.0,3,2.5,1.2352117058752952,0.036369337057057645
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,used for database connectivity only,1.0,4,2.5,1.0588876963623894,0.06232619202661758
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,supports only primitive data types,1.0,0,0.5,1.2110683149000543,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,cannot be used with generics,5.0,1,3.0,1.2996867783010015,0.0
17.5,What is the key advantage of using an interface in Java?,provides a contract for multiple classes to implement,not recommended for oop,2.0,4,3.0,1.0995849916197356,0.0672887980892808
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,used to create private variables,0.0,4,2.0,1.2963724618245729,0.027215134745015128
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,helps in functional programming,2.0,5,3.5,1.1951018321696985,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,supports data encapsulation,4.0,4,4.0,1.2966491191845133,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,stores lexical scope references,5.0,4,4.5,1.2197654832800189,0.09415078716534034
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,avoids unnecessary global variables,5.0,3,4.0,1.2859994872209466,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,common in event handlers,4.0,4,4.0,1.2587929574932324,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,used in javascript frameworks,4.0,4,4.0,1.2576855539912886,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,helps in asynchronous programming,4.0,5,4.5,1.2516033327969178,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,enables higher-order functions,5.0,4,4.5,1.233243381907448,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,improves memory efficiency,0.0,4,2.0,1.2998974974924877,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,a function that retains access to its outer scope even after the outer function has executed,2.0,3,2.5,0.0,1.0000000000000002
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,a function that retains access to its outer scope even after the outer function has executed,1.0,2,1.5,0.0,1.0000000000000002
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,a function that retains access to its outer scope even after the outer function has executed,1.0,2,1.5,0.0,1.0000000000000002
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,a built-in javascript class,4.0,2,3.0,1.342631067490599,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,a method of garbage collection,2.0,3,2.5,1.3268567235814692,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,always returns a function,4.0,4,4.0,1.0841337414325258,0.10587449852047726
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,does not support variable binding,2.0,4,3.0,1.205871839581067,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,can only access global variables,3.0,4,3.5,1.1471840804707014,0.10568792742211992
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,works only with var,3.0,1,2.0,1.2194419418954319,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,cannot be used with arrow functions,0.0,1,0.5,1.1599980178954643,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,a new es6 feature,2.0,3,2.5,1.28006446620924,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,replaces the need for objects,4.0,0,2.0,1.1180561323176779,0.012742347040208187
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,increases memory usage,4.0,1,2.5,1.3017845702186888,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,only used in node.js,4.0,3,3.5,1.196159273347477,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,cannot be created inside loops,3.0,3,3.0,1.2424464322529607,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,has no impact on performance,5.0,2,3.5,1.1310418930735566,0.06211194401336525
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,used only in frontend development,3.0,1,2.0,1.2008142721845139,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,requires the use of this,1.0,1,1.0,1.1114016836140141,0.014797297874663627
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,a function without a return statement,5.0,5,5.0,1.0867706252943967,0.08327651746004455
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,forces immediate execution,3.0,3,3.0,1.2831622612900293,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,cannot be passed as arguments,4.0,1,2.5,1.2756806471385493,0.0
17.6,What is a closure in JavaScript?,a function that retains access to its outer scope even after the outer function has executed,replaces all function expressions,2.0,0,1.0,1.0648445600443566,0.07231187808518907
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,occurs in concurrent execution,4.0,0,2.0,1.1958932720202402,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,can cause unpredictable behavior,0.0,3,1.5,1.2586568412832366,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,happens due to shared resource access,2.0,0,1.0,1.2463710540196997,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,avoided using locks or synchronization,4.0,3,3.5,1.2812333403604932,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,leads to inconsistent data,4.0,3,3.5,1.316165763758183,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,common in operating systems,1.0,4,2.5,1.2243970809702278,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,can cause data corruption,5.0,4,4.5,1.2948082310810682,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,prevented using atomic operations,5.0,0,2.5,1.2962162081467397,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,can be detected using debugging tools,0.0,2,1.0,1.2551425136116867,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,leads to unexpected program crashes,5.0,1,3.0,1.18593272270668,0.06484876826026943
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a situation where the outcome of a program depends on the non-deterministic ordering of threads,2.0,3,2.5,0.0,1.0000000000000002
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a situation where the outcome of a program depends on the non-deterministic ordering of threads,4.0,4,4.0,0.0,1.0000000000000002
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a situation where the outcome of a program depends on the non-deterministic ordering of threads,3.0,5,4.0,0.0,1.0000000000000002
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a syntax error,5.0,2,3.5,1.3416814966100332,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a type of infinite loop,2.0,4,3.0,1.2824837999601462,0.053124632489433846
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a function call with high complexity,0.0,1,0.5,1.2615130774638814,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a feature of oop,4.0,2,3.0,1.3361151396418924,0.048538205462700504
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,used for improving performance,1.0,3,2.0,1.2427906624221237,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,cannot occur in java,0.0,4,2.0,1.2357595862582962,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a bug caused by recursion,4.0,3,3.5,1.2838313963167995,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,always happens in single-threaded programs,0.0,2,1.0,1.116334497822572,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,can be solved using exceptions,3.0,5,4.0,1.2490743811059561,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,only occurs in python,5.0,1,3.0,1.1940942615355148,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a type of sorting algorithm,2.0,2,2.0,1.2747433170896512,0.05988301422943262
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,used in database transactions,2.0,2,2.0,1.2099255781956408,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,cannot be fixed using semaphores,5.0,4,4.5,1.258525467098271,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,happens due to memory leaks,4.0,1,2.5,1.2654268403486013,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a compiler optimization technique,3.0,5,4.0,1.3275940792165486,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,occurs only in mobile applications,3.0,1,2.0,1.1898621579456372,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,requires hardware acceleration,3.0,1,2.0,1.297022005752254,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,a method to improve caching,4.0,0,2.0,1.2908977312654382,0.0
17.7,What is a race condition in multithreading?,a situation where the outcome of a program depends on the non-deterministic ordering of threads,an intentional feature of parallelism,3.0,5,4.0,1.2758755345760193,0.03463480628766592
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",causes increased memory usage,3.0,3,3.0,1.1744641200800858,0.05785644004110424
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",common in languages without garbage collection,0.0,2,1.0,1.2358791482126832,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",leads to reduced system performance,1.0,4,2.5,1.23906611091501,0.02223094557909129
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",happens when references to objects are lost,2.0,3,2.5,1.1816721043579272,0.022652753175611058
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a major issue in embedded systems,3.0,0,1.5,1.1869980855897626,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",detected using memory profiling tools,5.0,2,3.5,1.156367086638231,0.05050327664272541
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",can be fixed using smart pointers in c++,0.0,2,1.0,1.2067752500435536,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",occurs due to improper dynamic memory allocation,2.0,4,3.0,1.0607486953872434,0.06797566425598989
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",can eventually crash the system,3.0,3,3.0,1.206598945118023,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",common in long-running applications,3.0,3,3.0,1.2604328323587897,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources","a situation where memory is allocated but not deallocated, leading to wasted resources",2.0,3,2.5,0.0,1.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources","a situation where memory is allocated but not deallocated, leading to wasted resources",4.0,3,3.5,0.0,1.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources","a situation where memory is allocated but not deallocated, leading to wasted resources",3.0,0,1.5,0.0,1.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources","a situation where memory is allocated but not deallocated, leading to wasted resources",3.0,2,2.5,0.0,1.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",the same as a segmentation fault,2.0,4,3.0,1.2337837631506423,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",an issue only in compiled languages,0.0,4,2.0,1.176308601592864,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a feature of garbage collection,3.0,5,4.0,1.3284201170598104,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",only affects multi-threaded programs,5.0,0,2.5,1.1964511443174575,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",always leads to immediate crashes,4.0,1,2.5,1.2144500286553688,0.022171223434389643
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",only happens in interpreted languages,4.0,0,2.0,1.1736676354048003,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",used for increasing performance,5.0,0,2.5,1.23185475371064,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",cannot be prevented,4.0,2,3.0,1.2457040211667987,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a type of file corruption,2.0,1,1.5,1.3012424586756781,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a bug in sorting algorithms,3.0,3,3.0,1.2539505033409726,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a problem specific to ai models,0.0,2,1.0,1.2824568747204848,0.02335630782075588
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a threading issue,2.0,3,2.5,1.3063641536706718,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",can be solved by closing the program,5.0,3,4.0,1.2102815868962717,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",happens only with large datasets,1.0,3,2.0,1.1796205174421983,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a result of incorrect syntax,4.0,4,4.0,1.3039407237196927,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a feature of functional programming,1.0,4,2.5,1.3375681627169838,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a security vulnerability,2.0,5,3.5,1.3257155037605173,0.0
17.8,What is a memory leak?,"a situation where memory is allocated but not deallocated, leading to wasted resources",a problem exclusive to mobile devices,4.0,4,4.0,1.287439758614205,0.021011881925844973
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,has a time complexity of o(n) for nearly sorted data,0.0,5,2.5,1.3057371483020643,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,works well for small datasets,5.0,5,5.0,1.311985470395463,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,stable sorting algorithm,3.0,5,4.0,1.2524134040482664,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,simple to implement,3.0,2,2.5,1.2612585174742081,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,uses in-place sorting,2.0,0,1.0,1.220706381314332,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,efficient in online algorithms,2.0,0,1.0,1.3046011545127287,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,good for adaptive sorting,4.0,4,4.0,1.2390960182601287,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,performs well when only a few elements are misplaced,3.0,2,2.5,1.2795155979222874,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,no additional memory required,0.0,4,2.0,1.2709216464858375,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,used in hybrid sorting algorithms like timsort,1.0,2,1.5,1.2280411344558875,0.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,insertion sort,3.0,3,3.0,0.0,1.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,insertion sort,0.0,4,2.0,0.0,1.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,insertion sort,4.0,2,3.0,0.0,1.0
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,bubble sort,5.0,4,4.5,0.6832910476774127,0.39501048334951605
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,selection sort,1.0,4,2.5,0.6450046488645277,0.3648545291006769
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,quick sort,2.0,3,2.5,0.6648195431823772,0.31842858772781646
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,merge sort,4.0,2,3.0,0.7046516420069029,0.37105998441958365
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,heap sort,1.0,4,2.5,0.6894590289435246,0.3379068448475438
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,radix sort,2.0,4,3.0,0.6228075118345856,0.31842858772781646
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,bucket sort,3.0,1,2.0,0.6678468402715493,0.29466712242164317
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,shell sort,1.0,5,3.0,0.6638423447521901,0.30861378753711544
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,counting sort,4.0,0,2.0,0.658746876374601,0.32941772950488335
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,cocktail sort,5.0,0,2.5,0.6842783828510062,0.29466712242164317
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,tim sort,3.0,3,3.0,0.6846642984575254,0.3023847339778426
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,bitonic sort,1.0,1,1.0,0.6623552619681871,0.28435563969553057
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,cycle sort,1.0,2,1.5,0.6651488219778978,0.38409638276802077
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,flash sort,3.0,3,3.0,0.6262796143890087,0.28435563969553057
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,comb sort,2.0,3,2.5,0.6562128563491076,0.29466712242164317
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,pigeonhole sort,2.0,4,3.0,0.6843858988286093,0.28435563969553057
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,bogo sort,4.0,1,2.5,0.6623552619681871,0.29466712242164317
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,sleep sort,3.0,2,2.5,0.6802986609739615,0.28435563969553057
17.9,Which sorting algorithm is the best choice for nearly sorted data?,insertion sort,stooge sort,3.0,2,2.5,0.688021803365032,0.28435563969553057
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,used in database indexing,0.0,2,1.0,1.1919976740606368,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,supports efficient range queries,1.0,1,1.0,1.271888367783893,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,balanced at all times,3.0,1,2.0,1.2461047622243866,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,designed for large datasets,2.0,4,3.0,1.1151456826346606,0.062314052642033955
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,reduces the number of disk i/o operations,3.0,1,2.0,0.7531285831107759,0.5382524342831129
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,supports multi-level storage structures,1.0,1,1.0,1.2344462145277026,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,works well for block-based storage,2.0,1,1.5,1.0966321105877712,0.05517606409891843
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,commonly used in file systems,5.0,1,3.0,1.2067039816053504,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,provides logarithmic search time,3.0,1,2.0,1.209773423215941,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,handles large branching factors,0.0,1,0.5,1.2819710406812095,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,reduces the height of the tree for faster disk access,2.0,2,2.0,0.0,1.0000000000000002
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,reduces the height of the tree for faster disk access,4.0,1,2.5,0.0,1.0000000000000002
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,reduces the height of the tree for faster disk access,2.0,2,2.0,0.0,1.0000000000000002
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,uses more memory than a bst,5.0,4,4.5,1.2391165557291774,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,always has a height of 1,3.0,4,3.5,1.1468280829412205,0.25247155193085447
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,works only with sorted data,4.0,2,3.0,1.2270012938288033,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,faster than a hash table for lookups,4.0,3,3.5,0.995266426328419,0.2037973521560629
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,cannot handle duplicate values,3.0,2,2.5,1.3028131898231219,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,a type of graph,1.0,4,2.5,1.2864579763843986,0.03855392208151001
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,limited to integer values,3.0,0,1.5,1.2854481856249909,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,cannot be used for caching,4.0,1,2.5,1.1040479139886685,0.06753100573379825
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,slower than linked lists for insertion,3.0,0,1.5,1.0711646004830424,0.0608890358812623
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,requires avl tree properties,2.0,0,1.0,1.1386161755110404,0.08538964806607642
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,uses recursion only for searching,1.0,1,1.0,1.073933114325961,0.06449137675383784
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,not used in file systems,4.0,3,3.5,1.1966017637196933,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,inefficient for large-scale applications,1.0,2,1.5,1.106697729279214,0.0494330489949219
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,designed for linear search,1.0,1,1.0,1.123567287979697,0.0657094914048798
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,cannot be balanced dynamically,1.0,3,2.0,1.2588813112112158,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,used only in machine learning,3.0,5,4.0,1.1967425363131077,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,a type of self-organizing list,4.0,5,4.5,1.2842514841243953,0.02687343114980942
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,requires additional hash maps,4.0,3,3.5,1.270382932335023,0.0
18.1,What is the primary advantage of using a B-Tree over a Binary Search Tree (BST)?,reduces the height of the tree for faster disk access,a variation of fibonacci heap,3.0,4,3.5,1.313904820040712,0.025995999155300528
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is compares memory addresses,1.0,1,1.0,1.3125631283525498,0.040318451251919435
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",none,1.0,2,1.5,1.3371024312958166,0.0
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is is used for checking none,2.0,3,2.5,1.2317484756934836,0.07495148058567558
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is works well with singleton objects,1.0,5,3.0,1.1834562994336382,0.03255942469510073
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",none,3.0,3,3.0,1.3371024312958166,0.0
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is does not check object content,3.0,3,3.0,1.0071006587273068,0.1217027400628822
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is returns true for the same object reference,4.0,1,2.5,1.1132503430419975,0.12596593978611176
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality","""is"" checks object identity, while  ""=="" checks value equality",5.0,4,4.5,0.0,1.0000000000000002
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is is faster than == in some cases,3.0,0,1.5,1.2894943078923544,0.06875266628809694
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",used differently in mutable vs immutable types,5.0,4,4.5,1.2810944554759602,0.0
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality","""is"" checks object identity, while  ""=="" checks value equality",2.0,0,1.0,0.0,1.0000000000000002
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality","""is"" checks object identity, while  ""=="" checks value equality",1.0,2,1.5,0.0,1.0000000000000002
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality","""is"" checks object identity, while  ""=="" checks value equality",1.0,2,1.5,0.0,1.0000000000000002
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is and == are the same,4.0,2,3.0,1.3054043235489425,0.06498544303700525
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is is used only for numbers,4.0,3,3.5,1.282763250933706,0.08546423588626507
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality","""is"" checks object identity, while  ""=="" checks value equality",1.0,2,1.5,0.0,1.0000000000000002
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is is used only in python 3,5.0,5,5.0,1.2950151537917718,0.0958685765383372
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality","""is"" checks object identity, while  ""=="" checks value equality",2.0,3,2.5,0.0,1.0000000000000002
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is works only with strings,4.0,2,3.0,1.2779376252837258,0.04779714680232445
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality","""is"" checks object identity, while  ""=="" checks value equality",3.0,2,2.5,0.0,1.0000000000000002
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is checks the length of an object,3.0,4,3.5,0.8707447053535352,0.5264340786472759
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is works only with integers,2.0,2,2.0,1.2806669394393915,0.041352270969163864
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality","""is"" checks object identity, while  ""=="" checks value equality",1.0,4,2.5,0.0,1.0000000000000002
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is is a logical operator,1.0,2,1.5,1.3425802413620351,0.08171001651172694
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is checks if a variable is empty,4.0,1,2.5,1.0846386734409126,0.3869153796629965
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is checks if a variable is empty,3.0,1,2.0,1.0846386734409126,0.3869153796629965
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is checks if a variable is empty,4.0,4,4.0,1.0846386734409126,0.3869153796629965
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is checks if a variable is empty,3.0,3,3.0,1.0846386734409126,0.3869153796629965
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is checks if a variable is empty,2.0,1,1.5,1.0846386734409126,0.3869153796629965
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is checks if a variable is empty,4.0,0,2.0,1.0846386734409126,0.3869153796629965
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is checks if a variable is empty,3.0,2,2.5,1.0846386734409126,0.3869153796629965
18.2,Reduces the height of the tree for faster disk access,"""is"" checks object identity, while  ""=="" checks value equality",is is the same as in,1.0,4,2.5,1.2993429135050372,0.10511550773754014
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,used to access instance attributes,1.0,1,1.0,1.0120534822947005,0.2933293091320882
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,allows instance methods to modify attributes,0.0,3,1.5,1.0315116607497647,0.22360597382459432
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,passed as the first parameter in instance methods,4.0,1,2.5,0.9189026339247937,0.2264675863801207
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,not required in static methods,0.0,1,0.5,1.2042698916845025,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,helps in differentiating instance variables from local variables,1.0,2,1.5,1.0633242992392953,0.1430064584247958
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,used in object-oriented programming,2.0,4,3.0,1.1724073848716796,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,required for accessing instance-level data,4.0,1,2.5,1.2562764014358057,0.18125684596056688
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,implicitly passed when calling instance methods,3.0,3,3.0,1.0471450495595938,0.17130624222762156
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,helps in encapsulation,2.0,1,1.5,1.1811891627340831,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,enables method chaining,4.0,3,3.5,1.2958478209780504,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,enables method chaining,4.0,3,3.5,1.2958478209780504,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,enables method chaining,4.0,5,4.5,1.2958478209780504,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,enables method chaining,4.0,4,4.0,1.2958478209780504,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,a reserved keyword in python,0.0,0,0.0,1.2104479504103076,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,works like this in javascript,2.0,4,3.0,1.1343689277375522,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,refers to the class itself,3.0,1,2.0,0.41785735183203554,0.6653044808462416
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,used for defining private variables,4.0,4,4.0,1.231263242730549,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,required in all functions,1.0,3,2.0,1.1755482734400833,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,used for global variables,2.0,3,2.5,1.2359610874337141,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,used only in constructors,3.0,1,2.0,1.1611012951858874,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,can be replaced with any keyword,3.0,3,3.0,1.2364319950460894,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,cannot be used in class methods,1.0,2,1.5,0.9908389333011469,0.1397922977417925
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,works only in single inheritance,1.0,4,2.5,1.1666545328177969,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,defines static variables,5.0,3,4.0,1.2253319259525068,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,required in lambda functions,4.0,1,2.5,1.206233541110327,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,only used in python 2,5.0,3,4.0,1.1784494705334938,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,a built-in python function,1.0,5,3.0,1.3409392349770424,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,makes variables immutable,2.0,3,2.5,1.2916130804588473,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,used to import modules,2.0,3,2.5,1.2888863252580727,0.048000079179616836
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,cannot be overridden,4.0,1,2.5,1.2799416568781674,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,only works in multiple inheritance,0.0,3,1.5,1.178680432477955,0.0
18.3,What is the primary purpose of Python's self keyword in class methods?,refers to the instance of the class,works like super(),4.0,4,4.0,1.2692604932772211,0.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,lambda functions return function objects,4.0,1,2.5,inf,0.15103215027178768
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,lambda functions are anonymous,1.0,1,1.0,inf,0.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,equivalent to def function definitions,4.0,2,3.0,inf,0.12610047549465064
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,used for concise function definitions,1.0,1,1.0,inf,0.14068330858725536
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,can take multiple arguments,1.0,3,2.0,inf,0.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,can be used as arguments in higher-order functions,0.0,4,2.0,inf,0.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,commonly used in functional programming,2.0,1,1.5,inf,0.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,have no explicit return statement,2.0,0,1.0,inf,0.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,can be assigned to variables,5.0,2,3.5,inf,0.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,can be used in list comprehensions,3.0,2,2.5,inf,0.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'function'>,4.0,5,4.5,inf,1.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'function'>,3.0,2,2.5,inf,1.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'function'>,2.0,3,2.5,inf,1.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'function'>,2.0,3,2.5,inf,1.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'function'>,4.0,2,3.0,inf,1.0
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'nonetype'>,3.0,3,3.0,inf,0.29844692853499666
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'module'>,3.0,1,2.0,inf,0.34565083963105087
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'list'>,2.0,1,1.5,inf,0.5528521014406066
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'tuple'>,3.0,3,3.0,inf,0.29844692853499666
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'set'>,1.0,4,2.5,inf,0.45605949960187897
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'dict'>,2.0,4,3.0,inf,0.29844692853499666
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'int'>,4.0,2,3.0,inf,0.4094367077819057
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'str'>,0.0,5,2.5,inf,0.3186604853958955
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'bool'>,5.0,3,4.0,inf,0.29844692853499666
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'object'>,2.0,2,2.0,inf,0.5118932382599467
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'generator'>,3.0,1,2.0,inf,0.4059266679257916
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'range'>,4.0,3,3.5,inf,0.3414825590850836
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'coroutine'>,4.0,2,3.0,inf,0.29844692853499666
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'class'>,3.0,1,2.0,inf,0.7853437539606831
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'instance'>,0.0,4,2.0,inf,0.4842106976395579
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'callable'>,4.0,5,4.5,inf,0.29844692853499666
18.4,What is the output of print(type(lambda x: x)) in Python?,<class 'function'>,<class 'super'>,2.0,0,1.0,inf,0.34945599872777855
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,used in generator functions,3.0,5,4.0,1.012958239480997,0.3216890519008813
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,allows function state retention,0.0,2,1.0,1.1272836975503622,0.04709464592314848
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,can be used in loops for iteration,1.0,4,2.5,1.247563345591141,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,returns a generator object,2.0,3,2.5,0.925014722864431,0.5223719719643607
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,more memory efficient than return,2.0,1,1.5,1.2173811218328918,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,used for streaming large datasets,4.0,3,3.5,1.2977050847394787,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,supports lazy evaluation,1.0,1,1.0,1.3233013707216468,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,can be used multiple times in a function,3.0,2,2.5,1.071560023408028,0.05875016919335771
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,resumes execution from where it paused,3.0,1,2.0,0.8437270503002817,0.2021266007992722
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,does not terminate function execution,3.0,5,4.0,0.9363414079004883,0.2511528694273931
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,returns a value from a generator function and pauses execution,4.0,2,3.0,0.0,1.0000000000000002
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,returns a value from a generator function and pauses execution,3.0,2,2.5,0.0,1.0000000000000002
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,returns a value from a generator function and pauses execution,0.0,3,1.5,0.0,1.0000000000000002
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,used only for recursion,3.0,3,3.0,1.2670756195931503,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,a replacement for return,0.0,3,1.5,1.2203294954146693,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,stops function execution permanently,2.0,4,3.0,0.9071794879539365,0.21731091971337585
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,cannot be used with return,4.0,0,2.0,1.2349527649666217,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,works only with lists,0.0,0,0.0,1.3026734266946418,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,cannot return multiple values,0.0,4,2.0,1.2011344843235405,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,only available in python 3,2.0,1,1.5,1.288198610862572,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,slows down function execution,4.0,2,3.0,0.8989924088470465,0.21987324687414392
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,a built-in python function,1.0,1,1.0,1.1611789809518698,0.06691635990512056
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,works only with integers,2.0,2,2.0,1.2913421304242072,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,cannot be used inside loops,3.0,5,4.0,1.2859728108130777,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,used for defining static variables,4.0,4,4.0,1.2730501376298728,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,makes a function execute only once,4.0,1,2.5,1.034233078800466,0.05941734489601403
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,creates an infinite loop,4.0,4,4.0,1.3092386514749978,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,used only in data science applications,3.0,4,3.5,1.2765752018139518,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,does not support iteration,2.0,2,2.0,1.2981934639984074,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,requires explicit memory management,2.0,2,2.0,1.3045227521313314,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,cannot be combined with try-except,4.0,5,4.5,1.315914783534557,0.0
18.5,What is the purpose of the yield keyword in Python?,returns a value from a generator function and pauses execution,used for exception handling,0.0,2,1.0,1.309827147661886,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,can be called without creating an instance,3.0,4,3.5,0.9586439883540393,0.18570395411502205
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,does not modify class or instance state,4.0,2,3.0,0.6738726290739705,0.4161332296916425
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,similar to a regular function inside a class,3.0,0,1.5,1.1521136706299056,0.07243218603325519
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,can be accessed using the class name,4.0,1,2.5,1.052190208988765,0.09012551570628552
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,cannot modify instance variables,4.0,2,3.0,1.1265737807364473,0.13871802767092195
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,used for utility functions within a class,2.0,1,1.5,1.1293272682021749,0.0687318161939774
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,does not take self or cls as a parameter,2.0,1,1.5,0.8791966131382924,0.19344954246104532
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,common in helper methods,4.0,4,4.0,1.232127000985925,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,works with all class instances,4.0,3,3.5,1.0827169672197674,0.07732151963492948
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,does not require explicit object creation,0.0,5,2.5,0.9916487759115945,0.16945273291069746
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,defines a method that does not receive an instance or class reference,3.0,0,1.5,0.0,1.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,defines a method that does not receive an instance or class reference,0.0,1,0.5,0.0,1.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,defines a method that does not receive an instance or class reference,2.0,1,1.5,0.0,1.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,defines a static variable,3.0,2,2.5,1.1678696907417492,0.23812623193820134
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,works only in python 2,1.0,4,2.5,1.2266067850961153,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,requires an instance of the class,0.0,1,0.5,0.8490117014229092,0.3258104591258042
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,must always be overridden,2.0,2,2.0,1.2269865475380044,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,equivalent to @classmethod,1.0,1,1.0,1.2720808836370252,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,only works with self,1.0,4,2.5,1.1984488568878713,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,can modify class variables,1.0,1,1.0,1.1011938731222928,0.09721172516105957
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,a built-in function in python,0.0,0,0.0,1.2938053122681108,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,requires manual memory management,1.0,0,0.5,1.2521316160678646,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,used only in data science,5.0,5,5.0,1.2173175732215988,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,can only be used inside constructors,5.0,3,4.0,1.1840332949910797,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,works like super(),4.0,2,3.0,1.2336499038821067,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,only available in python 3,2.0,3,2.5,1.2327693644651907,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,slows down program execution,2.0,4,3.0,1.2790681832296076,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,a type of lambda function,2.0,0,1.0,1.2590501013760347,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,works only in multiple inheritance,3.0,4,3.5,1.2112983952585388,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,used for recursion,3.0,4,3.5,1.2290705489721099,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,replaces the need for global variables,2.0,3,2.5,1.199277789805107,0.0
18.6,What does the @staticmethod decorator do in Python?,defines a method that does not receive an instance or class reference,used only in metaclasses,5.0,2,3.5,1.190054991696621,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,uses a hash table for lookups,3.0,5,4.0,1.3136126908600891,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,average-case complexity is constant time,3.0,5,4.0,1.2994169328612257,0.404019813842605
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,worst-case complexity can be o(n),3.0,4,3.5,1.3102319452776718,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,key-value pairs enable fast access,4.0,4,4.0,1.3188810790735837,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,hash collisions may affect performance,1.0,1,1.0,1.3128856821802997,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,faster than searching a list,0.0,1,0.5,1.2526013352209187,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,implemented using an open addressing technique,2.0,1,1.5,1.3344252633616878,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,common in caching mechanisms,1.0,3,2.0,1.299926579198189,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,used for fast membership testing,2.0,2,2.0,1.2989597011141765,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,supports dynamic resizing,1.0,1,1.0,1.373496165487825,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(1) on average,2.0,2,2.0,0.0,1.0000000000000002
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(1) on average,2.0,4,3.0,0.0,1.0000000000000002
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(1) on average,2.0,2,2.0,0.0,1.0000000000000002
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(log n),1.0,4,2.5,inf,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(n^2),3.0,0,1.5,inf,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(n log n),3.0,1,2.0,1.2894922599794465,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(2^n),5.0,4,4.5,inf,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(1) in all cases,3.0,5,4.0,1.238356565999574,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,o(log log n),3.0,4,3.5,1.2894922599794465,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,slower than a linked list lookup,2.0,5,3.5,1.2571504525644206,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,requires sorting before access,3.0,5,4.0,1.2780152904064206,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,implemented as a balanced tree,4.0,2,3.0,1.3238504449182686,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,always has a fixed size,3.0,4,3.5,1.293745367947635,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,does not support iteration,1.0,2,1.5,1.3225351979159803,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,can only store string keys,5.0,0,2.5,1.3051982123218686,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,more memory efficient than lists,5.0,1,3.0,1.2626879697613267,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,cannot handle duplicate keys,3.0,2,2.5,1.3594954679796616,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,requires manual memory management,1.0,4,2.5,1.340377657388006,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,cannot be used as a cache,5.0,2,3.5,1.330639750755542,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,slower than an array for lookups,3.0,2,2.5,1.2488059899625847,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,uses a linked list internally,3.0,2,2.5,1.3261163758767713,0.0
18.7,What is the time complexity of accessing an element in a Python dictionary?,o(1) on average,used only for storing configuration files,1.0,4,2.5,1.2965555208777417,0.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",r' mode is for reading,0.0,3,1.5,inf,0.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",file must exist before opening in 'r' mode,0.0,0,0.0,inf,0.14704626377733523
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",raises filenotfounderror if the file does not exist,3.0,4,3.5,inf,0.14750438352713235
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",default mode is 'r' if omitted,4.0,4,4.0,inf,0.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",can be used inside a with statement,1.0,1,1.0,inf,0.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",returns a file object,1.0,2,1.5,inf,0.30975995482375185
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",allows iteration over file lines,2.0,3,2.5,inf,0.1742250502461278
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",can read both text and binary files with different modes,1.0,2,1.5,inf,0.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",rb' is used for reading binary files,3.0,5,4.0,inf,0.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",must be closed after reading unless using with,4.0,2,3.0,inf,0.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'r')",1.0,5,3.0,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'r')",4.0,4,4.0,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'r')",2.0,1,1.5,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'r')",3.0,4,3.5,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'a')",1.0,2,1.5,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'x')",3.0,3,3.0,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'r+')",3.0,3,3.0,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'wb')",0.0,3,1.5,inf,0.7287105455813083
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'w+', 'r')",5.0,1,3.0,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","read.open('file.txt', 'r')",2.0,0,1.0,inf,0.8026737443934018
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","file.open('file.txt', 'r')",0.0,1,0.5,inf,0.944225503385962
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","openfile('file.txt', 'r')",2.0,1,1.5,inf,0.5425524007214255
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","with openfile('file.txt', 'r') as f:",1.0,4,2.5,inf,0.4845943277692306
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","os.open('file.txt', 'r')",1.0,4,2.5,inf,0.7545571968304984
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","import open('file.txt', 'r')",1.0,1,1.0,inf,0.7437453922757058
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","openfile('file.txt', 'rt')",0.0,1,0.5,inf,0.42168041755215385
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')",f = open('file.txt'),1.0,3,2.0,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'text')",3.0,4,3.5,inf,0.7630171455214234
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'rtf')",0.0,3,1.5,inf,0.7287105455813083
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 'file_read')",0.0,4,2.0,inf,0.7287105455813083
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","open('file.txt', 't')",4.0,1,2.5,inf,1.0
18.8,Which of the following is a correct way to open a file in Python for reading?,"open('file.txt', 'r')","openfile('file.txt', 'rb')",4.0,2,3.0,inf,0.4289900372633366
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the program stops execution,2.0,1,1.5,0.8601490524790073,0.2026652708012477
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,displays an error message,2.0,3,2.5,1.2874632721405166,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,python generates a traceback,2.0,4,3.0,1.1271412589315608,0.3031108287910125
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,unhandled exceptions cause crashes,3.0,4,3.5,1.332681321562659,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,can be prevented using try-except,4.0,4,4.0,1.2093614456093182,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,logs the error message by default,0.0,3,1.5,1.0589490504105352,0.018111047692426767
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,developers can catch exceptions manually,3.0,0,1.5,1.2499186859999993,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,preventable using proper exception handling,4.0,4,4.0,1.2940159550962491,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,exception handling improves program robustness,4.0,5,4.5,1.065066790545356,0.10033985991407868
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,can be caught using except exception,2.0,5,3.5,1.2193204870433254,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the program will terminate with a traceback,2.0,1,1.5,0.0,1.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the program will terminate with a traceback,3.0,1,2.0,0.0,1.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the program will terminate with a traceback,3.0,3,3.0,0.0,1.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the program continues execution,4.0,4,4.0,0.7991978906581435,0.17442895700764716
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the error is ignored automatically,4.0,4,4.0,1.0476093669293296,0.022243116529976806
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,python logs it silently without stopping,3.0,4,3.5,1.263846918196345,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the operating system handles it,1.0,2,1.5,1.0436879280790903,0.019505549186973125
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the error message is hidden,1.0,2,1.5,1.0587075226797105,0.019900268658550355
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the program always restarts,1.0,3,2.0,0.8641448276022388,0.16221698530436054
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the exception is caught implicitly,4.0,4,4.0,1.0641553659868896,0.020077082349575004
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,python converts it into a warning,5.0,2,3.5,1.2767350937182202,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the error is stored in a log file by default,4.0,2,3.0,1.0846992908012152,0.020223792785598778
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the error is handled without writing any code,0.0,0,0.0,1.0864349518725687,0.017063942515714248
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,python automatically fixes the error,0.0,0,0.0,1.0993664691051852,0.02066175475037966
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the program enters debugging mode,5.0,4,4.5,0.85064222423671,0.12628458190516992
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,exceptions are ignored in interactive mode,3.0,2,2.5,1.2379794930638286,0.0
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the function where the exception occurred continues execution,2.0,0,1.0,1.0252351809868847,0.03447161428833192
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the error is printed and then ignored,4.0,0,2.0,1.0527275915672942,0.018144302515264374
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the exception object is discarded,3.0,3,3.0,1.069800173806383,0.022392164379863324
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the program continues if it's inside a loop,3.0,2,2.5,0.8793881822193373,0.1387802646376975
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the exception is resolved using default values,3.0,5,4.0,1.0844432157783428,0.018663329452152027
18.9,What will happen if an exception is not handled in Python?,the program will terminate with a traceback,the error is sent to a separate thread,4.0,3,3.5,1.0602958712282895,0.017136887986169972
19.1,What does super() do in Python?,calls a method from the parent class,used in inheritance,4.0,3,3.5,1.2001674911213835,0.0
19.1,What does super() do in Python?,calls a method from the parent class,helps in calling overridden methods,4.0,3,3.5,1.090388216181427,0.0
19.1,What does super() do in Python?,calls a method from the parent class,supports multiple inheritance,4.0,3,3.5,1.3091532963078472,0.0
19.1,What does super() do in Python?,calls a method from the parent class,prevents direct hardcoding of parent class names,4.0,1,2.5,0.8465001128963081,0.22995136983368641
19.1,What does super() do in Python?,calls a method from the parent class,ensures method resolution order (mro),0.0,4,2.0,1.0972624682593077,0.15464355329862361
19.1,What does super() do in Python?,calls a method from the parent class,common in object-oriented programming,0.0,2,1.0,1.206829916974978,0.0
19.1,What does super() do in Python?,calls a method from the parent class,can be used with __init__ methods,3.0,3,3.0,1.1818576026834027,0.0
19.1,What does super() do in Python?,calls a method from the parent class,works with cooperative multiple inheritance,3.0,1,2.0,1.2875379828652065,0.0
19.1,What does super() do in Python?,calls a method from the parent class,reduces redundant code,1.0,4,2.5,1.3296775057925931,0.0
19.1,What does super() do in Python?,calls a method from the parent class,allows calling a specific superclass method,1.0,4,2.5,1.006350654822337,0.16669598669687505
19.1,What does super() do in Python?,calls a method from the parent class,calls a method from the parent class,2.0,3,2.5,0.0,1.0
19.1,What does super() do in Python?,calls a method from the parent class,calls a method from the parent class,4.0,4,4.0,0.0,1.0
19.1,What does super() do in Python?,calls a method from the parent class,calls a method from the parent class,3.0,2,2.5,0.0,1.0
19.1,What does super() do in Python?,calls a method from the parent class,calls the child class method,0.0,2,1.0,0.38965171396208836,0.6452526688668236
19.1,What does super() do in Python?,calls a method from the parent class,only works in python 2,5.0,4,4.5,1.2341674937915492,0.0
19.1,What does super() do in Python?,calls a method from the parent class,used only in metaclasses,3.0,5,4.0,1.1919992184525685,0.0
19.1,What does super() do in Python?,calls a method from the parent class,only works with single inheritance,2.0,1,1.5,1.2353453033261586,0.0
19.1,What does super() do in Python?,calls a method from the parent class,automatically calls all parent methods,3.0,2,2.5,0.7375775874806882,0.4357460257012734
19.1,What does super() do in Python?,calls a method from the parent class,used only in abstract classes,5.0,0,2.5,1.1437748330354367,0.0
19.1,What does super() do in Python?,calls a method from the parent class,calls a method from any class in memory,3.0,2,2.5,0.5135847954995939,0.6806718413840975
19.1,What does super() do in Python?,calls a method from the parent class,cannot be used with __init__,5.0,4,4.5,1.26194802241787,0.0
19.1,What does super() do in Python?,calls a method from the parent class,faster than direct parent calls,1.0,1,1.0,0.8456049554919124,0.3913774285527497
19.1,What does super() do in Python?,calls a method from the parent class,works only in static methods,0.0,5,2.5,1.1183566021466242,0.0
19.1,What does super() do in Python?,calls a method from the parent class,works only with classes that have __super__,0.0,4,2.0,1.1708018987615347,0.0
19.1,What does super() do in Python?,calls a method from the parent class,cannot be overridden,3.0,1,2.0,1.3274265527743512,0.0
19.1,What does super() do in Python?,calls a method from the parent class,creates a new instance of the parent class,2.0,2,2.0,0.6394432500601164,0.33706513049026365
19.1,What does super() do in Python?,calls a method from the parent class,requires a separate module,2.0,2,2.0,1.2745918955353475,0.0
19.1,What does super() do in Python?,calls a method from the parent class,ignores method resolution order,2.0,1,1.5,1.0901439746816333,0.17760140808335462
19.1,What does super() do in Python?,calls a method from the parent class,calls all available parent class methods,3.0,5,4.0,0.5224389521704711,0.490614587014875
19.1,What does super() do in Python?,calls a method from the parent class,works only in private methods,3.0,5,4.0,1.0999657457432022,0.0
19.1,What does super() do in Python?,calls a method from the parent class,must be explicitly deleted after use,3.0,3,3.0,1.2398193542751983,0.0
19.1,What does super() do in Python?,calls a method from the parent class,cannot be used in constructors,3.0,3,3.0,1.238003138939109,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,defines attributes and methods,2.0,2,2.0,1.2907882111337563,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,supports object-oriented programming,2.0,2,2.0,1.315819090027396,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,can have constructors (__init__),1.0,3,2.0,1.2749534317297717,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,used to create multiple instances,0.0,4,2.0,1.1541199135322033,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,can inherit from other classes,4.0,3,3.5,1.2872516667169582,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,supports encapsulation,1.0,5,3.0,1.2967210851937814,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,can define instance and class variables,5.0,2,3.5,1.2729510507696655,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,helps in organizing code,5.0,1,3.0,1.1891386022063175,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,can contain static and instance methods,4.0,5,4.5,1.2752909060964694,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,enables code reusability,3.0,1,2.0,1.2746786584339174,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,a blueprint for creating objects,2.0,2,2.0,0.0,1.0000000000000002
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,a blueprint for creating objects,5.0,2,3.5,0.0,1.0000000000000002
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,a blueprint for creating objects,3.0,4,3.5,0.0,1.0000000000000002
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,a built-in python function,1.0,4,2.5,1.3521217469265914,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,only used for storing variables,1.0,4,2.5,1.0110443830337967,0.10213152931811202
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,a data type like int or str,0.0,2,1.0,1.2914066346583586,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,can only contain functions,1.0,1,1.0,1.2635103322048076,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,automatically executes when defined,4.0,5,4.5,1.2714214240329675,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,can only be instantiated once,4.0,0,2.0,1.238233890167531,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,cannot be inherited,3.0,3,3.0,1.2856390430360094,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,does not support attributes,0.0,1,0.5,1.2986036000003596,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,must have a constructor,4.0,3,3.5,1.2615959091629316,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,works only with primitive data types,5.0,2,3.5,1.2347548168088298,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,cannot have methods,3.0,2,2.5,1.2752030509072796,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,always mutable,3.0,2,2.5,1.2701930865885847,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,requires explicit memory allocation,1.0,2,1.5,1.2787666826244173,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,is the same as an object,4.0,3,3.5,1.1711162337485042,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,used only for inheritance,1.0,1,1.0,0.999741112874488,0.10945327347372386
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,cannot be nested,1.0,5,3.0,1.295203026964323,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,supports only static methods,1.0,1,1.0,1.2352636351703377,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,works only with python 3,3.0,5,4.0,1.2542678442500754,0.0
19.2,Which of the following best describes a class in Python?,a blueprint for creating objects,does not support multiple inheritance,2.0,5,3.5,1.2906399538896272,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,acts as a constructor,2.0,1,1.5,1.2869449039183678,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,automatically called when an object is created,4.0,4,4.0,1.0598410459416556,0.10016946836787292
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,used to set initial values for attributes,5.0,3,4.0,1.3127404034979506,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,can take arguments,1.0,2,1.5,1.3317959817496137,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,helps in encapsulation,0.0,5,2.5,1.300500295585457,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,can have default parameter values,4.0,3,3.5,1.262792834723376,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,used for setting up object properties,0.0,3,1.5,1.3005633921438329,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,can be overridden in subclasses,1.0,0,0.5,1.2720939145737917,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,makes object initialization easier,4.0,3,3.5,1.222381291835138,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,belongs to instance methods,4.0,3,3.5,0.9981709811654236,0.20121034019263812
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,initializes an instance of a class,1.0,2,1.5,0.0,1.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,initializes an instance of a class,3.0,1,2.0,0.0,1.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,initializes an instance of a class,2.0,0,1.0,0.0,1.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,initializes an instance of a class,2.0,1,1.5,0.0,1.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,only runs once per program execution,4.0,3,3.5,1.2751664761863934,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,used for deleting objects,1.0,3,2.0,1.2762590854869398,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,a static method,0.0,4,2.0,1.2736195926619007,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,the same as __del__,1.0,2,1.5,1.253580594306699,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,cannot have parameters,4.0,3,3.5,1.3015434866209081,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,does not return anything,1.0,0,0.5,1.3207209586044284,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,a built-in function,3.0,4,3.5,1.3170047825061673,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,runs before the class is defined,5.0,2,3.5,1.0487344062005237,0.13105930694077794
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,cannot be overridden,3.0,1,2.0,1.3052022198934585,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,must be explicitly called,3.0,1,2.0,1.2772002558639324,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,used only for inheritance,3.0,3,3.0,1.2829805093107312,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,works only in python 2,5.0,4,4.5,1.3009976680174988,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,cannot be used in multiple inheritance,5.0,1,3.0,1.2947759636992067,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,makes objects immutable,3.0,4,3.5,1.3064607045430703,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,called when the program ends,1.0,4,2.5,1.2542390564521078,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,automatically deletes attributes,2.0,0,1.0,1.260787199719327,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,used for defining private variables,3.0,1,2.0,1.2752889768025693,0.0
19.3,What is the purpose of the __init__ method in Python classes?,initializes an instance of a class,works only with global variables,4.0,2,3.0,1.270282352165118,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,class derivedclass(baseclass):,3.0,1,2.0,0.0,0.11246840098615238
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,inheritance allows code reuse,2.0,3,2.5,1.3782925884205788,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,supports multiple inheritance,0.0,2,1.0,1.37215958189728,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,helps in extending functionality,2.0,1,1.5,1.3308280694523908,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,subclasses can override parent methods,1.0,2,1.5,1.3225453893620038,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,uses the method resolution order (mro),3.0,4,3.5,1.3351004691062018,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,can use super() to call parent methods,1.0,1,1.0,1.3507005022364742,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,parent class attributes are accessible in subclasses,2.0,1,1.5,1.1131930251435118,0.10278925498113149
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,enables polymorphism,4.0,1,2.5,1.341755553248041,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,inherited attributes can be modified in subclasses,2.0,5,3.5,1.307289848917557,0.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,class subclass(parentclass):,3.0,1,2.0,0.0,1.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,class subclass(parentclass):,4.0,4,4.0,0.0,1.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,class subclass(parentclass):,4.0,5,4.5,0.0,1.0
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,inherit parentclass,3.0,5,4.0,1.3418910140261915,0.36684126361851704
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,derive parentclass,3.0,2,2.5,1.4178602720362703,0.36045417952544256
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,extends parentclass,3.0,5,4.0,1.3693080030188616,0.3416648367965665
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,subclass parentclass,5.0,4,4.5,1.1269027483155771,0.915135191282475
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,inherits parentclass,0.0,4,2.0,1.3347589287549069,0.3524659483446008
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,uses parentclass,5.0,5,5.0,1.3919079746248935,0.4319293837448536
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,override parentclass,4.0,1,2.5,1.364931640685372,0.3524659483446008
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,static parentclass,4.0,4,4.0,1.3947038159968832,0.49261901002685743
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,super parentclass,4.0,4,4.0,1.2515621137153716,0.3877776936978749
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,implements parentclass,1.0,5,3.0,1.3849995597150577,0.36684126361851704
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,link parentclass,1.0,0,0.5,1.4110332985748857,0.41041473146650254
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,adopt parentclass,1.0,1,1.0,1.3527491645577927,0.3416648367965665
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,derive-class parentclass,2.0,4,3.0,inf,0.47671949001590574
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,extend parentclass,3.0,4,3.5,1.3998702603386635,0.3524659483446008
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,uses-class parentclass,0.0,4,2.0,inf,0.5571846107744228
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,self parentclass,4.0,2,3.0,1.316108542676433,0.39855219808612635
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,parent parentclass,1.0,4,2.5,1.3118938892204366,0.4696983627760356
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,base parentclass,1.0,4,2.5,1.3367948837855665,0.4689180333806533
19.4,Which keyword is used to inherit from a parent class in Python?,class subclass(parentclass):,reference parentclass,2.0,3,2.5,1.3626314685574752,0.48789535242029186
